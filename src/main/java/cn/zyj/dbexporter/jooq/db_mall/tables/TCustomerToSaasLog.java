/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TCustomerToSaasLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 客户跳转至saas日志记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCustomerToSaasLog extends TableImpl<TCustomerToSaasLogRecord> {

    private static final long serialVersionUID = -1255194821;

    /**
     * The reference instance of <code>db_mall.t_customer_to_saas_log</code>
     */
    public static final TCustomerToSaasLog T_CUSTOMER_TO_SAAS_LOG = new TCustomerToSaasLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCustomerToSaasLogRecord> getRecordType() {
        return TCustomerToSaasLogRecord.class;
    }

    /**
     * The column <code>db_mall.t_customer_to_saas_log.id</code>. 主键id
     */
    public final TableField<TCustomerToSaasLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "主键id");

    /**
     * The column <code>db_mall.t_customer_to_saas_log.customer_id</code>. 客户id
     */
    public final TableField<TCustomerToSaasLogRecord, Integer> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "客户id");

    /**
     * The column <code>db_mall.t_customer_to_saas_log.company_name</code>. 客户名称
     */
    public final TableField<TCustomerToSaasLogRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR(300), this, "客户名称");

    /**
     * The column <code>db_mall.t_customer_to_saas_log.day_time</code>. 所在天,格式yyyyMMdd
     */
    public final TableField<TCustomerToSaasLogRecord, Integer> DAY_TIME = createField("day_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "所在天,格式yyyyMMdd");

    /**
     * The column <code>db_mall.t_customer_to_saas_log.cdate</code>. 创建时间
     */
    public final TableField<TCustomerToSaasLogRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>db_mall.t_customer_to_saas_log.mdate</code>. 修改时间
     */
    public final TableField<TCustomerToSaasLogRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * Create a <code>db_mall.t_customer_to_saas_log</code> table reference
     */
    public TCustomerToSaasLog() {
        this(DSL.name("t_customer_to_saas_log"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_customer_to_saas_log</code> table reference
     */
    public TCustomerToSaasLog(String alias) {
        this(DSL.name(alias), T_CUSTOMER_TO_SAAS_LOG);
    }

    /**
     * Create an aliased <code>db_mall.t_customer_to_saas_log</code> table reference
     */
    public TCustomerToSaasLog(Name alias) {
        this(alias, T_CUSTOMER_TO_SAAS_LOG);
    }

    private TCustomerToSaasLog(Name alias, Table<TCustomerToSaasLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCustomerToSaasLog(Name alias, Table<TCustomerToSaasLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("客户跳转至saas日志记录表"));
    }

    public <O extends Record> TCustomerToSaasLog(Table<O> child, ForeignKey<O, TCustomerToSaasLogRecord> key) {
        super(child, key, T_CUSTOMER_TO_SAAS_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CUSTOMER_TO_SAAS_LOG_KEY_CUSTOMER_ID, Indexes.T_CUSTOMER_TO_SAAS_LOG_KEY_DAY_TIME, Indexes.T_CUSTOMER_TO_SAAS_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCustomerToSaasLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_CUSTOMER_TO_SAAS_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCustomerToSaasLogRecord> getPrimaryKey() {
        return Keys.KEY_T_CUSTOMER_TO_SAAS_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCustomerToSaasLogRecord>> getKeys() {
        return Arrays.<UniqueKey<TCustomerToSaasLogRecord>>asList(Keys.KEY_T_CUSTOMER_TO_SAAS_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomerToSaasLog as(String alias) {
        return new TCustomerToSaasLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomerToSaasLog as(Name alias) {
        return new TCustomerToSaasLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomerToSaasLog rename(String name) {
        return new TCustomerToSaasLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomerToSaasLog rename(Name name) {
        return new TCustomerToSaasLog(name, null);
    }
}
