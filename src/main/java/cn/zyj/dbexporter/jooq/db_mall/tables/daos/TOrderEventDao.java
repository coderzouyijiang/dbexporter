/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables.daos;


import cn.zyj.dbexporter.jooq.db_mall.tables.TOrderEvent;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TOrderEventRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * 订单事件记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderEventDao extends DAOImpl<TOrderEventRecord, cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent, Long> {

    /**
     * Create a new TOrderEventDao without any configuration
     */
    public TOrderEventDao() {
        super(TOrderEvent.T_ORDER_EVENT, cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent.class);
    }

    /**
     * Create a new TOrderEventDao with an attached configuration
     */
    public TOrderEventDao(Configuration configuration) {
        super(TOrderEvent.T_ORDER_EVENT, cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent> fetchById(Long... values) {
        return fetch(TOrderEvent.T_ORDER_EVENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent fetchOneById(Long value) {
        return fetchOne(TOrderEvent.T_ORDER_EVENT.ID, value);
    }

    /**
     * Fetch records that have <code>message_id IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent> fetchByMessageId(String... values) {
        return fetch(TOrderEvent.T_ORDER_EVENT.MESSAGE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>message_id = value</code>
     */
    public cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent fetchOneByMessageId(String value) {
        return fetchOne(TOrderEvent.T_ORDER_EVENT.MESSAGE_ID, value);
    }

    /**
     * Fetch records that have <code>customer_id IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent> fetchByCustomerId(Long... values) {
        return fetch(TOrderEvent.T_ORDER_EVENT.CUSTOMER_ID, values);
    }

    /**
     * Fetch records that have <code>order_id IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent> fetchByOrderId(String... values) {
        return fetch(TOrderEvent.T_ORDER_EVENT.ORDER_ID, values);
    }

    /**
     * Fetch records that have <code>operator IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent> fetchByOperator(String... values) {
        return fetch(TOrderEvent.T_ORDER_EVENT.OPERATOR, values);
    }

    /**
     * Fetch records that have <code>message IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent> fetchByMessage(String... values) {
        return fetch(TOrderEvent.T_ORDER_EVENT.MESSAGE, values);
    }

    /**
     * Fetch records that have <code>event_type IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent> fetchByEventType(Integer... values) {
        return fetch(TOrderEvent.T_ORDER_EVENT.EVENT_TYPE, values);
    }

    /**
     * Fetch records that have <code>operate_time IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent> fetchByOperateTime(Timestamp... values) {
        return fetch(TOrderEvent.T_ORDER_EVENT.OPERATE_TIME, values);
    }

    /**
     * Fetch records that have <code>update_time IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TOrderEvent> fetchByUpdateTime(Timestamp... values) {
        return fetch(TOrderEvent.T_ORDER_EVENT.UPDATE_TIME, values);
    }
}
