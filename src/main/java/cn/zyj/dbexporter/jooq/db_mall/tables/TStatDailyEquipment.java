/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TStatDailyEquipmentRecord;

import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TStatDailyEquipment extends TableImpl<TStatDailyEquipmentRecord> {

    private static final long serialVersionUID = -1618813479;

    /**
     * The reference instance of <code>db_mall.t_stat_daily_equipment</code>
     */
    public static final TStatDailyEquipment T_STAT_DAILY_EQUIPMENT = new TStatDailyEquipment();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TStatDailyEquipmentRecord> getRecordType() {
        return TStatDailyEquipmentRecord.class;
    }

    /**
     * The column <code>db_mall.t_stat_daily_equipment.id</code>.
     */
    public final TableField<TStatDailyEquipmentRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_stat_daily_equipment.stat_date</code>.
     */
    public final TableField<TStatDailyEquipmentRecord, Date> STAT_DATE = createField("stat_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_stat_daily_equipment.total_num</code>. 总量
     */
    public final TableField<TStatDailyEquipmentRecord, Long> TOTAL_NUM = createField("total_num", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "总量");

    /**
     * The column <code>db_mall.t_stat_daily_equipment.added_num</code>. 当日新增数量
     */
    public final TableField<TStatDailyEquipmentRecord, Integer> ADDED_NUM = createField("added_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "当日新增数量");

    /**
     * The column <code>db_mall.t_stat_daily_equipment.canceled_num</code>. 当日取消数量
     */
    public final TableField<TStatDailyEquipmentRecord, Integer> CANCELED_NUM = createField("canceled_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "当日取消数量");

    /**
     * The column <code>db_mall.t_stat_daily_equipment.diff_num</code>. 当日净增量
     */
    public final TableField<TStatDailyEquipmentRecord, Integer> DIFF_NUM = createField("diff_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "当日净增量");

    /**
     * The column <code>db_mall.t_stat_daily_equipment.addcanceled_num</code>.
     */
    public final TableField<TStatDailyEquipmentRecord, Integer> ADDCANCELED_NUM = createField("addcanceled_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_stat_daily_equipment.cdate</code>.
     */
    public final TableField<TStatDailyEquipmentRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_stat_daily_equipment.mdate</code>.
     */
    public final TableField<TStatDailyEquipmentRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_stat_daily_equipment</code> table reference
     */
    public TStatDailyEquipment() {
        this(DSL.name("t_stat_daily_equipment"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_stat_daily_equipment</code> table reference
     */
    public TStatDailyEquipment(String alias) {
        this(DSL.name(alias), T_STAT_DAILY_EQUIPMENT);
    }

    /**
     * Create an aliased <code>db_mall.t_stat_daily_equipment</code> table reference
     */
    public TStatDailyEquipment(Name alias) {
        this(alias, T_STAT_DAILY_EQUIPMENT);
    }

    private TStatDailyEquipment(Name alias, Table<TStatDailyEquipmentRecord> aliased) {
        this(alias, aliased, null);
    }

    private TStatDailyEquipment(Name alias, Table<TStatDailyEquipmentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TStatDailyEquipment(Table<O> child, ForeignKey<O, TStatDailyEquipmentRecord> key) {
        super(child, key, T_STAT_DAILY_EQUIPMENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_STAT_DAILY_EQUIPMENT_IND_STAT_DATE, Indexes.T_STAT_DAILY_EQUIPMENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TStatDailyEquipmentRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_STAT_DAILY_EQUIPMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TStatDailyEquipmentRecord> getPrimaryKey() {
        return Keys.KEY_T_STAT_DAILY_EQUIPMENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TStatDailyEquipmentRecord>> getKeys() {
        return Arrays.<UniqueKey<TStatDailyEquipmentRecord>>asList(Keys.KEY_T_STAT_DAILY_EQUIPMENT_PRIMARY, Keys.KEY_T_STAT_DAILY_EQUIPMENT_IND_STAT_DATE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TStatDailyEquipment as(String alias) {
        return new TStatDailyEquipment(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TStatDailyEquipment as(Name alias) {
        return new TStatDailyEquipment(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TStatDailyEquipment rename(String name) {
        return new TStatDailyEquipment(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TStatDailyEquipment rename(Name name) {
        return new TStatDailyEquipment(name, null);
    }
}
