/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TProductRentTypeRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductRentType extends TableImpl<TProductRentTypeRecord> {

    private static final long serialVersionUID = -571683243;

    /**
     * The reference instance of <code>db_mall.t_product_rent_type</code>
     */
    public static final TProductRentType T_PRODUCT_RENT_TYPE = new TProductRentType();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProductRentTypeRecord> getRecordType() {
        return TProductRentTypeRecord.class;
    }

    /**
     * The column <code>db_mall.t_product_rent_type.id</code>.
     */
    public final TableField<TProductRentTypeRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_product_rent_type.product_id</code>. 商品id
     */
    public final TableField<TProductRentTypeRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商品id");

    /**
     * The column <code>db_mall.t_product_rent_type.total_month</code>. 总期数
     */
    public final TableField<TProductRentTypeRecord, Short> TOTAL_MONTH = createField("total_month", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "总期数");

    /**
     * The column <code>db_mall.t_product_rent_type.first_rent</code>. 首期租金
     */
    public final TableField<TProductRentTypeRecord, BigDecimal> FIRST_RENT = createField("first_rent", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "首期租金");

    /**
     * The column <code>db_mall.t_product_rent_type.rent_type_desc</code>.
     */
    public final TableField<TProductRentTypeRecord, String> RENT_TYPE_DESC = createField("rent_type_desc", org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>db_mall.t_product_rent_type.is_recommend</code>. 是否推荐
     */
    public final TableField<TProductRentTypeRecord, Boolean> IS_RECOMMEND = createField("is_recommend", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "是否推荐");

    /**
     * The column <code>db_mall.t_product_rent_type.status</code>.
     */
    public final TableField<TProductRentTypeRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_product_rent_type.risk</code>. 风险系数
     */
    public final TableField<TProductRentTypeRecord, Byte> RISK = createField("risk", org.jooq.impl.SQLDataType.TINYINT, this, "风险系数");

    /**
     * The column <code>db_mall.t_product_rent_type.cdate</code>. 创建时间
     */
    public final TableField<TProductRentTypeRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>db_mall.t_product_rent_type.mdate</code>. 修改时间
     */
    public final TableField<TProductRentTypeRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * Create a <code>db_mall.t_product_rent_type</code> table reference
     */
    public TProductRentType() {
        this(DSL.name("t_product_rent_type"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_product_rent_type</code> table reference
     */
    public TProductRentType(String alias) {
        this(DSL.name(alias), T_PRODUCT_RENT_TYPE);
    }

    /**
     * Create an aliased <code>db_mall.t_product_rent_type</code> table reference
     */
    public TProductRentType(Name alias) {
        this(alias, T_PRODUCT_RENT_TYPE);
    }

    private TProductRentType(Name alias, Table<TProductRentTypeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProductRentType(Name alias, Table<TProductRentTypeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TProductRentType(Table<O> child, ForeignKey<O, TProductRentTypeRecord> key) {
        super(child, key, T_PRODUCT_RENT_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRODUCT_RENT_TYPE_PRIMARY, Indexes.T_PRODUCT_RENT_TYPE_PRODUCT_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TProductRentTypeRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_PRODUCT_RENT_TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProductRentTypeRecord> getPrimaryKey() {
        return Keys.KEY_T_PRODUCT_RENT_TYPE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProductRentTypeRecord>> getKeys() {
        return Arrays.<UniqueKey<TProductRentTypeRecord>>asList(Keys.KEY_T_PRODUCT_RENT_TYPE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductRentType as(String alias) {
        return new TProductRentType(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductRentType as(Name alias) {
        return new TProductRentType(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductRentType rename(String name) {
        return new TProductRentType(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductRentType rename(Name name) {
        return new TProductRentType(name, null);
    }
}
