/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TDeviceAllocateRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TDeviceAllocate extends TableImpl<TDeviceAllocateRecord> {

    private static final long serialVersionUID = 1817925189;

    /**
     * The reference instance of <code>db_mall.t_device_allocate</code>
     */
    public static final TDeviceAllocate T_DEVICE_ALLOCATE = new TDeviceAllocate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TDeviceAllocateRecord> getRecordType() {
        return TDeviceAllocateRecord.class;
    }

    /**
     * The column <code>db_mall.t_device_allocate.id</code>. 自增主键
     */
    public final TableField<TDeviceAllocateRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "自增主键");

    /**
     * The column <code>db_mall.t_device_allocate.main_customer_id</code>. 集团账号
     */
    public final TableField<TDeviceAllocateRecord, Long> MAIN_CUSTOMER_ID = createField("main_customer_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "集团账号");

    /**
     * The column <code>db_mall.t_device_allocate.from_customer_id</code>. 调出公司id
     */
    public final TableField<TDeviceAllocateRecord, Long> FROM_CUSTOMER_ID = createField("from_customer_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "调出公司id");

    /**
     * The column <code>db_mall.t_device_allocate.from_company_name</code>. 调出公司名称
     */
    public final TableField<TDeviceAllocateRecord, String> FROM_COMPANY_NAME = createField("from_company_name", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "调出公司名称");

    /**
     * The column <code>db_mall.t_device_allocate.from_order_id</code>. 调出公司单号
     */
    public final TableField<TDeviceAllocateRecord, String> FROM_ORDER_ID = createField("from_order_id", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "调出公司单号");

    /**
     * The column <code>db_mall.t_device_allocate.from_item_detail_id</code>. 调出设备id
     */
    public final TableField<TDeviceAllocateRecord, Long> FROM_ITEM_DETAIL_ID = createField("from_item_detail_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "调出设备id");

    /**
     * The column <code>db_mall.t_device_allocate.to_customer_id</code>. 调入公司id
     */
    public final TableField<TDeviceAllocateRecord, Long> TO_CUSTOMER_ID = createField("to_customer_id", org.jooq.impl.SQLDataType.BIGINT, this, "调入公司id");

    /**
     * The column <code>db_mall.t_device_allocate.to_company_name</code>. 调入公司名称
     */
    public final TableField<TDeviceAllocateRecord, String> TO_COMPANY_NAME = createField("to_company_name", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "调入公司名称");

    /**
     * The column <code>db_mall.t_device_allocate.to_order_id</code>. 调入公司单号
     */
    public final TableField<TDeviceAllocateRecord, String> TO_ORDER_ID = createField("to_order_id", org.jooq.impl.SQLDataType.VARCHAR(50), this, "调入公司单号");

    /**
     * The column <code>db_mall.t_device_allocate.to_item_detail_id</code>. 调入设备id
     */
    public final TableField<TDeviceAllocateRecord, Long> TO_ITEM_DETAIL_ID = createField("to_item_detail_id", org.jooq.impl.SQLDataType.BIGINT, this, "调入设备id");

    /**
     * The column <code>db_mall.t_device_allocate.title</code>. 型号
     */
    public final TableField<TDeviceAllocateRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "型号");

    /**
     * The column <code>db_mall.t_device_allocate.sn</code>. 设备序列号
     */
    public final TableField<TDeviceAllocateRecord, String> SN = createField("sn", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "设备序列号");

    /**
     * The column <code>db_mall.t_device_allocate.rent</code>.
     */
    public final TableField<TDeviceAllocateRecord, BigDecimal> RENT = createField("rent", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_device_allocate.cdate</code>.
     */
    public final TableField<TDeviceAllocateRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>db_mall.t_device_allocate.mdate</code>.
     */
    public final TableField<TDeviceAllocateRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>db_mall.t_device_allocate</code> table reference
     */
    public TDeviceAllocate() {
        this(DSL.name("t_device_allocate"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_device_allocate</code> table reference
     */
    public TDeviceAllocate(String alias) {
        this(DSL.name(alias), T_DEVICE_ALLOCATE);
    }

    /**
     * Create an aliased <code>db_mall.t_device_allocate</code> table reference
     */
    public TDeviceAllocate(Name alias) {
        this(alias, T_DEVICE_ALLOCATE);
    }

    private TDeviceAllocate(Name alias, Table<TDeviceAllocateRecord> aliased) {
        this(alias, aliased, null);
    }

    private TDeviceAllocate(Name alias, Table<TDeviceAllocateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TDeviceAllocate(Table<O> child, ForeignKey<O, TDeviceAllocateRecord> key) {
        super(child, key, T_DEVICE_ALLOCATE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_DEVICE_ALLOCATE_FROM_CUSTOMER_ID, Indexes.T_DEVICE_ALLOCATE_FROM_ORDER_ID, Indexes.T_DEVICE_ALLOCATE_PRIMARY, Indexes.T_DEVICE_ALLOCATE_SN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TDeviceAllocateRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_DEVICE_ALLOCATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TDeviceAllocateRecord> getPrimaryKey() {
        return Keys.KEY_T_DEVICE_ALLOCATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TDeviceAllocateRecord>> getKeys() {
        return Arrays.<UniqueKey<TDeviceAllocateRecord>>asList(Keys.KEY_T_DEVICE_ALLOCATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDeviceAllocate as(String alias) {
        return new TDeviceAllocate(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TDeviceAllocate as(Name alias) {
        return new TDeviceAllocate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TDeviceAllocate rename(String name) {
        return new TDeviceAllocate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TDeviceAllocate rename(Name name) {
        return new TDeviceAllocate(name, null);
    }
}
