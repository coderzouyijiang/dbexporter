/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TOrderItemsRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderItems extends TableImpl<TOrderItemsRecord> {

    private static final long serialVersionUID = -1803504445;

    /**
     * The reference instance of <code>db_mall.t_order_items</code>
     */
    public static final TOrderItems T_ORDER_ITEMS = new TOrderItems();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOrderItemsRecord> getRecordType() {
        return TOrderItemsRecord.class;
    }

    /**
     * The column <code>db_mall.t_order_items.id</code>.
     */
    public final TableField<TOrderItemsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_order_items.do_status</code>.
     */
    public final TableField<TOrderItemsRecord, Byte> DO_STATUS = createField("do_status", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_order_items.images_url</code>.
     */
    public final TableField<TOrderItemsRecord, String> IMAGES_URL = createField("images_url", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>db_mall.t_order_items.order_id</code>.
     */
    public final TableField<TOrderItemsRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items.product_id</code>.
     */
    public final TableField<TOrderItemsRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items.sku_ids</code>.
     */
    public final TableField<TOrderItemsRecord, String> SKU_IDS = createField("sku_ids", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items.sku_rents</code>.
     */
    public final TableField<TOrderItemsRecord, String> SKU_RENTS = createField("sku_rents", org.jooq.impl.SQLDataType.VARCHAR(4096), this, "");

    /**
     * The column <code>db_mall.t_order_items.num</code>.
     */
    public final TableField<TOrderItemsRecord, Integer> NUM = createField("num", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items.title</code>.
     */
    public final TableField<TOrderItemsRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items.sub_title</code>.
     */
    public final TableField<TOrderItemsRecord, String> SUB_TITLE = createField("sub_title", org.jooq.impl.SQLDataType.VARCHAR(300), this, "");

    /**
     * The column <code>db_mall.t_order_items.mini_title</code>.
     */
    public final TableField<TOrderItemsRecord, String> MINI_TITLE = createField("mini_title", org.jooq.impl.SQLDataType.VARCHAR(300), this, "");

    /**
     * The column <code>db_mall.t_order_items.images</code>.
     */
    public final TableField<TOrderItemsRecord, String> IMAGES = createField("images", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items.condition</code>.
     */
    public final TableField<TOrderItemsRecord, Byte> CONDITION = createField("condition", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items.rent_type</code>.
     */
    public final TableField<TOrderItemsRecord, Byte> RENT_TYPE = createField("rent_type", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>db_mall.t_order_items.product_describe_c_id</code>.
     */
    public final TableField<TOrderItemsRecord, Long> PRODUCT_DESCRIBE_C_ID = createField("product_describe_c_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items.product_describe_p_id</code>.
     */
    public final TableField<TOrderItemsRecord, Long> PRODUCT_DESCRIBE_P_ID = createField("product_describe_p_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items.rents</code>.
     */
    public final TableField<TOrderItemsRecord, String> RENTS = createField("rents", org.jooq.impl.SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>db_mall.t_order_items.month</code>.
     */
    public final TableField<TOrderItemsRecord, Integer> MONTH = createField("month", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_order_items.deposit</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> DEPOSIT = createField("deposit", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.old_deposit</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> OLD_DEPOSIT = createField("old_deposit", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.rent</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> RENT = createField("rent", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.old_rent</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> OLD_RENT = createField("old_rent", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.insurance_type</code>.
     */
    public final TableField<TOrderItemsRecord, Integer> INSURANCE_TYPE = createField("insurance_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_order_items.insurance_amount</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> INSURANCE_AMOUNT = createField("insurance_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.added_service_type</code>. 增值服务类型
     */
    public final TableField<TOrderItemsRecord, Byte> ADDED_SERVICE_TYPE = createField("added_service_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "增值服务类型");

    /**
     * The column <code>db_mall.t_order_items.old_insurance_amount</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> OLD_INSURANCE_AMOUNT = createField("old_insurance_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.added_service_amount</code>. 增值服务金额
     */
    public final TableField<TOrderItemsRecord, BigDecimal> ADDED_SERVICE_AMOUNT = createField("added_service_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "增值服务金额");

    /**
     * The column <code>db_mall.t_order_items.soft_service_type</code>. 销售商品软件服务
     */
    public final TableField<TOrderItemsRecord, Byte> SOFT_SERVICE_TYPE = createField("soft_service_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "销售商品软件服务");

    /**
     * The column <code>db_mall.t_order_items.soft_service_amount</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> SOFT_SERVICE_AMOUNT = createField("soft_service_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.onsite_service_type</code>. 销售商品上门服务
     */
    public final TableField<TOrderItemsRecord, Byte> ONSITE_SERVICE_TYPE = createField("onsite_service_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "销售商品上门服务");

    /**
     * The column <code>db_mall.t_order_items.onsite_service_amount</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> ONSITE_SERVICE_AMOUNT = createField("onsite_service_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.service_id</code>.
     */
    public final TableField<TOrderItemsRecord, Integer> SERVICE_ID = createField("service_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items.sale_price</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> SALE_PRICE = createField("sale_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.old_sale_price</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> OLD_SALE_PRICE = createField("old_sale_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.is_sale</code>.
     */
    public final TableField<TOrderItemsRecord, Byte> IS_SALE = createField("is_sale", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_order_items.product_r</code>.
     */
    public final TableField<TOrderItemsRecord, Integer> PRODUCT_R = createField("product_r", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_order_items.customer_r</code>.
     */
    public final TableField<TOrderItemsRecord, Integer> CUSTOMER_R = createField("customer_r", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_order_items.payed_amount</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> PAYED_AMOUNT = createField("payed_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.e_currency_virtual</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> E_CURRENCY_VIRTUAL = createField("e_currency_virtual", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.pay_deposit</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> PAY_DEPOSIT = createField("pay_deposit", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.coupon_amount</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> COUPON_AMOUNT = createField("coupon_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.credit_deposit</code>.
     */
    public final TableField<TOrderItemsRecord, BigDecimal> CREDIT_DEPOSIT = createField("credit_deposit", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items.source_item_id</code>.
     */
    public final TableField<TOrderItemsRecord, Integer> SOURCE_ITEM_ID = createField("source_item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_order_items.cdate</code>.
     */
    public final TableField<TOrderItemsRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items.mdate</code>.
     */
    public final TableField<TOrderItemsRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items.rent_type_id</code>.
     */
    public final TableField<TOrderItemsRecord, Integer> RENT_TYPE_ID = createField("rent_type_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db_mall.t_order_items.pay_type</code>. 商品支付方式 0:销售,1:月付, 2:季付,  3:半年付, 4:年付
     */
    public final TableField<TOrderItemsRecord, Byte> PAY_TYPE = createField("pay_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "商品支付方式 0:销售,1:月付, 2:季付,  3:半年付, 4:年付");

    /**
     * Create a <code>db_mall.t_order_items</code> table reference
     */
    public TOrderItems() {
        this(DSL.name("t_order_items"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_order_items</code> table reference
     */
    public TOrderItems(String alias) {
        this(DSL.name(alias), T_ORDER_ITEMS);
    }

    /**
     * Create an aliased <code>db_mall.t_order_items</code> table reference
     */
    public TOrderItems(Name alias) {
        this(alias, T_ORDER_ITEMS);
    }

    private TOrderItems(Name alias, Table<TOrderItemsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOrderItems(Name alias, Table<TOrderItemsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TOrderItems(Table<O> child, ForeignKey<O, TOrderItemsRecord> key) {
        super(child, key, T_ORDER_ITEMS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ORDER_ITEMS_ORDER_ID, Indexes.T_ORDER_ITEMS_PRIMARY, Indexes.T_ORDER_ITEMS_PRODUCT_ID, Indexes.T_ORDER_ITEMS_SOURCE_ITEM_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TOrderItemsRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_ORDER_ITEMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOrderItemsRecord> getPrimaryKey() {
        return Keys.KEY_T_ORDER_ITEMS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOrderItemsRecord>> getKeys() {
        return Arrays.<UniqueKey<TOrderItemsRecord>>asList(Keys.KEY_T_ORDER_ITEMS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderItems as(String alias) {
        return new TOrderItems(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderItems as(Name alias) {
        return new TOrderItems(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderItems rename(String name) {
        return new TOrderItems(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderItems rename(Name name) {
        return new TOrderItems(name, null);
    }
}
