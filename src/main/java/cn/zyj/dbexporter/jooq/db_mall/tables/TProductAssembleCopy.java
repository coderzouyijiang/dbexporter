/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TProductAssembleCopyRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductAssembleCopy extends TableImpl<TProductAssembleCopyRecord> {

    private static final long serialVersionUID = 11038250;

    /**
     * The reference instance of <code>db_mall.t_product_assemble_copy</code>
     */
    public static final TProductAssembleCopy T_PRODUCT_ASSEMBLE_COPY = new TProductAssembleCopy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProductAssembleCopyRecord> getRecordType() {
        return TProductAssembleCopyRecord.class;
    }

    /**
     * The column <code>db_mall.t_product_assemble_copy.id</code>.
     */
    public final TableField<TProductAssembleCopyRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_product_assemble_copy.title</code>.
     */
    public final TableField<TProductAssembleCopyRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_assemble_copy.category_id</code>.
     */
    public final TableField<TProductAssembleCopyRecord, Integer> CATEGORY_ID = createField("category_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_product_assemble_copy.brand_id</code>.
     */
    public final TableField<TProductAssembleCopyRecord, Integer> BRAND_ID = createField("brand_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_product_assemble_copy.product_ids</code>.
     */
    public final TableField<TProductAssembleCopyRecord, String> PRODUCT_IDS = createField("product_ids", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_assemble_copy.status</code>.
     */
    public final TableField<TProductAssembleCopyRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_product_assemble_copy.cdate</code>.
     */
    public final TableField<TProductAssembleCopyRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_assemble_copy.mdate</code>.
     */
    public final TableField<TProductAssembleCopyRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_product_assemble_copy</code> table reference
     */
    public TProductAssembleCopy() {
        this(DSL.name("t_product_assemble_copy"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_product_assemble_copy</code> table reference
     */
    public TProductAssembleCopy(String alias) {
        this(DSL.name(alias), T_PRODUCT_ASSEMBLE_COPY);
    }

    /**
     * Create an aliased <code>db_mall.t_product_assemble_copy</code> table reference
     */
    public TProductAssembleCopy(Name alias) {
        this(alias, T_PRODUCT_ASSEMBLE_COPY);
    }

    private TProductAssembleCopy(Name alias, Table<TProductAssembleCopyRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProductAssembleCopy(Name alias, Table<TProductAssembleCopyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TProductAssembleCopy(Table<O> child, ForeignKey<O, TProductAssembleCopyRecord> key) {
        super(child, key, T_PRODUCT_ASSEMBLE_COPY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRODUCT_ASSEMBLE_COPY_PRIMARY, Indexes.T_PRODUCT_ASSEMBLE_COPY_STATUS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TProductAssembleCopyRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_PRODUCT_ASSEMBLE_COPY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProductAssembleCopyRecord> getPrimaryKey() {
        return Keys.KEY_T_PRODUCT_ASSEMBLE_COPY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProductAssembleCopyRecord>> getKeys() {
        return Arrays.<UniqueKey<TProductAssembleCopyRecord>>asList(Keys.KEY_T_PRODUCT_ASSEMBLE_COPY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductAssembleCopy as(String alias) {
        return new TProductAssembleCopy(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductAssembleCopy as(Name alias) {
        return new TProductAssembleCopy(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductAssembleCopy rename(String name) {
        return new TProductAssembleCopy(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductAssembleCopy rename(Name name) {
        return new TProductAssembleCopy(name, null);
    }
}
