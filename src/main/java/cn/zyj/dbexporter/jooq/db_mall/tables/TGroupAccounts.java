/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TGroupAccountsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TGroupAccounts extends TableImpl<TGroupAccountsRecord> {

    private static final long serialVersionUID = -2112438171;

    /**
     * The reference instance of <code>db_mall.t_group_accounts</code>
     */
    public static final TGroupAccounts T_GROUP_ACCOUNTS = new TGroupAccounts();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TGroupAccountsRecord> getRecordType() {
        return TGroupAccountsRecord.class;
    }

    /**
     * The column <code>db_mall.t_group_accounts.id</code>.
     */
    public final TableField<TGroupAccountsRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_group_accounts.account</code>. 账号
     */
    public final TableField<TGroupAccountsRecord, String> ACCOUNT = createField("account", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "账号");

    /**
     * The column <code>db_mall.t_group_accounts.true_name</code>. 真是姓名
     */
    public final TableField<TGroupAccountsRecord, String> TRUE_NAME = createField("true_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "真是姓名");

    /**
     * The column <code>db_mall.t_group_accounts.password</code>. 密码
     */
    public final TableField<TGroupAccountsRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "密码");

    /**
     * The column <code>db_mall.t_group_accounts.salt</code>.
     */
    public final TableField<TGroupAccountsRecord, String> SALT = createField("salt", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>db_mall.t_group_accounts.phone</code>. 通知手机号
     */
    public final TableField<TGroupAccountsRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.CHAR(11), this, "通知手机号");

    /**
     * The column <code>db_mall.t_group_accounts.status</code>.
     */
    public final TableField<TGroupAccountsRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_group_accounts.mall_account_id</code>.
     */
    public final TableField<TGroupAccountsRecord, Long> MALL_ACCOUNT_ID = createField("mall_account_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_group_accounts.group_id</code>. 所属集团
     */
    public final TableField<TGroupAccountsRecord, Integer> GROUP_ID = createField("group_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "所属集团");

    /**
     * The column <code>db_mall.t_group_accounts.error_login_time</code>.
     */
    public final TableField<TGroupAccountsRecord, Integer> ERROR_LOGIN_TIME = createField("error_login_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_group_accounts.cdate</code>.
     */
    public final TableField<TGroupAccountsRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>db_mall.t_group_accounts.mdate</code>.
     */
    public final TableField<TGroupAccountsRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>db_mall.t_group_accounts</code> table reference
     */
    public TGroupAccounts() {
        this(DSL.name("t_group_accounts"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_group_accounts</code> table reference
     */
    public TGroupAccounts(String alias) {
        this(DSL.name(alias), T_GROUP_ACCOUNTS);
    }

    /**
     * Create an aliased <code>db_mall.t_group_accounts</code> table reference
     */
    public TGroupAccounts(Name alias) {
        this(alias, T_GROUP_ACCOUNTS);
    }

    private TGroupAccounts(Name alias, Table<TGroupAccountsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TGroupAccounts(Name alias, Table<TGroupAccountsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TGroupAccounts(Table<O> child, ForeignKey<O, TGroupAccountsRecord> key) {
        super(child, key, T_GROUP_ACCOUNTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_GROUP_ACCOUNTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TGroupAccountsRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_GROUP_ACCOUNTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TGroupAccountsRecord> getPrimaryKey() {
        return Keys.KEY_T_GROUP_ACCOUNTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TGroupAccountsRecord>> getKeys() {
        return Arrays.<UniqueKey<TGroupAccountsRecord>>asList(Keys.KEY_T_GROUP_ACCOUNTS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TGroupAccounts as(String alias) {
        return new TGroupAccounts(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TGroupAccounts as(Name alias) {
        return new TGroupAccounts(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TGroupAccounts rename(String name) {
        return new TGroupAccounts(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TGroupAccounts rename(Name name) {
        return new TGroupAccounts(name, null);
    }
}
