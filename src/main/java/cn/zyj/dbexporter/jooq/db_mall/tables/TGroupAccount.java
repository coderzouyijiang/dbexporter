/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TGroupAccountRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TGroupAccount extends TableImpl<TGroupAccountRecord> {

    private static final long serialVersionUID = 1356678581;

    /**
     * The reference instance of <code>db_mall.t_group_account</code>
     */
    public static final TGroupAccount T_GROUP_ACCOUNT = new TGroupAccount();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TGroupAccountRecord> getRecordType() {
        return TGroupAccountRecord.class;
    }

    /**
     * The column <code>db_mall.t_group_account.id</code>.
     */
    public final TableField<TGroupAccountRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_group_account.account</code>. 用户账号
     */
    public final TableField<TGroupAccountRecord, String> ACCOUNT = createField("account", org.jooq.impl.SQLDataType.VARCHAR(20), this, "用户账号");

    /**
     * The column <code>db_mall.t_group_account.password</code>. 登录密码
     */
    public final TableField<TGroupAccountRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(32), this, "登录密码");

    /**
     * The column <code>db_mall.t_group_account.phone</code>. 用户手机号
     */
    public final TableField<TGroupAccountRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.CHAR(11), this, "用户手机号");

    /**
     * The column <code>db_mall.t_group_account.salt</code>. 密码加盐
     */
    public final TableField<TGroupAccountRecord, String> SALT = createField("salt", org.jooq.impl.SQLDataType.VARCHAR(32), this, "密码加盐");

    /**
     * The column <code>db_mall.t_group_account.true_name</code>. 真实姓名
     */
    public final TableField<TGroupAccountRecord, String> TRUE_NAME = createField("true_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "真实姓名");

    /**
     * The column <code>db_mall.t_group_account.company_name</code>. 公司名称
     */
    public final TableField<TGroupAccountRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR(300), this, "公司名称");

    /**
     * The column <code>db_mall.t_group_account.server_remark</code>. 客服备注
     */
    public final TableField<TGroupAccountRecord, String> SERVER_REMARK = createField("server_remark", org.jooq.impl.SQLDataType.VARCHAR(500), this, "客服备注");

    /**
     * The column <code>db_mall.t_group_account.status</code>. 客户状态(0:禁用;1:启用 2：已删除)
     */
    public final TableField<TGroupAccountRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT, this, "客户状态(0:禁用;1:启用 2：已删除)");

    /**
     * The column <code>db_mall.t_group_account.error_login_time</code>. 连续错误登录次数
     */
    public final TableField<TGroupAccountRecord, Integer> ERROR_LOGIN_TIME = createField("error_login_time", org.jooq.impl.SQLDataType.INTEGER, this, "连续错误登录次数");

    /**
     * The column <code>db_mall.t_group_account.cdate</code>. 创建时间
     */
    public final TableField<TGroupAccountRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "创建时间");

    /**
     * The column <code>db_mall.t_group_account.mdate</code>. 修改时间
     */
    public final TableField<TGroupAccountRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * Create a <code>db_mall.t_group_account</code> table reference
     */
    public TGroupAccount() {
        this(DSL.name("t_group_account"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_group_account</code> table reference
     */
    public TGroupAccount(String alias) {
        this(DSL.name(alias), T_GROUP_ACCOUNT);
    }

    /**
     * Create an aliased <code>db_mall.t_group_account</code> table reference
     */
    public TGroupAccount(Name alias) {
        this(alias, T_GROUP_ACCOUNT);
    }

    private TGroupAccount(Name alias, Table<TGroupAccountRecord> aliased) {
        this(alias, aliased, null);
    }

    private TGroupAccount(Name alias, Table<TGroupAccountRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TGroupAccount(Table<O> child, ForeignKey<O, TGroupAccountRecord> key) {
        super(child, key, T_GROUP_ACCOUNT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_GROUP_ACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TGroupAccountRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_GROUP_ACCOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TGroupAccountRecord> getPrimaryKey() {
        return Keys.KEY_T_GROUP_ACCOUNT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TGroupAccountRecord>> getKeys() {
        return Arrays.<UniqueKey<TGroupAccountRecord>>asList(Keys.KEY_T_GROUP_ACCOUNT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TGroupAccount as(String alias) {
        return new TGroupAccount(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TGroupAccount as(Name alias) {
        return new TGroupAccount(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TGroupAccount rename(String name) {
        return new TGroupAccount(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TGroupAccount rename(Name name) {
        return new TGroupAccount(name, null);
    }
}
