/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TCustomerAddressRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCustomerAddress extends TableImpl<TCustomerAddressRecord> {

    private static final long serialVersionUID = -452444308;

    /**
     * The reference instance of <code>db_mall.t_customer_address</code>
     */
    public static final TCustomerAddress T_CUSTOMER_ADDRESS = new TCustomerAddress();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCustomerAddressRecord> getRecordType() {
        return TCustomerAddressRecord.class;
    }

    /**
     * The column <code>db_mall.t_customer_address.id</code>.
     */
    public final TableField<TCustomerAddressRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_customer_address.customer_id</code>.
     */
    public final TableField<TCustomerAddressRecord, Integer> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_customer_address.name</code>.
     */
    public final TableField<TCustomerAddressRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_customer_address.address</code>.
     */
    public final TableField<TCustomerAddressRecord, String> ADDRESS = createField("address", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_customer_address.phone</code>.
     */
    public final TableField<TCustomerAddressRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_customer_address.province_id</code>.
     */
    public final TableField<TCustomerAddressRecord, Integer> PROVINCE_ID = createField("province_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_customer_address.bcity_id</code>.
     */
    public final TableField<TCustomerAddressRecord, Integer> BCITY_ID = createField("bcity_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_customer_address.scity_id</code>.
     */
    public final TableField<TCustomerAddressRecord, Integer> SCITY_ID = createField("scity_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_customer_address.is_default</code>.
     */
    public final TableField<TCustomerAddressRecord, Byte> IS_DEFAULT = createField("is_default", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_customer_address.status</code>.
     */
    public final TableField<TCustomerAddressRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_customer_address.cdate</code>.
     */
    public final TableField<TCustomerAddressRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_customer_address.mdate</code>.
     */
    public final TableField<TCustomerAddressRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_customer_address</code> table reference
     */
    public TCustomerAddress() {
        this(DSL.name("t_customer_address"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_customer_address</code> table reference
     */
    public TCustomerAddress(String alias) {
        this(DSL.name(alias), T_CUSTOMER_ADDRESS);
    }

    /**
     * Create an aliased <code>db_mall.t_customer_address</code> table reference
     */
    public TCustomerAddress(Name alias) {
        this(alias, T_CUSTOMER_ADDRESS);
    }

    private TCustomerAddress(Name alias, Table<TCustomerAddressRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCustomerAddress(Name alias, Table<TCustomerAddressRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TCustomerAddress(Table<O> child, ForeignKey<O, TCustomerAddressRecord> key) {
        super(child, key, T_CUSTOMER_ADDRESS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CUSTOMER_ADDRESS_C_S_D, Indexes.T_CUSTOMER_ADDRESS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCustomerAddressRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_CUSTOMER_ADDRESS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCustomerAddressRecord> getPrimaryKey() {
        return Keys.KEY_T_CUSTOMER_ADDRESS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCustomerAddressRecord>> getKeys() {
        return Arrays.<UniqueKey<TCustomerAddressRecord>>asList(Keys.KEY_T_CUSTOMER_ADDRESS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomerAddress as(String alias) {
        return new TCustomerAddress(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomerAddress as(Name alias) {
        return new TCustomerAddress(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomerAddress rename(String name) {
        return new TCustomerAddress(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomerAddress rename(Name name) {
        return new TCustomerAddress(name, null);
    }
}
