/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables.daos;


import cn.zyj.dbexporter.jooq.db_mall.tables.TPriceCalc;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TPriceCalcRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPriceCalcDao extends DAOImpl<TPriceCalcRecord, cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc, Integer> {

    /**
     * Create a new TPriceCalcDao without any configuration
     */
    public TPriceCalcDao() {
        super(TPriceCalc.T_PRICE_CALC, cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc.class);
    }

    /**
     * Create a new TPriceCalcDao with an attached configuration
     */
    public TPriceCalcDao(Configuration configuration) {
        super(TPriceCalc.T_PRICE_CALC, cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc> fetchById(Integer... values) {
        return fetch(TPriceCalc.T_PRICE_CALC.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc fetchOneById(Integer value) {
        return fetchOne(TPriceCalc.T_PRICE_CALC.ID, value);
    }

    /**
     * Fetch records that have <code>model IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc> fetchByModel(String... values) {
        return fetch(TPriceCalc.T_PRICE_CALC.MODEL, values);
    }

    /**
     * Fetch records that have <code>rent IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc> fetchByRent(String... values) {
        return fetch(TPriceCalc.T_PRICE_CALC.RENT, values);
    }

    /**
     * Fetch records that have <code>buy_price IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc> fetchByBuyPrice(String... values) {
        return fetch(TPriceCalc.T_PRICE_CALC.BUY_PRICE, values);
    }

    /**
     * Fetch records that have <code>deal_price IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc> fetchByDealPrice(String... values) {
        return fetch(TPriceCalc.T_PRICE_CALC.DEAL_PRICE, values);
    }

    /**
     * Fetch records that have <code>profit IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc> fetchByProfit(String... values) {
        return fetch(TPriceCalc.T_PRICE_CALC.PROFIT, values);
    }

    /**
     * Fetch records that have <code>return_rate IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc> fetchByReturnRate(String... values) {
        return fetch(TPriceCalc.T_PRICE_CALC.RETURN_RATE, values);
    }

    /**
     * Fetch records that have <code>val IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc> fetchByVal(String... values) {
        return fetch(TPriceCalc.T_PRICE_CALC.VAL, values);
    }

    /**
     * Fetch records that have <code>cdate IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc> fetchByCdate(Timestamp... values) {
        return fetch(TPriceCalc.T_PRICE_CALC.CDATE, values);
    }

    /**
     * Fetch records that have <code>mdate IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TPriceCalc> fetchByMdate(Timestamp... values) {
        return fetch(TPriceCalc.T_PRICE_CALC.MDATE, values);
    }
}
