/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TProductCheckRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductCheck extends TableImpl<TProductCheckRecord> {

    private static final long serialVersionUID = -1193453265;

    /**
     * The reference instance of <code>db_mall.t_product_check</code>
     */
    public static final TProductCheck T_PRODUCT_CHECK = new TProductCheck();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProductCheckRecord> getRecordType() {
        return TProductCheckRecord.class;
    }

    /**
     * The column <code>db_mall.t_product_check.id</code>.
     */
    public final TableField<TProductCheckRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_product_check.product_id</code>.
     */
    public final TableField<TProductCheckRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_check.manager_id</code>.
     */
    public final TableField<TProductCheckRecord, Integer> MANAGER_ID = createField("manager_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_check.check_status</code>.
     */
    public final TableField<TProductCheckRecord, Byte> CHECK_STATUS = createField("check_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_check.check_remark</code>.
     */
    public final TableField<TProductCheckRecord, String> CHECK_REMARK = createField("check_remark", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>db_mall.t_product_check.cdate</code>.
     */
    public final TableField<TProductCheckRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_check.mdate</code>.
     */
    public final TableField<TProductCheckRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_product_check</code> table reference
     */
    public TProductCheck() {
        this(DSL.name("t_product_check"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_product_check</code> table reference
     */
    public TProductCheck(String alias) {
        this(DSL.name(alias), T_PRODUCT_CHECK);
    }

    /**
     * Create an aliased <code>db_mall.t_product_check</code> table reference
     */
    public TProductCheck(Name alias) {
        this(alias, T_PRODUCT_CHECK);
    }

    private TProductCheck(Name alias, Table<TProductCheckRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProductCheck(Name alias, Table<TProductCheckRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TProductCheck(Table<O> child, ForeignKey<O, TProductCheckRecord> key) {
        super(child, key, T_PRODUCT_CHECK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRODUCT_CHECK_PRIMARY, Indexes.T_PRODUCT_CHECK_PRODUCT_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TProductCheckRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_PRODUCT_CHECK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProductCheckRecord> getPrimaryKey() {
        return Keys.KEY_T_PRODUCT_CHECK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProductCheckRecord>> getKeys() {
        return Arrays.<UniqueKey<TProductCheckRecord>>asList(Keys.KEY_T_PRODUCT_CHECK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductCheck as(String alias) {
        return new TProductCheck(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductCheck as(Name alias) {
        return new TProductCheck(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductCheck rename(String name) {
        return new TProductCheck(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductCheck rename(Name name) {
        return new TProductCheck(name, null);
    }
}
