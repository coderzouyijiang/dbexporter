/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TIndexFloorCopyRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TIndexFloorCopy extends TableImpl<TIndexFloorCopyRecord> {

    private static final long serialVersionUID = 1850873912;

    /**
     * The reference instance of <code>db_mall.t_index_floor_copy</code>
     */
    public static final TIndexFloorCopy T_INDEX_FLOOR_COPY = new TIndexFloorCopy();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TIndexFloorCopyRecord> getRecordType() {
        return TIndexFloorCopyRecord.class;
    }

    /**
     * The column <code>db_mall.t_index_floor_copy.id</code>.
     */
    public final TableField<TIndexFloorCopyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_index_floor_copy.name</code>.
     */
    public final TableField<TIndexFloorCopyRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>db_mall.t_index_floor_copy.oid</code>.
     */
    public final TableField<TIndexFloorCopyRecord, Integer> OID = createField("oid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db_mall.t_index_floor_copy.status</code>.
     */
    public final TableField<TIndexFloorCopyRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_index_floor_copy.cdate</code>.
     */
    public final TableField<TIndexFloorCopyRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>db_mall.t_index_floor_copy.mdate</code>.
     */
    public final TableField<TIndexFloorCopyRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>db_mall.t_index_floor_copy</code> table reference
     */
    public TIndexFloorCopy() {
        this(DSL.name("t_index_floor_copy"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_index_floor_copy</code> table reference
     */
    public TIndexFloorCopy(String alias) {
        this(DSL.name(alias), T_INDEX_FLOOR_COPY);
    }

    /**
     * Create an aliased <code>db_mall.t_index_floor_copy</code> table reference
     */
    public TIndexFloorCopy(Name alias) {
        this(alias, T_INDEX_FLOOR_COPY);
    }

    private TIndexFloorCopy(Name alias, Table<TIndexFloorCopyRecord> aliased) {
        this(alias, aliased, null);
    }

    private TIndexFloorCopy(Name alias, Table<TIndexFloorCopyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TIndexFloorCopy(Table<O> child, ForeignKey<O, TIndexFloorCopyRecord> key) {
        super(child, key, T_INDEX_FLOOR_COPY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_INDEX_FLOOR_COPY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TIndexFloorCopyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_INDEX_FLOOR_COPY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TIndexFloorCopyRecord> getPrimaryKey() {
        return Keys.KEY_T_INDEX_FLOOR_COPY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TIndexFloorCopyRecord>> getKeys() {
        return Arrays.<UniqueKey<TIndexFloorCopyRecord>>asList(Keys.KEY_T_INDEX_FLOOR_COPY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TIndexFloorCopy as(String alias) {
        return new TIndexFloorCopy(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TIndexFloorCopy as(Name alias) {
        return new TIndexFloorCopy(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TIndexFloorCopy rename(String name) {
        return new TIndexFloorCopy(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TIndexFloorCopy rename(Name name) {
        return new TIndexFloorCopy(name, null);
    }
}
