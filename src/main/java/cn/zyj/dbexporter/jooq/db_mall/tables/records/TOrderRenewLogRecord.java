/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables.records;


import cn.zyj.dbexporter.jooq.db_mall.tables.TOrderRenewLog;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderRenewLogRecord extends UpdatableRecordImpl<TOrderRenewLogRecord> implements Record6<Long, String, String, Byte, Timestamp, Timestamp> {

    private static final long serialVersionUID = -2104942042;

    /**
     * Setter for <code>db_mall.t_order_renew_log.id</code>.
     */
    public TOrderRenewLogRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_order_renew_log.id</code>.
     */
    @NotNull
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>db_mall.t_order_renew_log.source_order_id</code>.
     */
    public TOrderRenewLogRecord setSourceOrderId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_order_renew_log.source_order_id</code>.
     */
    @NotNull
    @Size(max = 20)
    public String getSourceOrderId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>db_mall.t_order_renew_log.new_order_id</code>.
     */
    public TOrderRenewLogRecord setNewOrderId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_order_renew_log.new_order_id</code>.
     */
    @NotNull
    @Size(max = 20)
    public String getNewOrderId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>db_mall.t_order_renew_log.status</code>.
     */
    public TOrderRenewLogRecord setStatus(Byte value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_order_renew_log.status</code>.
     */
    public Byte getStatus() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>db_mall.t_order_renew_log.cdate</code>.
     */
    public TOrderRenewLogRecord setCdate(Timestamp value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_order_renew_log.cdate</code>.
     */
    @NotNull
    public Timestamp getCdate() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>db_mall.t_order_renew_log.mdate</code>.
     */
    public TOrderRenewLogRecord setMdate(Timestamp value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_order_renew_log.mdate</code>.
     */
    @NotNull
    public Timestamp getMdate() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, Byte, Timestamp, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Long, String, String, Byte, Timestamp, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TOrderRenewLog.T_ORDER_RENEW_LOG.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return TOrderRenewLog.T_ORDER_RENEW_LOG.SOURCE_ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TOrderRenewLog.T_ORDER_RENEW_LOG.NEW_ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return TOrderRenewLog.T_ORDER_RENEW_LOG.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return TOrderRenewLog.T_ORDER_RENEW_LOG.CDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return TOrderRenewLog.T_ORDER_RENEW_LOG.MDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getSourceOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getNewOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getCdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getMdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getSourceOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getNewOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getMdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRenewLogRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRenewLogRecord value2(String value) {
        setSourceOrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRenewLogRecord value3(String value) {
        setNewOrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRenewLogRecord value4(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRenewLogRecord value5(Timestamp value) {
        setCdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRenewLogRecord value6(Timestamp value) {
        setMdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRenewLogRecord values(Long value1, String value2, String value3, Byte value4, Timestamp value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TOrderRenewLogRecord
     */
    public TOrderRenewLogRecord() {
        super(TOrderRenewLog.T_ORDER_RENEW_LOG);
    }

    /**
     * Create a detached, initialised TOrderRenewLogRecord
     */
    public TOrderRenewLogRecord(Long id, String sourceOrderId, String newOrderId, Byte status, Timestamp cdate, Timestamp mdate) {
        super(TOrderRenewLog.T_ORDER_RENEW_LOG);

        set(0, id);
        set(1, sourceOrderId);
        set(2, newOrderId);
        set(3, status);
        set(4, cdate);
        set(5, mdate);
    }
}
