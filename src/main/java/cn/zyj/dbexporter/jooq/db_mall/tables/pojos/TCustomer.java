/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCustomer implements Serializable {

    private static final long serialVersionUID = 912773570;

    private Integer    id;
    private String     phone;
    private String     receivePhone;
    private String     email;
    private String     password;
    private String     salt;
    private Long       registerIp;
    private Timestamp  firstOrderTime;
    private Byte       payType;
    private Integer    bandId;
    private Integer    balanceDate;
    private Byte       isExpire;
    private Byte       source;
    private String     trueName;
    private String     cardNo;
    private String     companyName;
    private String     serverRemark;
    private Byte       status;
    private String     wxOpenId;
    private BigDecimal availableBalance;
    private BigDecimal exchangeFrozenBalance;
    private BigDecimal frozenBalance;
    private BigDecimal totalInvoiceBalance;
    private Integer    errorLoginTime;
    private BigDecimal demandWithdrawBalance;
    private BigDecimal availableInvoiceBalance;
    private BigDecimal eCurrencyVirtual;
    private BigDecimal eCurrencyTrue;
    private BigDecimal expireInvoiceBalance;
    private BigDecimal demandInvoiceBalance;
    private Byte       syncStatus;
    private String     fromAdSource;
    private Integer    regDate;
    private Timestamp  cdate;
    private Timestamp  mdate;
    private Integer    debitDate;
    private Byte       isPilot;
    private String     account;
    private Byte       isActivate;
    private Integer    authType;
    private Byte       billType;
    private Boolean    test;
    private BigDecimal pastAvailableInvoiceBalance;
    private Byte       isDynamicPayDateCustomer;
    private Integer    daysAfterWorkdays;

    public TCustomer() {}

    public TCustomer(TCustomer value) {
        this.id = value.id;
        this.phone = value.phone;
        this.receivePhone = value.receivePhone;
        this.email = value.email;
        this.password = value.password;
        this.salt = value.salt;
        this.registerIp = value.registerIp;
        this.firstOrderTime = value.firstOrderTime;
        this.payType = value.payType;
        this.bandId = value.bandId;
        this.balanceDate = value.balanceDate;
        this.isExpire = value.isExpire;
        this.source = value.source;
        this.trueName = value.trueName;
        this.cardNo = value.cardNo;
        this.companyName = value.companyName;
        this.serverRemark = value.serverRemark;
        this.status = value.status;
        this.wxOpenId = value.wxOpenId;
        this.availableBalance = value.availableBalance;
        this.exchangeFrozenBalance = value.exchangeFrozenBalance;
        this.frozenBalance = value.frozenBalance;
        this.totalInvoiceBalance = value.totalInvoiceBalance;
        this.errorLoginTime = value.errorLoginTime;
        this.demandWithdrawBalance = value.demandWithdrawBalance;
        this.availableInvoiceBalance = value.availableInvoiceBalance;
        this.eCurrencyVirtual = value.eCurrencyVirtual;
        this.eCurrencyTrue = value.eCurrencyTrue;
        this.expireInvoiceBalance = value.expireInvoiceBalance;
        this.demandInvoiceBalance = value.demandInvoiceBalance;
        this.syncStatus = value.syncStatus;
        this.fromAdSource = value.fromAdSource;
        this.regDate = value.regDate;
        this.cdate = value.cdate;
        this.mdate = value.mdate;
        this.debitDate = value.debitDate;
        this.isPilot = value.isPilot;
        this.account = value.account;
        this.isActivate = value.isActivate;
        this.authType = value.authType;
        this.billType = value.billType;
        this.test = value.test;
        this.pastAvailableInvoiceBalance = value.pastAvailableInvoiceBalance;
        this.isDynamicPayDateCustomer = value.isDynamicPayDateCustomer;
        this.daysAfterWorkdays = value.daysAfterWorkdays;
    }

    public TCustomer(
        Integer    id,
        String     phone,
        String     receivePhone,
        String     email,
        String     password,
        String     salt,
        Long       registerIp,
        Timestamp  firstOrderTime,
        Byte       payType,
        Integer    bandId,
        Integer    balanceDate,
        Byte       isExpire,
        Byte       source,
        String     trueName,
        String     cardNo,
        String     companyName,
        String     serverRemark,
        Byte       status,
        String     wxOpenId,
        BigDecimal availableBalance,
        BigDecimal exchangeFrozenBalance,
        BigDecimal frozenBalance,
        BigDecimal totalInvoiceBalance,
        Integer    errorLoginTime,
        BigDecimal demandWithdrawBalance,
        BigDecimal availableInvoiceBalance,
        BigDecimal eCurrencyVirtual,
        BigDecimal eCurrencyTrue,
        BigDecimal expireInvoiceBalance,
        BigDecimal demandInvoiceBalance,
        Byte       syncStatus,
        String     fromAdSource,
        Integer    regDate,
        Timestamp  cdate,
        Timestamp  mdate,
        Integer    debitDate,
        Byte       isPilot,
        String     account,
        Byte       isActivate,
        Integer    authType,
        Byte       billType,
        Boolean    test,
        BigDecimal pastAvailableInvoiceBalance,
        Byte       isDynamicPayDateCustomer,
        Integer    daysAfterWorkdays
    ) {
        this.id = id;
        this.phone = phone;
        this.receivePhone = receivePhone;
        this.email = email;
        this.password = password;
        this.salt = salt;
        this.registerIp = registerIp;
        this.firstOrderTime = firstOrderTime;
        this.payType = payType;
        this.bandId = bandId;
        this.balanceDate = balanceDate;
        this.isExpire = isExpire;
        this.source = source;
        this.trueName = trueName;
        this.cardNo = cardNo;
        this.companyName = companyName;
        this.serverRemark = serverRemark;
        this.status = status;
        this.wxOpenId = wxOpenId;
        this.availableBalance = availableBalance;
        this.exchangeFrozenBalance = exchangeFrozenBalance;
        this.frozenBalance = frozenBalance;
        this.totalInvoiceBalance = totalInvoiceBalance;
        this.errorLoginTime = errorLoginTime;
        this.demandWithdrawBalance = demandWithdrawBalance;
        this.availableInvoiceBalance = availableInvoiceBalance;
        this.eCurrencyVirtual = eCurrencyVirtual;
        this.eCurrencyTrue = eCurrencyTrue;
        this.expireInvoiceBalance = expireInvoiceBalance;
        this.demandInvoiceBalance = demandInvoiceBalance;
        this.syncStatus = syncStatus;
        this.fromAdSource = fromAdSource;
        this.regDate = regDate;
        this.cdate = cdate;
        this.mdate = mdate;
        this.debitDate = debitDate;
        this.isPilot = isPilot;
        this.account = account;
        this.isActivate = isActivate;
        this.authType = authType;
        this.billType = billType;
        this.test = test;
        this.pastAvailableInvoiceBalance = pastAvailableInvoiceBalance;
        this.isDynamicPayDateCustomer = isDynamicPayDateCustomer;
        this.daysAfterWorkdays = daysAfterWorkdays;
    }

    public Integer getId() {
        return this.id;
    }

    public TCustomer setId(Integer id) {
        this.id = id;
        return this;
    }

    @NotNull
    @Size(max = 11)
    public String getPhone() {
        return this.phone;
    }

    public TCustomer setPhone(String phone) {
        this.phone = phone;
        return this;
    }

    @NotNull
    @Size(max = 11)
    public String getReceivePhone() {
        return this.receivePhone;
    }

    public TCustomer setReceivePhone(String receivePhone) {
        this.receivePhone = receivePhone;
        return this;
    }

    @Size(max = 50)
    public String getEmail() {
        return this.email;
    }

    public TCustomer setEmail(String email) {
        this.email = email;
        return this;
    }

    @Size(max = 32)
    public String getPassword() {
        return this.password;
    }

    public TCustomer setPassword(String password) {
        this.password = password;
        return this;
    }

    @Size(max = 32)
    public String getSalt() {
        return this.salt;
    }

    public TCustomer setSalt(String salt) {
        this.salt = salt;
        return this;
    }

    @NotNull
    public Long getRegisterIp() {
        return this.registerIp;
    }

    public TCustomer setRegisterIp(Long registerIp) {
        this.registerIp = registerIp;
        return this;
    }

    public Timestamp getFirstOrderTime() {
        return this.firstOrderTime;
    }

    public TCustomer setFirstOrderTime(Timestamp firstOrderTime) {
        this.firstOrderTime = firstOrderTime;
        return this;
    }

    public Byte getPayType() {
        return this.payType;
    }

    public TCustomer setPayType(Byte payType) {
        this.payType = payType;
        return this;
    }

    public Integer getBandId() {
        return this.bandId;
    }

    public TCustomer setBandId(Integer bandId) {
        this.bandId = bandId;
        return this;
    }

    public Integer getBalanceDate() {
        return this.balanceDate;
    }

    public TCustomer setBalanceDate(Integer balanceDate) {
        this.balanceDate = balanceDate;
        return this;
    }

    public Byte getIsExpire() {
        return this.isExpire;
    }

    public TCustomer setIsExpire(Byte isExpire) {
        this.isExpire = isExpire;
        return this;
    }

    public Byte getSource() {
        return this.source;
    }

    public TCustomer setSource(Byte source) {
        this.source = source;
        return this;
    }

    @Size(max = 50)
    public String getTrueName() {
        return this.trueName;
    }

    public TCustomer setTrueName(String trueName) {
        this.trueName = trueName;
        return this;
    }

    @Size(max = 18)
    public String getCardNo() {
        return this.cardNo;
    }

    public TCustomer setCardNo(String cardNo) {
        this.cardNo = cardNo;
        return this;
    }

    @Size(max = 300)
    public String getCompanyName() {
        return this.companyName;
    }

    public TCustomer setCompanyName(String companyName) {
        this.companyName = companyName;
        return this;
    }

    @Size(max = 500)
    public String getServerRemark() {
        return this.serverRemark;
    }

    public TCustomer setServerRemark(String serverRemark) {
        this.serverRemark = serverRemark;
        return this;
    }

    public Byte getStatus() {
        return this.status;
    }

    public TCustomer setStatus(Byte status) {
        this.status = status;
        return this;
    }

    @Size(max = 64)
    public String getWxOpenId() {
        return this.wxOpenId;
    }

    public TCustomer setWxOpenId(String wxOpenId) {
        this.wxOpenId = wxOpenId;
        return this;
    }

    public BigDecimal getAvailableBalance() {
        return this.availableBalance;
    }

    public TCustomer setAvailableBalance(BigDecimal availableBalance) {
        this.availableBalance = availableBalance;
        return this;
    }

    public BigDecimal getExchangeFrozenBalance() {
        return this.exchangeFrozenBalance;
    }

    public TCustomer setExchangeFrozenBalance(BigDecimal exchangeFrozenBalance) {
        this.exchangeFrozenBalance = exchangeFrozenBalance;
        return this;
    }

    public BigDecimal getFrozenBalance() {
        return this.frozenBalance;
    }

    public TCustomer setFrozenBalance(BigDecimal frozenBalance) {
        this.frozenBalance = frozenBalance;
        return this;
    }

    public BigDecimal getTotalInvoiceBalance() {
        return this.totalInvoiceBalance;
    }

    public TCustomer setTotalInvoiceBalance(BigDecimal totalInvoiceBalance) {
        this.totalInvoiceBalance = totalInvoiceBalance;
        return this;
    }

    public Integer getErrorLoginTime() {
        return this.errorLoginTime;
    }

    public TCustomer setErrorLoginTime(Integer errorLoginTime) {
        this.errorLoginTime = errorLoginTime;
        return this;
    }

    public BigDecimal getDemandWithdrawBalance() {
        return this.demandWithdrawBalance;
    }

    public TCustomer setDemandWithdrawBalance(BigDecimal demandWithdrawBalance) {
        this.demandWithdrawBalance = demandWithdrawBalance;
        return this;
    }

    public BigDecimal getAvailableInvoiceBalance() {
        return this.availableInvoiceBalance;
    }

    public TCustomer setAvailableInvoiceBalance(BigDecimal availableInvoiceBalance) {
        this.availableInvoiceBalance = availableInvoiceBalance;
        return this;
    }

    public BigDecimal getECurrencyVirtual() {
        return this.eCurrencyVirtual;
    }

    public TCustomer setECurrencyVirtual(BigDecimal eCurrencyVirtual) {
        this.eCurrencyVirtual = eCurrencyVirtual;
        return this;
    }

    public BigDecimal getECurrencyTrue() {
        return this.eCurrencyTrue;
    }

    public TCustomer setECurrencyTrue(BigDecimal eCurrencyTrue) {
        this.eCurrencyTrue = eCurrencyTrue;
        return this;
    }

    public BigDecimal getExpireInvoiceBalance() {
        return this.expireInvoiceBalance;
    }

    public TCustomer setExpireInvoiceBalance(BigDecimal expireInvoiceBalance) {
        this.expireInvoiceBalance = expireInvoiceBalance;
        return this;
    }

    public BigDecimal getDemandInvoiceBalance() {
        return this.demandInvoiceBalance;
    }

    public TCustomer setDemandInvoiceBalance(BigDecimal demandInvoiceBalance) {
        this.demandInvoiceBalance = demandInvoiceBalance;
        return this;
    }

    public Byte getSyncStatus() {
        return this.syncStatus;
    }

    public TCustomer setSyncStatus(Byte syncStatus) {
        this.syncStatus = syncStatus;
        return this;
    }

    @Size(max = 100)
    public String getFromAdSource() {
        return this.fromAdSource;
    }

    public TCustomer setFromAdSource(String fromAdSource) {
        this.fromAdSource = fromAdSource;
        return this;
    }

    public Integer getRegDate() {
        return this.regDate;
    }

    public TCustomer setRegDate(Integer regDate) {
        this.regDate = regDate;
        return this;
    }

    @NotNull
    public Timestamp getCdate() {
        return this.cdate;
    }

    public TCustomer setCdate(Timestamp cdate) {
        this.cdate = cdate;
        return this;
    }

    public Timestamp getMdate() {
        return this.mdate;
    }

    public TCustomer setMdate(Timestamp mdate) {
        this.mdate = mdate;
        return this;
    }

    public Integer getDebitDate() {
        return this.debitDate;
    }

    public TCustomer setDebitDate(Integer debitDate) {
        this.debitDate = debitDate;
        return this;
    }

    public Byte getIsPilot() {
        return this.isPilot;
    }

    public TCustomer setIsPilot(Byte isPilot) {
        this.isPilot = isPilot;
        return this;
    }

    @Size(max = 100)
    public String getAccount() {
        return this.account;
    }

    public TCustomer setAccount(String account) {
        this.account = account;
        return this;
    }

    public Byte getIsActivate() {
        return this.isActivate;
    }

    public TCustomer setIsActivate(Byte isActivate) {
        this.isActivate = isActivate;
        return this;
    }

    public Integer getAuthType() {
        return this.authType;
    }

    public TCustomer setAuthType(Integer authType) {
        this.authType = authType;
        return this;
    }

    public Byte getBillType() {
        return this.billType;
    }

    public TCustomer setBillType(Byte billType) {
        this.billType = billType;
        return this;
    }

    public Boolean getTest() {
        return this.test;
    }

    public TCustomer setTest(Boolean test) {
        this.test = test;
        return this;
    }

    public BigDecimal getPastAvailableInvoiceBalance() {
        return this.pastAvailableInvoiceBalance;
    }

    public TCustomer setPastAvailableInvoiceBalance(BigDecimal pastAvailableInvoiceBalance) {
        this.pastAvailableInvoiceBalance = pastAvailableInvoiceBalance;
        return this;
    }

    public Byte getIsDynamicPayDateCustomer() {
        return this.isDynamicPayDateCustomer;
    }

    public TCustomer setIsDynamicPayDateCustomer(Byte isDynamicPayDateCustomer) {
        this.isDynamicPayDateCustomer = isDynamicPayDateCustomer;
        return this;
    }

    public Integer getDaysAfterWorkdays() {
        return this.daysAfterWorkdays;
    }

    public TCustomer setDaysAfterWorkdays(Integer daysAfterWorkdays) {
        this.daysAfterWorkdays = daysAfterWorkdays;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TCustomer (");

        sb.append(id);
        sb.append(", ").append(phone);
        sb.append(", ").append(receivePhone);
        sb.append(", ").append(email);
        sb.append(", ").append(password);
        sb.append(", ").append(salt);
        sb.append(", ").append(registerIp);
        sb.append(", ").append(firstOrderTime);
        sb.append(", ").append(payType);
        sb.append(", ").append(bandId);
        sb.append(", ").append(balanceDate);
        sb.append(", ").append(isExpire);
        sb.append(", ").append(source);
        sb.append(", ").append(trueName);
        sb.append(", ").append(cardNo);
        sb.append(", ").append(companyName);
        sb.append(", ").append(serverRemark);
        sb.append(", ").append(status);
        sb.append(", ").append(wxOpenId);
        sb.append(", ").append(availableBalance);
        sb.append(", ").append(exchangeFrozenBalance);
        sb.append(", ").append(frozenBalance);
        sb.append(", ").append(totalInvoiceBalance);
        sb.append(", ").append(errorLoginTime);
        sb.append(", ").append(demandWithdrawBalance);
        sb.append(", ").append(availableInvoiceBalance);
        sb.append(", ").append(eCurrencyVirtual);
        sb.append(", ").append(eCurrencyTrue);
        sb.append(", ").append(expireInvoiceBalance);
        sb.append(", ").append(demandInvoiceBalance);
        sb.append(", ").append(syncStatus);
        sb.append(", ").append(fromAdSource);
        sb.append(", ").append(regDate);
        sb.append(", ").append(cdate);
        sb.append(", ").append(mdate);
        sb.append(", ").append(debitDate);
        sb.append(", ").append(isPilot);
        sb.append(", ").append(account);
        sb.append(", ").append(isActivate);
        sb.append(", ").append(authType);
        sb.append(", ").append(billType);
        sb.append(", ").append(test);
        sb.append(", ").append(pastAvailableInvoiceBalance);
        sb.append(", ").append(isDynamicPayDateCustomer);
        sb.append(", ").append(daysAfterWorkdays);

        sb.append(")");
        return sb.toString();
    }
}
