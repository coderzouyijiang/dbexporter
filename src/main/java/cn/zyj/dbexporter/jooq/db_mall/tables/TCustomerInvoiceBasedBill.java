/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TCustomerInvoiceBasedBillRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCustomerInvoiceBasedBill extends TableImpl<TCustomerInvoiceBasedBillRecord> {

    private static final long serialVersionUID = -887690346;

    /**
     * The reference instance of <code>db_mall.t_customer_invoice_based_bill</code>
     */
    public static final TCustomerInvoiceBasedBill T_CUSTOMER_INVOICE_BASED_BILL = new TCustomerInvoiceBasedBill();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCustomerInvoiceBasedBillRecord> getRecordType() {
        return TCustomerInvoiceBasedBillRecord.class;
    }

    /**
     * The column <code>db_mall.t_customer_invoice_based_bill.id</code>.
     */
    public final TableField<TCustomerInvoiceBasedBillRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_customer_invoice_based_bill.customer_id</code>. 客户id
     */
    public final TableField<TCustomerInvoiceBasedBillRecord, Integer> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "客户id");

    /**
     * The column <code>db_mall.t_customer_invoice_based_bill.available_invoice_balance</code>. 可开票金额
     */
    public final TableField<TCustomerInvoiceBasedBillRecord, BigDecimal> AVAILABLE_INVOICE_BALANCE = createField("available_invoice_balance", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "可开票金额");

    /**
     * The column <code>db_mall.t_customer_invoice_based_bill.status</code>. 客户状态 0 禁用 1 启用
     */
    public final TableField<TCustomerInvoiceBasedBillRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "客户状态 0 禁用 1 启用");

    /**
     * The column <code>db_mall.t_customer_invoice_based_bill.cdate</code>.
     */
    public final TableField<TCustomerInvoiceBasedBillRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_customer_invoice_based_bill.mdate</code>.
     */
    public final TableField<TCustomerInvoiceBasedBillRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_customer_invoice_based_bill.start_month</code>. 从哪个月开始基于账单开票。默认空串，格式yyyyMM
     */
    public final TableField<TCustomerInvoiceBasedBillRecord, String> START_MONTH = createField("start_month", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "从哪个月开始基于账单开票。默认空串，格式yyyyMM");

    /**
     * Create a <code>db_mall.t_customer_invoice_based_bill</code> table reference
     */
    public TCustomerInvoiceBasedBill() {
        this(DSL.name("t_customer_invoice_based_bill"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_customer_invoice_based_bill</code> table reference
     */
    public TCustomerInvoiceBasedBill(String alias) {
        this(DSL.name(alias), T_CUSTOMER_INVOICE_BASED_BILL);
    }

    /**
     * Create an aliased <code>db_mall.t_customer_invoice_based_bill</code> table reference
     */
    public TCustomerInvoiceBasedBill(Name alias) {
        this(alias, T_CUSTOMER_INVOICE_BASED_BILL);
    }

    private TCustomerInvoiceBasedBill(Name alias, Table<TCustomerInvoiceBasedBillRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCustomerInvoiceBasedBill(Name alias, Table<TCustomerInvoiceBasedBillRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TCustomerInvoiceBasedBill(Table<O> child, ForeignKey<O, TCustomerInvoiceBasedBillRecord> key) {
        super(child, key, T_CUSTOMER_INVOICE_BASED_BILL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CUSTOMER_INVOICE_BASED_BILL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCustomerInvoiceBasedBillRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_CUSTOMER_INVOICE_BASED_BILL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCustomerInvoiceBasedBillRecord> getPrimaryKey() {
        return Keys.KEY_T_CUSTOMER_INVOICE_BASED_BILL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCustomerInvoiceBasedBillRecord>> getKeys() {
        return Arrays.<UniqueKey<TCustomerInvoiceBasedBillRecord>>asList(Keys.KEY_T_CUSTOMER_INVOICE_BASED_BILL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomerInvoiceBasedBill as(String alias) {
        return new TCustomerInvoiceBasedBill(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomerInvoiceBasedBill as(Name alias) {
        return new TCustomerInvoiceBasedBill(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomerInvoiceBasedBill rename(String name) {
        return new TCustomerInvoiceBasedBill(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomerInvoiceBasedBill rename(Name name) {
        return new TCustomerInvoiceBasedBill(name, null);
    }
}
