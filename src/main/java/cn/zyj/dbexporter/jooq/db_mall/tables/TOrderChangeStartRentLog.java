/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TOrderChangeStartRentLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderChangeStartRentLog extends TableImpl<TOrderChangeStartRentLogRecord> {

    private static final long serialVersionUID = 1721882808;

    /**
     * The reference instance of <code>db_mall.t_order_change_start_rent_log</code>
     */
    public static final TOrderChangeStartRentLog T_ORDER_CHANGE_START_RENT_LOG = new TOrderChangeStartRentLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOrderChangeStartRentLogRecord> getRecordType() {
        return TOrderChangeStartRentLogRecord.class;
    }

    /**
     * The column <code>db_mall.t_order_change_start_rent_log.id</code>.
     */
    public final TableField<TOrderChangeStartRentLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_order_change_start_rent_log.order_id</code>.
     */
    public final TableField<TOrderChangeStartRentLogRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_change_start_rent_log.start_date</code>.
     */
    public final TableField<TOrderChangeStartRentLogRecord, Integer> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_order_change_start_rent_log.sync_status</code>.
     */
    public final TableField<TOrderChangeStartRentLogRecord, Byte> SYNC_STATUS = createField("sync_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_order_change_start_rent_log.cdate</code>.
     */
    public final TableField<TOrderChangeStartRentLogRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_change_start_rent_log.mdate</code>.
     */
    public final TableField<TOrderChangeStartRentLogRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_order_change_start_rent_log</code> table reference
     */
    public TOrderChangeStartRentLog() {
        this(DSL.name("t_order_change_start_rent_log"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_order_change_start_rent_log</code> table reference
     */
    public TOrderChangeStartRentLog(String alias) {
        this(DSL.name(alias), T_ORDER_CHANGE_START_RENT_LOG);
    }

    /**
     * Create an aliased <code>db_mall.t_order_change_start_rent_log</code> table reference
     */
    public TOrderChangeStartRentLog(Name alias) {
        this(alias, T_ORDER_CHANGE_START_RENT_LOG);
    }

    private TOrderChangeStartRentLog(Name alias, Table<TOrderChangeStartRentLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOrderChangeStartRentLog(Name alias, Table<TOrderChangeStartRentLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TOrderChangeStartRentLog(Table<O> child, ForeignKey<O, TOrderChangeStartRentLogRecord> key) {
        super(child, key, T_ORDER_CHANGE_START_RENT_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ORDER_CHANGE_START_RENT_LOG_ORDER_ID, Indexes.T_ORDER_CHANGE_START_RENT_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TOrderChangeStartRentLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_ORDER_CHANGE_START_RENT_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOrderChangeStartRentLogRecord> getPrimaryKey() {
        return Keys.KEY_T_ORDER_CHANGE_START_RENT_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOrderChangeStartRentLogRecord>> getKeys() {
        return Arrays.<UniqueKey<TOrderChangeStartRentLogRecord>>asList(Keys.KEY_T_ORDER_CHANGE_START_RENT_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderChangeStartRentLog as(String alias) {
        return new TOrderChangeStartRentLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderChangeStartRentLog as(Name alias) {
        return new TOrderChangeStartRentLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderChangeStartRentLog rename(String name) {
        return new TOrderChangeStartRentLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderChangeStartRentLog rename(Name name) {
        return new TOrderChangeStartRentLog(name, null);
    }
}
