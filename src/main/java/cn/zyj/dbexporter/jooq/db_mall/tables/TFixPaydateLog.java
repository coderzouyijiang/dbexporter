/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TFixPaydateLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TFixPaydateLog extends TableImpl<TFixPaydateLogRecord> {

    private static final long serialVersionUID = -861040779;

    /**
     * The reference instance of <code>db_mall.t_fix_paydate_log</code>
     */
    public static final TFixPaydateLog T_FIX_PAYDATE_LOG = new TFixPaydateLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TFixPaydateLogRecord> getRecordType() {
        return TFixPaydateLogRecord.class;
    }

    /**
     * The column <code>db_mall.t_fix_paydate_log.id</code>.
     */
    public final TableField<TFixPaydateLogRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_fix_paydate_log.customer_id</code>.
     */
    public final TableField<TFixPaydateLogRecord, Long> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_fix_paydate_log.order_id</code>.
     */
    public final TableField<TFixPaydateLogRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_fix_paydate_log.order_bill_id</code>.
     */
    public final TableField<TFixPaydateLogRecord, Long> ORDER_BILL_ID = createField("order_bill_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_fix_paydate_log.customer_bill_id</code>.
     */
    public final TableField<TFixPaydateLogRecord, Long> CUSTOMER_BILL_ID = createField("customer_bill_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_fix_paydate_log.pay_date</code>.
     */
    public final TableField<TFixPaydateLogRecord, Timestamp> PAY_DATE = createField("pay_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_fix_paydate_log</code> table reference
     */
    public TFixPaydateLog() {
        this(DSL.name("t_fix_paydate_log"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_fix_paydate_log</code> table reference
     */
    public TFixPaydateLog(String alias) {
        this(DSL.name(alias), T_FIX_PAYDATE_LOG);
    }

    /**
     * Create an aliased <code>db_mall.t_fix_paydate_log</code> table reference
     */
    public TFixPaydateLog(Name alias) {
        this(alias, T_FIX_PAYDATE_LOG);
    }

    private TFixPaydateLog(Name alias, Table<TFixPaydateLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private TFixPaydateLog(Name alias, Table<TFixPaydateLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TFixPaydateLog(Table<O> child, ForeignKey<O, TFixPaydateLogRecord> key) {
        super(child, key, T_FIX_PAYDATE_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_FIX_PAYDATE_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TFixPaydateLogRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_FIX_PAYDATE_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TFixPaydateLogRecord> getPrimaryKey() {
        return Keys.KEY_T_FIX_PAYDATE_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TFixPaydateLogRecord>> getKeys() {
        return Arrays.<UniqueKey<TFixPaydateLogRecord>>asList(Keys.KEY_T_FIX_PAYDATE_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TFixPaydateLog as(String alias) {
        return new TFixPaydateLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TFixPaydateLog as(Name alias) {
        return new TFixPaydateLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TFixPaydateLog rename(String name) {
        return new TFixPaydateLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TFixPaydateLog rename(Name name) {
        return new TFixPaydateLog(name, null);
    }
}
