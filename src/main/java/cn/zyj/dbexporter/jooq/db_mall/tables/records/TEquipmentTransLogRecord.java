/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables.records;


import cn.zyj.dbexporter.jooq.db_mall.tables.TEquipmentTransLog;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * 设备事件变化历史记录表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TEquipmentTransLogRecord extends UpdatableRecordImpl<TEquipmentTransLogRecord> implements Record8<Long, Long, String, String, Byte, String, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1558194457;

    /**
     * Setter for <code>db_mall.t_equipment_trans_log.id</code>.
     */
    public TEquipmentTransLogRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_equipment_trans_log.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>db_mall.t_equipment_trans_log.customer_id</code>. 客户ID
     */
    public TEquipmentTransLogRecord setCustomerId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_equipment_trans_log.customer_id</code>. 客户ID
     */
    @NotNull
    public Long getCustomerId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>db_mall.t_equipment_trans_log.order_id</code>. 订单ID
     */
    public TEquipmentTransLogRecord setOrderId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_equipment_trans_log.order_id</code>. 订单ID
     */
    @NotNull
    @Size(max = 20)
    public String getOrderId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>db_mall.t_equipment_trans_log.sn</code>. 设备sn码
     */
    public TEquipmentTransLogRecord setSn(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_equipment_trans_log.sn</code>. 设备sn码
     */
    @Size(max = 50)
    public String getSn() {
        return (String) get(3);
    }

    /**
     * Setter for <code>db_mall.t_equipment_trans_log.current_status</code>. 设备当前状态
     */
    public TEquipmentTransLogRecord setCurrentStatus(Byte value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_equipment_trans_log.current_status</code>. 设备当前状态
     */
    @NotNull
    public Byte getCurrentStatus() {
        return (Byte) get(4);
    }

    /**
     * Setter for <code>db_mall.t_equipment_trans_log.source</code>. 来源，事件id
     */
    public TEquipmentTransLogRecord setSource(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_equipment_trans_log.source</code>. 来源，事件id
     */
    @NotNull
    @Size(max = 200)
    public String getSource() {
        return (String) get(5);
    }

    /**
     * Setter for <code>db_mall.t_equipment_trans_log.operate_time</code>. 操作时间
     */
    public TEquipmentTransLogRecord setOperateTime(Timestamp value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_equipment_trans_log.operate_time</code>. 操作时间
     */
    @NotNull
    public Timestamp getOperateTime() {
        return (Timestamp) get(6);
    }

    /**
     * Setter for <code>db_mall.t_equipment_trans_log.update_time</code>. 修改时间
     */
    public TEquipmentTransLogRecord setUpdateTime(Timestamp value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>db_mall.t_equipment_trans_log.update_time</code>. 修改时间
     */
    public Timestamp getUpdateTime() {
        return (Timestamp) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, Long, String, String, Byte, String, Timestamp, Timestamp> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, Long, String, String, Byte, String, Timestamp, Timestamp> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TEquipmentTransLog.T_EQUIPMENT_TRANS_LOG.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return TEquipmentTransLog.T_EQUIPMENT_TRANS_LOG.CUSTOMER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return TEquipmentTransLog.T_EQUIPMENT_TRANS_LOG.ORDER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return TEquipmentTransLog.T_EQUIPMENT_TRANS_LOG.SN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field5() {
        return TEquipmentTransLog.T_EQUIPMENT_TRANS_LOG.CURRENT_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return TEquipmentTransLog.T_EQUIPMENT_TRANS_LOG.SOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field7() {
        return TEquipmentTransLog.T_EQUIPMENT_TRANS_LOG.OPERATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field8() {
        return TEquipmentTransLog.T_EQUIPMENT_TRANS_LOG.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getSn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component5() {
        return getCurrentStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component7() {
        return getOperateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component8() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getOrderId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getSn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value5() {
        return getCurrentStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getSource();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value7() {
        return getOperateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value8() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEquipmentTransLogRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEquipmentTransLogRecord value2(Long value) {
        setCustomerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEquipmentTransLogRecord value3(String value) {
        setOrderId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEquipmentTransLogRecord value4(String value) {
        setSn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEquipmentTransLogRecord value5(Byte value) {
        setCurrentStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEquipmentTransLogRecord value6(String value) {
        setSource(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEquipmentTransLogRecord value7(Timestamp value) {
        setOperateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEquipmentTransLogRecord value8(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEquipmentTransLogRecord values(Long value1, Long value2, String value3, String value4, Byte value5, String value6, Timestamp value7, Timestamp value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TEquipmentTransLogRecord
     */
    public TEquipmentTransLogRecord() {
        super(TEquipmentTransLog.T_EQUIPMENT_TRANS_LOG);
    }

    /**
     * Create a detached, initialised TEquipmentTransLogRecord
     */
    public TEquipmentTransLogRecord(Long id, Long customerId, String orderId, String sn, Byte currentStatus, String source, Timestamp operateTime, Timestamp updateTime) {
        super(TEquipmentTransLog.T_EQUIPMENT_TRANS_LOG);

        set(0, id);
        set(1, customerId);
        set(2, orderId);
        set(3, sn);
        set(4, currentStatus);
        set(5, source);
        set(6, operateTime);
        set(7, updateTime);
    }
}
