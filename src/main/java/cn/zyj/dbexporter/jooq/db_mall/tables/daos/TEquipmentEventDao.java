/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables.daos;


import cn.zyj.dbexporter.jooq.db_mall.tables.TEquipmentEvent;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TEquipmentEventRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TEquipmentEventDao extends DAOImpl<TEquipmentEventRecord, cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent, String> {

    /**
     * Create a new TEquipmentEventDao without any configuration
     */
    public TEquipmentEventDao() {
        super(TEquipmentEvent.T_EQUIPMENT_EVENT, cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent.class);
    }

    /**
     * Create a new TEquipmentEventDao with an attached configuration
     */
    public TEquipmentEventDao(Configuration configuration) {
        super(TEquipmentEvent.T_EQUIPMENT_EVENT, cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected String getId(cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent> fetchById(String... values) {
        return fetch(TEquipmentEvent.T_EQUIPMENT_EVENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent fetchOneById(String value) {
        return fetchOne(TEquipmentEvent.T_EQUIPMENT_EVENT.ID, value);
    }

    /**
     * Fetch records that have <code>customer IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent> fetchByCustomer(Long... values) {
        return fetch(TEquipmentEvent.T_EQUIPMENT_EVENT.CUSTOMER, values);
    }

    /**
     * Fetch records that have <code>order_id IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent> fetchByOrderId(String... values) {
        return fetch(TEquipmentEvent.T_EQUIPMENT_EVENT.ORDER_ID, values);
    }

    /**
     * Fetch records that have <code>sn IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent> fetchBySn(String... values) {
        return fetch(TEquipmentEvent.T_EQUIPMENT_EVENT.SN, values);
    }

    /**
     * Fetch records that have <code>operator IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent> fetchByOperator(String... values) {
        return fetch(TEquipmentEvent.T_EQUIPMENT_EVENT.OPERATOR, values);
    }

    /**
     * Fetch records that have <code>message IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent> fetchByMessage(String... values) {
        return fetch(TEquipmentEvent.T_EQUIPMENT_EVENT.MESSAGE, values);
    }

    /**
     * Fetch records that have <code>event_type IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent> fetchByEventType(Byte... values) {
        return fetch(TEquipmentEvent.T_EQUIPMENT_EVENT.EVENT_TYPE, values);
    }

    /**
     * Fetch records that have <code>operate_time IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent> fetchByOperateTime(Timestamp... values) {
        return fetch(TEquipmentEvent.T_EQUIPMENT_EVENT.OPERATE_TIME, values);
    }

    /**
     * Fetch records that have <code>create_time IN (values)</code>
     */
    public List<cn.zyj.dbexporter.jooq.db_mall.tables.pojos.TEquipmentEvent> fetchByCreateTime(Timestamp... values) {
        return fetch(TEquipmentEvent.T_EQUIPMENT_EVENT.CREATE_TIME, values);
    }
}
