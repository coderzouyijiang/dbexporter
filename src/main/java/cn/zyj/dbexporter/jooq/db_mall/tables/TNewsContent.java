/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TNewsContentRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TNewsContent extends TableImpl<TNewsContentRecord> {

    private static final long serialVersionUID = 259159448;

    /**
     * The reference instance of <code>db_mall.t_news_content</code>
     */
    public static final TNewsContent T_NEWS_CONTENT = new TNewsContent();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TNewsContentRecord> getRecordType() {
        return TNewsContentRecord.class;
    }

    /**
     * The column <code>db_mall.t_news_content.id</code>.
     */
    public final TableField<TNewsContentRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_news_content.category_id</code>.
     */
    public final TableField<TNewsContentRecord, Integer> CATEGORY_ID = createField("category_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_news_content.title</code>.
     */
    public final TableField<TNewsContentRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(200).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_news_content.content</code>.
     */
    public final TableField<TNewsContentRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>db_mall.t_news_content.oid</code>.
     */
    public final TableField<TNewsContentRecord, Integer> OID = createField("oid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_news_content.status</code>.
     */
    public final TableField<TNewsContentRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_news_content.cdate</code>.
     */
    public final TableField<TNewsContentRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_news_content.mdate</code>.
     */
    public final TableField<TNewsContentRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_news_content</code> table reference
     */
    public TNewsContent() {
        this(DSL.name("t_news_content"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_news_content</code> table reference
     */
    public TNewsContent(String alias) {
        this(DSL.name(alias), T_NEWS_CONTENT);
    }

    /**
     * Create an aliased <code>db_mall.t_news_content</code> table reference
     */
    public TNewsContent(Name alias) {
        this(alias, T_NEWS_CONTENT);
    }

    private TNewsContent(Name alias, Table<TNewsContentRecord> aliased) {
        this(alias, aliased, null);
    }

    private TNewsContent(Name alias, Table<TNewsContentRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TNewsContent(Table<O> child, ForeignKey<O, TNewsContentRecord> key) {
        super(child, key, T_NEWS_CONTENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_NEWS_CONTENT_CATEGORY_ID, Indexes.T_NEWS_CONTENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TNewsContentRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_NEWS_CONTENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TNewsContentRecord> getPrimaryKey() {
        return Keys.KEY_T_NEWS_CONTENT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TNewsContentRecord>> getKeys() {
        return Arrays.<UniqueKey<TNewsContentRecord>>asList(Keys.KEY_T_NEWS_CONTENT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TNewsContent as(String alias) {
        return new TNewsContent(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TNewsContent as(Name alias) {
        return new TNewsContent(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TNewsContent rename(String name) {
        return new TNewsContent(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TNewsContent rename(Name name) {
        return new TNewsContent(name, null);
    }
}
