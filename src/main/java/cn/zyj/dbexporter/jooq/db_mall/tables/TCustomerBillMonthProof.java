/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TCustomerBillMonthProofRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCustomerBillMonthProof extends TableImpl<TCustomerBillMonthProofRecord> {

    private static final long serialVersionUID = 1085910298;

    /**
     * The reference instance of <code>db_mall.t_customer_bill_month_proof</code>
     */
    public static final TCustomerBillMonthProof T_CUSTOMER_BILL_MONTH_PROOF = new TCustomerBillMonthProof();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCustomerBillMonthProofRecord> getRecordType() {
        return TCustomerBillMonthProofRecord.class;
    }

    /**
     * The column <code>db_mall.t_customer_bill_month_proof.id</code>.
     */
    public final TableField<TCustomerBillMonthProofRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_customer_bill_month_proof.customer_id</code>. 用户Id
     */
    public final TableField<TCustomerBillMonthProofRecord, Integer> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户Id");

    /**
     * The column <code>db_mall.t_customer_bill_month_proof.pay_type</code>. 支付方式(0:未知,1:先票后款 , 2:商城开票)
     */
    public final TableField<TCustomerBillMonthProofRecord, Integer> PAY_TYPE = createField("pay_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "支付方式(0:未知,1:先票后款 , 2:商城开票)");

    /**
     * The column <code>db_mall.t_customer_bill_month_proof.balance_date</code>. 初始化时,用户的账单日
     */
    public final TableField<TCustomerBillMonthProofRecord, Integer> BALANCE_DATE = createField("balance_date", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "初始化时,用户的账单日");

    /**
     * The column <code>db_mall.t_customer_bill_month_proof.bill_month</code>. 账单月
     */
    public final TableField<TCustomerBillMonthProofRecord, Integer> BILL_MONTH = createField("bill_month", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "账单月");

    /**
     * The column <code>db_mall.t_customer_bill_month_proof.status</code>. 状态 (0:无效, 1:有效)
     */
    public final TableField<TCustomerBillMonthProofRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "状态 (0:无效, 1:有效)");

    /**
     * The column <code>db_mall.t_customer_bill_month_proof.cdate</code>. 创建时间
     */
    public final TableField<TCustomerBillMonthProofRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>db_mall.t_customer_bill_month_proof.mdate</code>.
     */
    public final TableField<TCustomerBillMonthProofRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>db_mall.t_customer_bill_month_proof</code> table reference
     */
    public TCustomerBillMonthProof() {
        this(DSL.name("t_customer_bill_month_proof"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_customer_bill_month_proof</code> table reference
     */
    public TCustomerBillMonthProof(String alias) {
        this(DSL.name(alias), T_CUSTOMER_BILL_MONTH_PROOF);
    }

    /**
     * Create an aliased <code>db_mall.t_customer_bill_month_proof</code> table reference
     */
    public TCustomerBillMonthProof(Name alias) {
        this(alias, T_CUSTOMER_BILL_MONTH_PROOF);
    }

    private TCustomerBillMonthProof(Name alias, Table<TCustomerBillMonthProofRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCustomerBillMonthProof(Name alias, Table<TCustomerBillMonthProofRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TCustomerBillMonthProof(Table<O> child, ForeignKey<O, TCustomerBillMonthProofRecord> key) {
        super(child, key, T_CUSTOMER_BILL_MONTH_PROOF);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CUSTOMER_BILL_MONTH_PROOF_CSTMID_TYPE_STATUS, Indexes.T_CUSTOMER_BILL_MONTH_PROOF_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCustomerBillMonthProofRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_CUSTOMER_BILL_MONTH_PROOF;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCustomerBillMonthProofRecord> getPrimaryKey() {
        return Keys.KEY_T_CUSTOMER_BILL_MONTH_PROOF_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCustomerBillMonthProofRecord>> getKeys() {
        return Arrays.<UniqueKey<TCustomerBillMonthProofRecord>>asList(Keys.KEY_T_CUSTOMER_BILL_MONTH_PROOF_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomerBillMonthProof as(String alias) {
        return new TCustomerBillMonthProof(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomerBillMonthProof as(Name alias) {
        return new TCustomerBillMonthProof(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomerBillMonthProof rename(String name) {
        return new TCustomerBillMonthProof(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomerBillMonthProof rename(Name name) {
        return new TCustomerBillMonthProof(name, null);
    }
}
