/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TBillCheckStartRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TBillCheckStart extends TableImpl<TBillCheckStartRecord> {

    private static final long serialVersionUID = 1542477899;

    /**
     * The reference instance of <code>db_mall.t_bill_check_start</code>
     */
    public static final TBillCheckStart T_BILL_CHECK_START = new TBillCheckStart();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TBillCheckStartRecord> getRecordType() {
        return TBillCheckStartRecord.class;
    }

    /**
     * The column <code>db_mall.t_bill_check_start.id</code>.
     */
    public final TableField<TBillCheckStartRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_bill_check_start.timestamp</code>. 时间戳
     */
    public final TableField<TBillCheckStartRecord, Long> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "时间戳");

    /**
     * The column <code>db_mall.t_bill_check_start.status</code>. 执行状态 0：初始状态 1：执行成功 2：执行失败
     */
    public final TableField<TBillCheckStartRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "执行状态 0：初始状态 1：执行成功 2：执行失败");

    /**
     * Create a <code>db_mall.t_bill_check_start</code> table reference
     */
    public TBillCheckStart() {
        this(DSL.name("t_bill_check_start"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_bill_check_start</code> table reference
     */
    public TBillCheckStart(String alias) {
        this(DSL.name(alias), T_BILL_CHECK_START);
    }

    /**
     * Create an aliased <code>db_mall.t_bill_check_start</code> table reference
     */
    public TBillCheckStart(Name alias) {
        this(alias, T_BILL_CHECK_START);
    }

    private TBillCheckStart(Name alias, Table<TBillCheckStartRecord> aliased) {
        this(alias, aliased, null);
    }

    private TBillCheckStart(Name alias, Table<TBillCheckStartRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TBillCheckStart(Table<O> child, ForeignKey<O, TBillCheckStartRecord> key) {
        super(child, key, T_BILL_CHECK_START);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_BILL_CHECK_START_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TBillCheckStartRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_BILL_CHECK_START;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TBillCheckStartRecord> getPrimaryKey() {
        return Keys.KEY_T_BILL_CHECK_START_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TBillCheckStartRecord>> getKeys() {
        return Arrays.<UniqueKey<TBillCheckStartRecord>>asList(Keys.KEY_T_BILL_CHECK_START_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TBillCheckStart as(String alias) {
        return new TBillCheckStart(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TBillCheckStart as(Name alias) {
        return new TBillCheckStart(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TBillCheckStart rename(String name) {
        return new TBillCheckStart(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TBillCheckStart rename(Name name) {
        return new TBillCheckStart(name, null);
    }
}
