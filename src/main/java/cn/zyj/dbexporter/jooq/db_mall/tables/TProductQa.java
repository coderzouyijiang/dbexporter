/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TProductQaRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductQa extends TableImpl<TProductQaRecord> {

    private static final long serialVersionUID = 727157087;

    /**
     * The reference instance of <code>db_mall.t_product_qa</code>
     */
    public static final TProductQa T_PRODUCT_QA = new TProductQa();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProductQaRecord> getRecordType() {
        return TProductQaRecord.class;
    }

    /**
     * The column <code>db_mall.t_product_qa.id</code>.
     */
    public final TableField<TProductQaRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_product_qa.customer_id</code>.
     */
    public final TableField<TProductQaRecord, Integer> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_qa.product_id</code>.
     */
    public final TableField<TProductQaRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_qa.question</code>.
     */
    public final TableField<TProductQaRecord, String> QUESTION = createField("question", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_qa.answer</code>.
     */
    public final TableField<TProductQaRecord, String> ANSWER = createField("answer", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>db_mall.t_product_qa.status</code>. 0正常 1删除
     */
    public final TableField<TProductQaRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0正常 1删除");

    /**
     * The column <code>db_mall.t_product_qa.cdate</code>.
     */
    public final TableField<TProductQaRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_qa.mdate</code>.
     */
    public final TableField<TProductQaRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_product_qa</code> table reference
     */
    public TProductQa() {
        this(DSL.name("t_product_qa"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_product_qa</code> table reference
     */
    public TProductQa(String alias) {
        this(DSL.name(alias), T_PRODUCT_QA);
    }

    /**
     * Create an aliased <code>db_mall.t_product_qa</code> table reference
     */
    public TProductQa(Name alias) {
        this(alias, T_PRODUCT_QA);
    }

    private TProductQa(Name alias, Table<TProductQaRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProductQa(Name alias, Table<TProductQaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TProductQa(Table<O> child, ForeignKey<O, TProductQaRecord> key) {
        super(child, key, T_PRODUCT_QA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRODUCT_QA_PRIMARY, Indexes.T_PRODUCT_QA_PS, Indexes.T_PRODUCT_QA_SS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TProductQaRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_PRODUCT_QA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProductQaRecord> getPrimaryKey() {
        return Keys.KEY_T_PRODUCT_QA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProductQaRecord>> getKeys() {
        return Arrays.<UniqueKey<TProductQaRecord>>asList(Keys.KEY_T_PRODUCT_QA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductQa as(String alias) {
        return new TProductQa(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductQa as(Name alias) {
        return new TProductQa(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductQa rename(String name) {
        return new TProductQa(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductQa rename(Name name) {
        return new TProductQa(name, null);
    }
}
