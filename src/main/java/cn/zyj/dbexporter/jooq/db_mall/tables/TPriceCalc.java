/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TPriceCalcRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TPriceCalc extends TableImpl<TPriceCalcRecord> {

    private static final long serialVersionUID = -2080683441;

    /**
     * The reference instance of <code>db_mall.t_price_calc</code>
     */
    public static final TPriceCalc T_PRICE_CALC = new TPriceCalc();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TPriceCalcRecord> getRecordType() {
        return TPriceCalcRecord.class;
    }

    /**
     * The column <code>db_mall.t_price_calc.id</code>.
     */
    public final TableField<TPriceCalcRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_price_calc.model</code>.
     */
    public final TableField<TPriceCalcRecord, String> MODEL = createField("model", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_price_calc.rent</code>.
     */
    public final TableField<TPriceCalcRecord, String> RENT = createField("rent", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_price_calc.buy_price</code>.
     */
    public final TableField<TPriceCalcRecord, String> BUY_PRICE = createField("buy_price", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_price_calc.deal_price</code>.
     */
    public final TableField<TPriceCalcRecord, String> DEAL_PRICE = createField("deal_price", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_price_calc.profit</code>.
     */
    public final TableField<TPriceCalcRecord, String> PROFIT = createField("profit", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_price_calc.return_rate</code>.
     */
    public final TableField<TPriceCalcRecord, String> RETURN_RATE = createField("return_rate", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_price_calc.val</code>.
     */
    public final TableField<TPriceCalcRecord, String> VAL = createField("val", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>db_mall.t_price_calc.cdate</code>.
     */
    public final TableField<TPriceCalcRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_price_calc.mdate</code>.
     */
    public final TableField<TPriceCalcRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_price_calc</code> table reference
     */
    public TPriceCalc() {
        this(DSL.name("t_price_calc"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_price_calc</code> table reference
     */
    public TPriceCalc(String alias) {
        this(DSL.name(alias), T_PRICE_CALC);
    }

    /**
     * Create an aliased <code>db_mall.t_price_calc</code> table reference
     */
    public TPriceCalc(Name alias) {
        this(alias, T_PRICE_CALC);
    }

    private TPriceCalc(Name alias, Table<TPriceCalcRecord> aliased) {
        this(alias, aliased, null);
    }

    private TPriceCalc(Name alias, Table<TPriceCalcRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TPriceCalc(Table<O> child, ForeignKey<O, TPriceCalcRecord> key) {
        super(child, key, T_PRICE_CALC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRICE_CALC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TPriceCalcRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_PRICE_CALC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TPriceCalcRecord> getPrimaryKey() {
        return Keys.KEY_T_PRICE_CALC_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TPriceCalcRecord>> getKeys() {
        return Arrays.<UniqueKey<TPriceCalcRecord>>asList(Keys.KEY_T_PRICE_CALC_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPriceCalc as(String alias) {
        return new TPriceCalc(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TPriceCalc as(Name alias) {
        return new TPriceCalc(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TPriceCalc rename(String name) {
        return new TPriceCalc(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TPriceCalc rename(Name name) {
        return new TPriceCalc(name, null);
    }
}
