/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TCustomerBalanceDateLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCustomerBalanceDateLog extends TableImpl<TCustomerBalanceDateLogRecord> {

    private static final long serialVersionUID = 497899497;

    /**
     * The reference instance of <code>db_mall.t_customer_balance_date_log</code>
     */
    public static final TCustomerBalanceDateLog T_CUSTOMER_BALANCE_DATE_LOG = new TCustomerBalanceDateLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCustomerBalanceDateLogRecord> getRecordType() {
        return TCustomerBalanceDateLogRecord.class;
    }

    /**
     * The column <code>db_mall.t_customer_balance_date_log.id</code>. id
     */
    public final TableField<TCustomerBalanceDateLogRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "id");

    /**
     * The column <code>db_mall.t_customer_balance_date_log.customer_id</code>. 用户id
     */
    public final TableField<TCustomerBalanceDateLogRecord, Long> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.BIGINT, this, "用户id");

    /**
     * The column <code>db_mall.t_customer_balance_date_log.now_balance_date</code>. 当前账单日
     */
    public final TableField<TCustomerBalanceDateLogRecord, Integer> NOW_BALANCE_DATE = createField("now_balance_date", org.jooq.impl.SQLDataType.INTEGER, this, "当前账单日");

    /**
     * The column <code>db_mall.t_customer_balance_date_log.expect_balance_date</code>. 期望账单日
     */
    public final TableField<TCustomerBalanceDateLogRecord, Integer> EXPECT_BALANCE_DATE = createField("expect_balance_date", org.jooq.impl.SQLDataType.INTEGER, this, "期望账单日");

    /**
     * The column <code>db_mall.t_customer_balance_date_log.effect_date</code>. 期望账单日生效日期
     */
    public final TableField<TCustomerBalanceDateLogRecord, Integer> EFFECT_DATE = createField("effect_date", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "期望账单日生效日期");

    /**
     * The column <code>db_mall.t_customer_balance_date_log.is_effect</code>. 期望账单日是否生效0否1是
     */
    public final TableField<TCustomerBalanceDateLogRecord, Integer> IS_EFFECT = createField("is_effect", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "期望账单日是否生效0否1是");

    /**
     * The column <code>db_mall.t_customer_balance_date_log.mdate</code>. 修改时间
     */
    public final TableField<TCustomerBalanceDateLogRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>db_mall.t_customer_balance_date_log.cdate</code>. 创建时间
     */
    public final TableField<TCustomerBalanceDateLogRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * Create a <code>db_mall.t_customer_balance_date_log</code> table reference
     */
    public TCustomerBalanceDateLog() {
        this(DSL.name("t_customer_balance_date_log"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_customer_balance_date_log</code> table reference
     */
    public TCustomerBalanceDateLog(String alias) {
        this(DSL.name(alias), T_CUSTOMER_BALANCE_DATE_LOG);
    }

    /**
     * Create an aliased <code>db_mall.t_customer_balance_date_log</code> table reference
     */
    public TCustomerBalanceDateLog(Name alias) {
        this(alias, T_CUSTOMER_BALANCE_DATE_LOG);
    }

    private TCustomerBalanceDateLog(Name alias, Table<TCustomerBalanceDateLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCustomerBalanceDateLog(Name alias, Table<TCustomerBalanceDateLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TCustomerBalanceDateLog(Table<O> child, ForeignKey<O, TCustomerBalanceDateLogRecord> key) {
        super(child, key, T_CUSTOMER_BALANCE_DATE_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CUSTOMER_BALANCE_DATE_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCustomerBalanceDateLogRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_CUSTOMER_BALANCE_DATE_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCustomerBalanceDateLogRecord> getPrimaryKey() {
        return Keys.KEY_T_CUSTOMER_BALANCE_DATE_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCustomerBalanceDateLogRecord>> getKeys() {
        return Arrays.<UniqueKey<TCustomerBalanceDateLogRecord>>asList(Keys.KEY_T_CUSTOMER_BALANCE_DATE_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomerBalanceDateLog as(String alias) {
        return new TCustomerBalanceDateLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomerBalanceDateLog as(Name alias) {
        return new TCustomerBalanceDateLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomerBalanceDateLog rename(String name) {
        return new TCustomerBalanceDateLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomerBalanceDateLog rename(Name name) {
        return new TCustomerBalanceDateLog(name, null);
    }
}
