/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCustomerWithdraw implements Serializable {

    private static final long serialVersionUID = -1417570328;

    private Long       id;
    private Integer    customerId;
    private BigDecimal amount;
    private Long       ip;
    private String     userAgent;
    private Byte       typeId;
    private String     account;
    private String     name;
    private Integer    checkManagerId;
    private Timestamp  checkTime;
    private Integer    status;
    private String     remark;
    private Timestamp  cdate;
    private Timestamp  mdate;
    private Timestamp  payTime;

    public TCustomerWithdraw() {}

    public TCustomerWithdraw(TCustomerWithdraw value) {
        this.id = value.id;
        this.customerId = value.customerId;
        this.amount = value.amount;
        this.ip = value.ip;
        this.userAgent = value.userAgent;
        this.typeId = value.typeId;
        this.account = value.account;
        this.name = value.name;
        this.checkManagerId = value.checkManagerId;
        this.checkTime = value.checkTime;
        this.status = value.status;
        this.remark = value.remark;
        this.cdate = value.cdate;
        this.mdate = value.mdate;
        this.payTime = value.payTime;
    }

    public TCustomerWithdraw(
        Long       id,
        Integer    customerId,
        BigDecimal amount,
        Long       ip,
        String     userAgent,
        Byte       typeId,
        String     account,
        String     name,
        Integer    checkManagerId,
        Timestamp  checkTime,
        Integer    status,
        String     remark,
        Timestamp  cdate,
        Timestamp  mdate,
        Timestamp  payTime
    ) {
        this.id = id;
        this.customerId = customerId;
        this.amount = amount;
        this.ip = ip;
        this.userAgent = userAgent;
        this.typeId = typeId;
        this.account = account;
        this.name = name;
        this.checkManagerId = checkManagerId;
        this.checkTime = checkTime;
        this.status = status;
        this.remark = remark;
        this.cdate = cdate;
        this.mdate = mdate;
        this.payTime = payTime;
    }

    public Long getId() {
        return this.id;
    }

    public TCustomerWithdraw setId(Long id) {
        this.id = id;
        return this;
    }

    public Integer getCustomerId() {
        return this.customerId;
    }

    public TCustomerWithdraw setCustomerId(Integer customerId) {
        this.customerId = customerId;
        return this;
    }

    public BigDecimal getAmount() {
        return this.amount;
    }

    public TCustomerWithdraw setAmount(BigDecimal amount) {
        this.amount = amount;
        return this;
    }

    @NotNull
    public Long getIp() {
        return this.ip;
    }

    public TCustomerWithdraw setIp(Long ip) {
        this.ip = ip;
        return this;
    }

    @NotNull
    @Size(max = 300)
    public String getUserAgent() {
        return this.userAgent;
    }

    public TCustomerWithdraw setUserAgent(String userAgent) {
        this.userAgent = userAgent;
        return this;
    }

    public Byte getTypeId() {
        return this.typeId;
    }

    public TCustomerWithdraw setTypeId(Byte typeId) {
        this.typeId = typeId;
        return this;
    }

    @Size(max = 100)
    public String getAccount() {
        return this.account;
    }

    public TCustomerWithdraw setAccount(String account) {
        this.account = account;
        return this;
    }

    @Size(max = 20)
    public String getName() {
        return this.name;
    }

    public TCustomerWithdraw setName(String name) {
        this.name = name;
        return this;
    }

    public Integer getCheckManagerId() {
        return this.checkManagerId;
    }

    public TCustomerWithdraw setCheckManagerId(Integer checkManagerId) {
        this.checkManagerId = checkManagerId;
        return this;
    }

    public Timestamp getCheckTime() {
        return this.checkTime;
    }

    public TCustomerWithdraw setCheckTime(Timestamp checkTime) {
        this.checkTime = checkTime;
        return this;
    }

    public Integer getStatus() {
        return this.status;
    }

    public TCustomerWithdraw setStatus(Integer status) {
        this.status = status;
        return this;
    }

    @Size(max = 300)
    public String getRemark() {
        return this.remark;
    }

    public TCustomerWithdraw setRemark(String remark) {
        this.remark = remark;
        return this;
    }

    @NotNull
    public Timestamp getCdate() {
        return this.cdate;
    }

    public TCustomerWithdraw setCdate(Timestamp cdate) {
        this.cdate = cdate;
        return this;
    }

    @NotNull
    public Timestamp getMdate() {
        return this.mdate;
    }

    public TCustomerWithdraw setMdate(Timestamp mdate) {
        this.mdate = mdate;
        return this;
    }

    public Timestamp getPayTime() {
        return this.payTime;
    }

    public TCustomerWithdraw setPayTime(Timestamp payTime) {
        this.payTime = payTime;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("TCustomerWithdraw (");

        sb.append(id);
        sb.append(", ").append(customerId);
        sb.append(", ").append(amount);
        sb.append(", ").append(ip);
        sb.append(", ").append(userAgent);
        sb.append(", ").append(typeId);
        sb.append(", ").append(account);
        sb.append(", ").append(name);
        sb.append(", ").append(checkManagerId);
        sb.append(", ").append(checkTime);
        sb.append(", ").append(status);
        sb.append(", ").append(remark);
        sb.append(", ").append(cdate);
        sb.append(", ").append(mdate);
        sb.append(", ").append(payTime);

        sb.append(")");
        return sb.toString();
    }
}
