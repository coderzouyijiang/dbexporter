/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TGroupChildOrderVerifyRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TGroupChildOrderVerify extends TableImpl<TGroupChildOrderVerifyRecord> {

    private static final long serialVersionUID = 1718637041;

    /**
     * The reference instance of <code>db_mall.t_group_child_order_verify</code>
     */
    public static final TGroupChildOrderVerify T_GROUP_CHILD_ORDER_VERIFY = new TGroupChildOrderVerify();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TGroupChildOrderVerifyRecord> getRecordType() {
        return TGroupChildOrderVerifyRecord.class;
    }

    /**
     * The column <code>db_mall.t_group_child_order_verify.id</code>. 自增主键
     */
    public final TableField<TGroupChildOrderVerifyRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "自增主键");

    /**
     * The column <code>db_mall.t_group_child_order_verify.main_order_id</code>. 主订单号
     */
    public final TableField<TGroupChildOrderVerifyRecord, String> MAIN_ORDER_ID = createField("main_order_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "主订单号");

    /**
     * The column <code>db_mall.t_group_child_order_verify.order_id</code>. 订单号
     */
    public final TableField<TGroupChildOrderVerifyRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "订单号");

    /**
     * The column <code>db_mall.t_group_child_order_verify.customer_id</code>. 用户id
     */
    public final TableField<TGroupChildOrderVerifyRecord, Integer> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "用户id");

    /**
     * The column <code>db_mall.t_group_child_order_verify.verify_status</code>. 集团下单审核状态 0无 1不通过 2待审核 3已通过
     */
    public final TableField<TGroupChildOrderVerifyRecord, Byte> VERIFY_STATUS = createField("verify_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "集团下单审核状态 0无 1不通过 2待审核 3已通过");

    /**
     * The column <code>db_mall.t_group_child_order_verify.fail_verify_reason</code>. 审核不通过原因  0 无 1 规格不符合公司标准；2 金额不符合公司标准；3 租期不符合公司标准；4 申请原因不明；5 申请原因不接受；6 超过五天未审核系统自动取消；7 其它
     */
    public final TableField<TGroupChildOrderVerifyRecord, Byte> FAIL_VERIFY_REASON = createField("fail_verify_reason", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "审核不通过原因  0 无 1 规格不符合公司标准；2 金额不符合公司标准；3 租期不符合公司标准；4 申请原因不明；5 申请原因不接受；6 超过五天未审核系统自动取消；7 其它");

    /**
     * The column <code>db_mall.t_group_child_order_verify.cdate</code>.
     */
    public final TableField<TGroupChildOrderVerifyRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_group_child_order_verify.mdate</code>.
     */
    public final TableField<TGroupChildOrderVerifyRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_group_child_order_verify</code> table reference
     */
    public TGroupChildOrderVerify() {
        this(DSL.name("t_group_child_order_verify"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_group_child_order_verify</code> table reference
     */
    public TGroupChildOrderVerify(String alias) {
        this(DSL.name(alias), T_GROUP_CHILD_ORDER_VERIFY);
    }

    /**
     * Create an aliased <code>db_mall.t_group_child_order_verify</code> table reference
     */
    public TGroupChildOrderVerify(Name alias) {
        this(alias, T_GROUP_CHILD_ORDER_VERIFY);
    }

    private TGroupChildOrderVerify(Name alias, Table<TGroupChildOrderVerifyRecord> aliased) {
        this(alias, aliased, null);
    }

    private TGroupChildOrderVerify(Name alias, Table<TGroupChildOrderVerifyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TGroupChildOrderVerify(Table<O> child, ForeignKey<O, TGroupChildOrderVerifyRecord> key) {
        super(child, key, T_GROUP_CHILD_ORDER_VERIFY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_GROUP_CHILD_ORDER_VERIFY_IDX_CUST_ORDER, Indexes.T_GROUP_CHILD_ORDER_VERIFY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TGroupChildOrderVerifyRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_GROUP_CHILD_ORDER_VERIFY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TGroupChildOrderVerifyRecord> getPrimaryKey() {
        return Keys.KEY_T_GROUP_CHILD_ORDER_VERIFY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TGroupChildOrderVerifyRecord>> getKeys() {
        return Arrays.<UniqueKey<TGroupChildOrderVerifyRecord>>asList(Keys.KEY_T_GROUP_CHILD_ORDER_VERIFY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TGroupChildOrderVerify as(String alias) {
        return new TGroupChildOrderVerify(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TGroupChildOrderVerify as(Name alias) {
        return new TGroupChildOrderVerify(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TGroupChildOrderVerify rename(String name) {
        return new TGroupChildOrderVerify(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TGroupChildOrderVerify rename(Name name) {
        return new TGroupChildOrderVerify(name, null);
    }
}
