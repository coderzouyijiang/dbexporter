/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TBcityRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TBcity extends TableImpl<TBcityRecord> {

    private static final long serialVersionUID = -1009385202;

    /**
     * The reference instance of <code>db_mall.t_bcity</code>
     */
    public static final TBcity T_BCITY = new TBcity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TBcityRecord> getRecordType() {
        return TBcityRecord.class;
    }

    /**
     * The column <code>db_mall.t_bcity.id</code>.
     */
    public final TableField<TBcityRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_bcity.bcity_code</code>.
     */
    public final TableField<TBcityRecord, String> BCITY_CODE = createField("bcity_code", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_bcity.pid</code>.
     */
    public final TableField<TBcityRecord, Integer> PID = createField("pid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_bcity.name</code>.
     */
    public final TableField<TBcityRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_bcity.cdate</code>.
     */
    public final TableField<TBcityRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>db_mall.t_bcity.mdate</code>.
     */
    public final TableField<TBcityRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>db_mall.t_bcity</code> table reference
     */
    public TBcity() {
        this(DSL.name("t_bcity"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_bcity</code> table reference
     */
    public TBcity(String alias) {
        this(DSL.name(alias), T_BCITY);
    }

    /**
     * Create an aliased <code>db_mall.t_bcity</code> table reference
     */
    public TBcity(Name alias) {
        this(alias, T_BCITY);
    }

    private TBcity(Name alias, Table<TBcityRecord> aliased) {
        this(alias, aliased, null);
    }

    private TBcity(Name alias, Table<TBcityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TBcity(Table<O> child, ForeignKey<O, TBcityRecord> key) {
        super(child, key, T_BCITY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_BCITY_BCITY_CODE, Indexes.T_BCITY_PID, Indexes.T_BCITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TBcityRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_BCITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TBcityRecord> getPrimaryKey() {
        return Keys.KEY_T_BCITY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TBcityRecord>> getKeys() {
        return Arrays.<UniqueKey<TBcityRecord>>asList(Keys.KEY_T_BCITY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TBcity as(String alias) {
        return new TBcity(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TBcity as(Name alias) {
        return new TBcity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TBcity rename(String name) {
        return new TBcity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TBcity rename(Name name) {
        return new TBcity(name, null);
    }
}
