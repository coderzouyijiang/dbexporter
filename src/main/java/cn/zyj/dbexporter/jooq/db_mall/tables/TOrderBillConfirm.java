/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TOrderBillConfirmRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderBillConfirm extends TableImpl<TOrderBillConfirmRecord> {

    private static final long serialVersionUID = 153950955;

    /**
     * The reference instance of <code>db_mall.t_order_bill_confirm</code>
     */
    public static final TOrderBillConfirm T_ORDER_BILL_CONFIRM = new TOrderBillConfirm();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOrderBillConfirmRecord> getRecordType() {
        return TOrderBillConfirmRecord.class;
    }

    /**
     * The column <code>db_mall.t_order_bill_confirm.id</code>.
     */
    public final TableField<TOrderBillConfirmRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_order_bill_confirm.customer_id</code>. 用户id
     */
    public final TableField<TOrderBillConfirmRecord, Long> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户id");

    /**
     * The column <code>db_mall.t_order_bill_confirm.balance_date</code>. 账单日
     */
    public final TableField<TOrderBillConfirmRecord, Integer> BALANCE_DATE = createField("balance_date", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "账单日");

    /**
     * The column <code>db_mall.t_order_bill_confirm.bill_month</code>. 账单年月
     */
    public final TableField<TOrderBillConfirmRecord, Integer> BILL_MONTH = createField("bill_month", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "账单年月");

    /**
     * The column <code>db_mall.t_order_bill_confirm.cut_money_date</code>. 付款日
     */
    public final TableField<TOrderBillConfirmRecord, Integer> CUT_MONEY_DATE = createField("cut_money_date", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "付款日");

    /**
     * The column <code>db_mall.t_order_bill_confirm.telphone</code>. 手机号
     */
    public final TableField<TOrderBillConfirmRecord, String> TELPHONE = createField("telphone", org.jooq.impl.SQLDataType.VARCHAR(11).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "手机号");

    /**
     * The column <code>db_mall.t_order_bill_confirm.bill_status</code>. 账单确认状态（0、未确认；1已确认；2有疑问）
     */
    public final TableField<TOrderBillConfirmRecord, Short> BILL_STATUS = createField("bill_status", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "账单确认状态（0、未确认；1已确认；2有疑问）");

    /**
     * The column <code>db_mall.t_order_bill_confirm.remark</code>. 备注
     */
    public final TableField<TOrderBillConfirmRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.CLOB, this, "备注");

    /**
     * The column <code>db_mall.t_order_bill_confirm.cdate</code>.
     */
    public final TableField<TOrderBillConfirmRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_bill_confirm.mdate</code>.
     */
    public final TableField<TOrderBillConfirmRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_order_bill_confirm</code> table reference
     */
    public TOrderBillConfirm() {
        this(DSL.name("t_order_bill_confirm"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_order_bill_confirm</code> table reference
     */
    public TOrderBillConfirm(String alias) {
        this(DSL.name(alias), T_ORDER_BILL_CONFIRM);
    }

    /**
     * Create an aliased <code>db_mall.t_order_bill_confirm</code> table reference
     */
    public TOrderBillConfirm(Name alias) {
        this(alias, T_ORDER_BILL_CONFIRM);
    }

    private TOrderBillConfirm(Name alias, Table<TOrderBillConfirmRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOrderBillConfirm(Name alias, Table<TOrderBillConfirmRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TOrderBillConfirm(Table<O> child, ForeignKey<O, TOrderBillConfirmRecord> key) {
        super(child, key, T_ORDER_BILL_CONFIRM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ORDER_BILL_CONFIRM_BILL_CONFIRM_UNIQUE_INDEX, Indexes.T_ORDER_BILL_CONFIRM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TOrderBillConfirmRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_ORDER_BILL_CONFIRM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOrderBillConfirmRecord> getPrimaryKey() {
        return Keys.KEY_T_ORDER_BILL_CONFIRM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOrderBillConfirmRecord>> getKeys() {
        return Arrays.<UniqueKey<TOrderBillConfirmRecord>>asList(Keys.KEY_T_ORDER_BILL_CONFIRM_PRIMARY, Keys.KEY_T_ORDER_BILL_CONFIRM_BILL_CONFIRM_UNIQUE_INDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderBillConfirm as(String alias) {
        return new TOrderBillConfirm(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderBillConfirm as(Name alias) {
        return new TOrderBillConfirm(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderBillConfirm rename(String name) {
        return new TOrderBillConfirm(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderBillConfirm rename(Name name) {
        return new TOrderBillConfirm(name, null);
    }
}
