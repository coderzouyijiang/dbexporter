/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TCustomerHintRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCustomerHint extends TableImpl<TCustomerHintRecord> {

    private static final long serialVersionUID = 1425747790;

    /**
     * The reference instance of <code>db_mall.t_customer_hint</code>
     */
    public static final TCustomerHint T_CUSTOMER_HINT = new TCustomerHint();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCustomerHintRecord> getRecordType() {
        return TCustomerHintRecord.class;
    }

    /**
     * The column <code>db_mall.t_customer_hint.id</code>.
     */
    public final TableField<TCustomerHintRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_customer_hint.status</code>. 提示状态 0:失效  1：生效
     */
    public final TableField<TCustomerHintRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "提示状态 0:失效  1：生效");

    /**
     * The column <code>db_mall.t_customer_hint.type</code>. 1：商城页面，2：短信，3：订单
     */
    public final TableField<TCustomerHintRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "1：商城页面，2：短信，3：订单");

    /**
     * The column <code>db_mall.t_customer_hint.content</code>. 提示内容
     */
    public final TableField<TCustomerHintRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "提示内容");

    /**
     * The column <code>db_mall.t_customer_hint.cdate</code>.
     */
    public final TableField<TCustomerHintRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>db_mall.t_customer_hint.mdate</code>.
     */
    public final TableField<TCustomerHintRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>db_mall.t_customer_hint</code> table reference
     */
    public TCustomerHint() {
        this(DSL.name("t_customer_hint"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_customer_hint</code> table reference
     */
    public TCustomerHint(String alias) {
        this(DSL.name(alias), T_CUSTOMER_HINT);
    }

    /**
     * Create an aliased <code>db_mall.t_customer_hint</code> table reference
     */
    public TCustomerHint(Name alias) {
        this(alias, T_CUSTOMER_HINT);
    }

    private TCustomerHint(Name alias, Table<TCustomerHintRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCustomerHint(Name alias, Table<TCustomerHintRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TCustomerHint(Table<O> child, ForeignKey<O, TCustomerHintRecord> key) {
        super(child, key, T_CUSTOMER_HINT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CUSTOMER_HINT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCustomerHintRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_CUSTOMER_HINT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCustomerHintRecord> getPrimaryKey() {
        return Keys.KEY_T_CUSTOMER_HINT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCustomerHintRecord>> getKeys() {
        return Arrays.<UniqueKey<TCustomerHintRecord>>asList(Keys.KEY_T_CUSTOMER_HINT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomerHint as(String alias) {
        return new TCustomerHint(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomerHint as(Name alias) {
        return new TCustomerHint(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomerHint rename(String name) {
        return new TCustomerHint(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomerHint rename(Name name) {
        return new TCustomerHint(name, null);
    }
}
