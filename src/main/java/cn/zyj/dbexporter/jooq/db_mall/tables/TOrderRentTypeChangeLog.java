/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.db_mall.tables;


import cn.zyj.dbexporter.jooq.db_mall.DbMall;
import cn.zyj.dbexporter.jooq.db_mall.Indexes;
import cn.zyj.dbexporter.jooq.db_mall.Keys;
import cn.zyj.dbexporter.jooq.db_mall.tables.records.TOrderRentTypeChangeLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderRentTypeChangeLog extends TableImpl<TOrderRentTypeChangeLogRecord> {

    private static final long serialVersionUID = -1103378848;

    /**
     * The reference instance of <code>db_mall.t_order_rent_type_change_log</code>
     */
    public static final TOrderRentTypeChangeLog T_ORDER_RENT_TYPE_CHANGE_LOG = new TOrderRentTypeChangeLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOrderRentTypeChangeLogRecord> getRecordType() {
        return TOrderRentTypeChangeLogRecord.class;
    }

    /**
     * The column <code>db_mall.t_order_rent_type_change_log.id</code>.
     */
    public final TableField<TOrderRentTypeChangeLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_order_rent_type_change_log.now_balance_num</code>.
     */
    public final TableField<TOrderRentTypeChangeLogRecord, Integer> NOW_BALANCE_NUM = createField("now_balance_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_rent_type_change_log.rent_type_id</code>.
     */
    public final TableField<TOrderRentTypeChangeLogRecord, Integer> RENT_TYPE_ID = createField("rent_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_rent_type_change_log.order_id</code>.
     */
    public final TableField<TOrderRentTypeChangeLogRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_rent_type_change_log.order_item_id</code>.
     */
    public final TableField<TOrderRentTypeChangeLogRecord, Integer> ORDER_ITEM_ID = createField("order_item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_rent_type_change_log.item_detail_id</code>.
     */
    public final TableField<TOrderRentTypeChangeLogRecord, Integer> ITEM_DETAIL_ID = createField("item_detail_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_rent_type_change_log.old_rent_money</code>.
     */
    public final TableField<TOrderRentTypeChangeLogRecord, Long> OLD_RENT_MONEY = createField("old_rent_money", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_rent_type_change_log.new_rent_money</code>.
     */
    public final TableField<TOrderRentTypeChangeLogRecord, Long> NEW_RENT_MONEY = createField("new_rent_money", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_rent_type_change_log.cdate</code>.
     */
    public final TableField<TOrderRentTypeChangeLogRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_order_rent_type_change_log</code> table reference
     */
    public TOrderRentTypeChangeLog() {
        this(DSL.name("t_order_rent_type_change_log"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_order_rent_type_change_log</code> table reference
     */
    public TOrderRentTypeChangeLog(String alias) {
        this(DSL.name(alias), T_ORDER_RENT_TYPE_CHANGE_LOG);
    }

    /**
     * Create an aliased <code>db_mall.t_order_rent_type_change_log</code> table reference
     */
    public TOrderRentTypeChangeLog(Name alias) {
        this(alias, T_ORDER_RENT_TYPE_CHANGE_LOG);
    }

    private TOrderRentTypeChangeLog(Name alias, Table<TOrderRentTypeChangeLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOrderRentTypeChangeLog(Name alias, Table<TOrderRentTypeChangeLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TOrderRentTypeChangeLog(Table<O> child, ForeignKey<O, TOrderRentTypeChangeLogRecord> key) {
        super(child, key, T_ORDER_RENT_TYPE_CHANGE_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ORDER_RENT_TYPE_CHANGE_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TOrderRentTypeChangeLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_ORDER_RENT_TYPE_CHANGE_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOrderRentTypeChangeLogRecord> getPrimaryKey() {
        return Keys.KEY_T_ORDER_RENT_TYPE_CHANGE_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOrderRentTypeChangeLogRecord>> getKeys() {
        return Arrays.<UniqueKey<TOrderRentTypeChangeLogRecord>>asList(Keys.KEY_T_ORDER_RENT_TYPE_CHANGE_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRentTypeChangeLog as(String alias) {
        return new TOrderRentTypeChangeLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderRentTypeChangeLog as(Name alias) {
        return new TOrderRentTypeChangeLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderRentTypeChangeLog rename(String name) {
        return new TOrderRentTypeChangeLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderRentTypeChangeLog rename(Name name) {
        return new TOrderRentTypeChangeLog(name, null);
    }
}
