/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TCustomerRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCustomer extends TableImpl<TCustomerRecord> {

    private static final long serialVersionUID = 873690202;

    /**
     * The reference instance of <code>db_mall.t_customer</code>
     */
    public static final TCustomer T_CUSTOMER = new TCustomer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCustomerRecord> getRecordType() {
        return TCustomerRecord.class;
    }

    /**
     * The column <code>db_mall.t_customer.id</code>.
     */
    public final TableField<TCustomerRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_customer.phone</code>.
     */
    public final TableField<TCustomerRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.CHAR(11).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_customer.receive_phone</code>.
     */
    public final TableField<TCustomerRecord, String> RECEIVE_PHONE = createField("receive_phone", org.jooq.impl.SQLDataType.CHAR(11).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_customer.email</code>.
     */
    public final TableField<TCustomerRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>db_mall.t_customer.password</code>.
     */
    public final TableField<TCustomerRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>db_mall.t_customer.salt</code>.
     */
    public final TableField<TCustomerRecord, String> SALT = createField("salt", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>db_mall.t_customer.register_ip</code>.
     */
    public final TableField<TCustomerRecord, Long> REGISTER_IP = createField("register_ip", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_customer.first_order_time</code>.
     */
    public final TableField<TCustomerRecord, Timestamp> FIRST_ORDER_TIME = createField("first_order_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>db_mall.t_customer.pay_type</code>. 0:“未知” , 1:先票后款 , 2:商城开票 
     */
    public final TableField<TCustomerRecord, Byte> PAY_TYPE = createField("pay_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("2", org.jooq.impl.SQLDataType.TINYINT)), this, "0:“未知” , 1:先票后款 , 2:商城开票 ");

    /**
     * The column <code>db_mall.t_customer.band_id</code>.
     */
    public final TableField<TCustomerRecord, Integer> BAND_ID = createField("band_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("13", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_customer.balance_date</code>.
     */
    public final TableField<TCustomerRecord, Integer> BALANCE_DATE = createField("balance_date", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_customer.is_expire</code>.
     */
    public final TableField<TCustomerRecord, Byte> IS_EXPIRE = createField("is_expire", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_customer.source</code>.
     */
    public final TableField<TCustomerRecord, Byte> SOURCE = createField("source", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_customer.true_name</code>.
     */
    public final TableField<TCustomerRecord, String> TRUE_NAME = createField("true_name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>db_mall.t_customer.card_no</code>.
     */
    public final TableField<TCustomerRecord, String> CARD_NO = createField("card_no", org.jooq.impl.SQLDataType.CHAR(18), this, "");

    /**
     * The column <code>db_mall.t_customer.company_name</code>.
     */
    public final TableField<TCustomerRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR(300), this, "");

    /**
     * The column <code>db_mall.t_customer.server_remark</code>.
     */
    public final TableField<TCustomerRecord, String> SERVER_REMARK = createField("server_remark", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>db_mall.t_customer.status</code>.
     */
    public final TableField<TCustomerRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_customer.wx_open_id</code>.
     */
    public final TableField<TCustomerRecord, String> WX_OPEN_ID = createField("wx_open_id", org.jooq.impl.SQLDataType.VARCHAR(64), this, "");

    /**
     * The column <code>db_mall.t_customer.available_balance</code>.
     */
    public final TableField<TCustomerRecord, BigDecimal> AVAILABLE_BALANCE = createField("available_balance", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_customer.exchange_frozen_balance</code>.
     */
    public final TableField<TCustomerRecord, BigDecimal> EXCHANGE_FROZEN_BALANCE = createField("exchange_frozen_balance", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_customer.frozen_balance</code>.
     */
    public final TableField<TCustomerRecord, BigDecimal> FROZEN_BALANCE = createField("frozen_balance", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_customer.total_invoice_balance</code>.
     */
    public final TableField<TCustomerRecord, BigDecimal> TOTAL_INVOICE_BALANCE = createField("total_invoice_balance", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_customer.error_login_time</code>.
     */
    public final TableField<TCustomerRecord, Integer> ERROR_LOGIN_TIME = createField("error_login_time", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_customer.demand_withdraw_balance</code>.
     */
    public final TableField<TCustomerRecord, BigDecimal> DEMAND_WITHDRAW_BALANCE = createField("demand_withdraw_balance", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_customer.available_invoice_balance</code>.
     */
    public final TableField<TCustomerRecord, BigDecimal> AVAILABLE_INVOICE_BALANCE = createField("available_invoice_balance", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_customer.e_currency_virtual</code>. 虚拟e币金额
     */
    public final TableField<TCustomerRecord, BigDecimal> E_CURRENCY_VIRTUAL = createField("e_currency_virtual", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "虚拟e币金额");

    /**
     * The column <code>db_mall.t_customer.e_currency_true</code>. 真实e币金额
     */
    public final TableField<TCustomerRecord, BigDecimal> E_CURRENCY_TRUE = createField("e_currency_true", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "真实e币金额");

    /**
     * The column <code>db_mall.t_customer.expire_invoice_balance</code>.
     */
    public final TableField<TCustomerRecord, BigDecimal> EXPIRE_INVOICE_BALANCE = createField("expire_invoice_balance", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_customer.demand_invoice_balance</code>.
     */
    public final TableField<TCustomerRecord, BigDecimal> DEMAND_INVOICE_BALANCE = createField("demand_invoice_balance", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_customer.sync_status</code>.
     */
    public final TableField<TCustomerRecord, Byte> SYNC_STATUS = createField("sync_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_customer.from_ad_source</code>.
     */
    public final TableField<TCustomerRecord, String> FROM_AD_SOURCE = createField("from_ad_source", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>db_mall.t_customer.reg_date</code>.
     */
    public final TableField<TCustomerRecord, Integer> REG_DATE = createField("reg_date", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_customer.cdate</code>.
     */
    public final TableField<TCustomerRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_customer.mdate</code>.
     */
    public final TableField<TCustomerRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>db_mall.t_customer.debit_date</code>.
     */
    public final TableField<TCustomerRecord, Integer> DEBIT_DATE = createField("debit_date", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("5", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_customer.is_pilot</code>.
     */
    public final TableField<TCustomerRecord, Byte> IS_PILOT = createField("is_pilot", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_customer.account</code>.
     */
    public final TableField<TCustomerRecord, String> ACCOUNT = createField("account", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>db_mall.t_customer.is_activate</code>.
     */
    public final TableField<TCustomerRecord, Byte> IS_ACTIVATE = createField("is_activate", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_customer.auth_type</code>. 认证类型 0：图片验证码， 大于0：google 动态认证， t_mac_device主键
     */
    public final TableField<TCustomerRecord, Integer> AUTH_TYPE = createField("auth_type", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "认证类型 0：图片验证码， 大于0：google 动态认证， t_mac_device主键");

    /**
     * The column <code>db_mall.t_customer.bill_type</code>. 账单类型，0：非一月一付，1：统一付款
     */
    public final TableField<TCustomerRecord, Byte> BILL_TYPE = createField("bill_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "账单类型，0：非一月一付，1：统一付款");

    /**
     * The column <code>db_mall.t_customer.test</code>. 是否为测试用户
     */
    public final TableField<TCustomerRecord, Boolean> TEST = createField("test", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "是否为测试用户");

    /**
     * The column <code>db_mall.t_customer.past_available_invoice_balance</code>. 历史可开票金额
     */
    public final TableField<TCustomerRecord, BigDecimal> PAST_AVAILABLE_INVOICE_BALANCE = createField("past_available_invoice_balance", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "历史可开票金额");

    /**
     * The column <code>db_mall.t_customer.is_dynamic_pay_date_customer</code>. 是否是动态付款日用户
     */
    public final TableField<TCustomerRecord, Byte> IS_DYNAMIC_PAY_DATE_CUSTOMER = createField("is_dynamic_pay_date_customer", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否是动态付款日用户");

    /**
     * The column <code>db_mall.t_customer.days_after_workdays</code>. x个工作日之后（仅对动态付款日用户有效）
     */
    public final TableField<TCustomerRecord, Integer> DAYS_AFTER_WORKDAYS = createField("days_after_workdays", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "x个工作日之后（仅对动态付款日用户有效）");

    /**
     * Create a <code>db_mall.t_customer</code> table reference
     */
    public TCustomer() {
        this(DSL.name("t_customer"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_customer</code> table reference
     */
    public TCustomer(String alias) {
        this(DSL.name(alias), T_CUSTOMER);
    }

    /**
     * Create an aliased <code>db_mall.t_customer</code> table reference
     */
    public TCustomer(Name alias) {
        this(alias, T_CUSTOMER);
    }

    private TCustomer(Name alias, Table<TCustomerRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCustomer(Name alias, Table<TCustomerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TCustomer(Table<O> child, ForeignKey<O, TCustomerRecord> key) {
        super(child, key, T_CUSTOMER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CUSTOMER_BALANCE_DATE, Indexes.T_CUSTOMER_IND_AVAILABLE_INVOICE_BALANCE, Indexes.T_CUSTOMER_PHONE_STATUS, Indexes.T_CUSTOMER_PRIMARY, Indexes.T_CUSTOMER_REG_DATE, Indexes.T_CUSTOMER_SYNC_STATUS, Indexes.T_CUSTOMER_WX_OPEN_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCustomerRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_CUSTOMER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCustomerRecord> getPrimaryKey() {
        return Keys.KEY_T_CUSTOMER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCustomerRecord>> getKeys() {
        return Arrays.<UniqueKey<TCustomerRecord>>asList(Keys.KEY_T_CUSTOMER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomer as(String alias) {
        return new TCustomer(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCustomer as(Name alias) {
        return new TCustomer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomer rename(String name) {
        return new TCustomer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCustomer rename(Name name) {
        return new TCustomer(name, null);
    }
}
