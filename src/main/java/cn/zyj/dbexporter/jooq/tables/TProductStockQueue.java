/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TProductStockQueueRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductStockQueue extends TableImpl<TProductStockQueueRecord> {

    private static final long serialVersionUID = 162701016;

    /**
     * The reference instance of <code>db_mall.t_product_stock_queue</code>
     */
    public static final TProductStockQueue T_PRODUCT_STOCK_QUEUE = new TProductStockQueue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProductStockQueueRecord> getRecordType() {
        return TProductStockQueueRecord.class;
    }

    /**
     * The column <code>db_mall.t_product_stock_queue.id</code>.
     */
    public final TableField<TProductStockQueueRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_product_stock_queue.sku_id</code>.
     */
    public final TableField<TProductStockQueueRecord, Integer> SKU_ID = createField("sku_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_stock_queue.stock</code>. 小于0时表示商城主动获取可用库存
     */
    public final TableField<TProductStockQueueRecord, Integer> STOCK = createField("stock", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "小于0时表示商城主动获取可用库存");

    /**
     * The column <code>db_mall.t_product_stock_queue.real_stock</code>.
     */
    public final TableField<TProductStockQueueRecord, Integer> REAL_STOCK = createField("real_stock", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_product_stock_queue.is_presale</code>.
     */
    public final TableField<TProductStockQueueRecord, Byte> IS_PRESALE = createField("is_presale", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_product_stock_queue.sync_status</code>. 0:未处理 1：已处理 
     */
    public final TableField<TProductStockQueueRecord, Byte> SYNC_STATUS = createField("sync_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0:未处理 1：已处理 ");

    /**
     * The column <code>db_mall.t_product_stock_queue.cdate</code>.
     */
    public final TableField<TProductStockQueueRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_stock_queue.mdate</code>.
     */
    public final TableField<TProductStockQueueRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_product_stock_queue</code> table reference
     */
    public TProductStockQueue() {
        this(DSL.name("t_product_stock_queue"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_product_stock_queue</code> table reference
     */
    public TProductStockQueue(String alias) {
        this(DSL.name(alias), T_PRODUCT_STOCK_QUEUE);
    }

    /**
     * Create an aliased <code>db_mall.t_product_stock_queue</code> table reference
     */
    public TProductStockQueue(Name alias) {
        this(alias, T_PRODUCT_STOCK_QUEUE);
    }

    private TProductStockQueue(Name alias, Table<TProductStockQueueRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProductStockQueue(Name alias, Table<TProductStockQueueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TProductStockQueue(Table<O> child, ForeignKey<O, TProductStockQueueRecord> key) {
        super(child, key, T_PRODUCT_STOCK_QUEUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRODUCT_STOCK_QUEUE_PRIMARY, Indexes.T_PRODUCT_STOCK_QUEUE_SYNC_STATUS_SKU_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TProductStockQueueRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_PRODUCT_STOCK_QUEUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProductStockQueueRecord> getPrimaryKey() {
        return Keys.KEY_T_PRODUCT_STOCK_QUEUE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProductStockQueueRecord>> getKeys() {
        return Arrays.<UniqueKey<TProductStockQueueRecord>>asList(Keys.KEY_T_PRODUCT_STOCK_QUEUE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductStockQueue as(String alias) {
        return new TProductStockQueue(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductStockQueue as(Name alias) {
        return new TProductStockQueue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductStockQueue rename(String name) {
        return new TProductStockQueue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductStockQueue rename(Name name) {
        return new TProductStockQueue(name, null);
    }
}
