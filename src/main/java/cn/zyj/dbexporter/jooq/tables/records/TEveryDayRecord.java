/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables.records;


import cn.zyj.dbexporter.jooq.tables.TEveryDay;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TEveryDayRecord extends UpdatableRecordImpl<TEveryDayRecord> implements Record5<Integer, Integer, Byte, Timestamp, Timestamp> {

    private static final long serialVersionUID = 1059288585;

    /**
     * Setter for <code>db_mall.t_every_day.id</code>. 主键
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>db_mall.t_every_day.id</code>. 主键
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>db_mall.t_every_day.day</code>. 天
     */
    public void setDay(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>db_mall.t_every_day.day</code>. 天
     */
    public Integer getDay() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>db_mall.t_every_day.status</code>. 状态（0、工作日；1、礼拜天、2节假日）
     */
    public void setStatus(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>db_mall.t_every_day.status</code>. 状态（0、工作日；1、礼拜天、2节假日）
     */
    public Byte getStatus() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>db_mall.t_every_day.cdate</code>.
     */
    public void setCdate(Timestamp value) {
        set(3, value);
    }

    /**
     * Getter for <code>db_mall.t_every_day.cdate</code>.
     */
    public Timestamp getCdate() {
        return (Timestamp) get(3);
    }

    /**
     * Setter for <code>db_mall.t_every_day.mdate</code>.
     */
    public void setMdate(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>db_mall.t_every_day.mdate</code>.
     */
    public Timestamp getMdate() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Byte, Timestamp, Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row5<Integer, Integer, Byte, Timestamp, Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return TEveryDay.T_EVERY_DAY.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return TEveryDay.T_EVERY_DAY.DAY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return TEveryDay.T_EVERY_DAY.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field4() {
        return TEveryDay.T_EVERY_DAY.CDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return TEveryDay.T_EVERY_DAY.MDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getDay();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component4() {
        return getCdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getMdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getDay();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value4() {
        return getCdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getMdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEveryDayRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEveryDayRecord value2(Integer value) {
        setDay(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEveryDayRecord value3(Byte value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEveryDayRecord value4(Timestamp value) {
        setCdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEveryDayRecord value5(Timestamp value) {
        setMdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEveryDayRecord values(Integer value1, Integer value2, Byte value3, Timestamp value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TEveryDayRecord
     */
    public TEveryDayRecord() {
        super(TEveryDay.T_EVERY_DAY);
    }

    /**
     * Create a detached, initialised TEveryDayRecord
     */
    public TEveryDayRecord(Integer id, Integer day, Byte status, Timestamp cdate, Timestamp mdate) {
        super(TEveryDay.T_EVERY_DAY);

        set(0, id);
        set(1, day);
        set(2, status);
        set(3, cdate);
        set(4, mdate);
    }
}
