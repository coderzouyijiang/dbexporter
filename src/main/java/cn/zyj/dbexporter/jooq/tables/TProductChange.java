/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TProductChangeRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductChange extends TableImpl<TProductChangeRecord> {

    private static final long serialVersionUID = 34913830;

    /**
     * The reference instance of <code>db_mall.t_product_change</code>
     */
    public static final TProductChange T_PRODUCT_CHANGE = new TProductChange();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProductChangeRecord> getRecordType() {
        return TProductChangeRecord.class;
    }

    /**
     * The column <code>db_mall.t_product_change.id</code>.
     */
    public final TableField<TProductChangeRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_product_change.product_id</code>.
     */
    public final TableField<TProductChangeRecord, Long> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>db_mall.t_product_change.type_id</code>. 1:商品修改2：新商品发布
     */
    public final TableField<TProductChangeRecord, Byte> TYPE_ID = createField("type_id", org.jooq.impl.SQLDataType.TINYINT, this, "1:商品修改2：新商品发布");

    /**
     * The column <code>db_mall.t_product_change.old_rent</code>.
     */
    public final TableField<TProductChangeRecord, BigDecimal> OLD_RENT = createField("old_rent", org.jooq.impl.SQLDataType.DECIMAL(11, 2), this, "");

    /**
     * The column <code>db_mall.t_product_change.new_rent</code>.
     */
    public final TableField<TProductChangeRecord, BigDecimal> NEW_RENT = createField("new_rent", org.jooq.impl.SQLDataType.DECIMAL(11, 2), this, "");

    /**
     * The column <code>db_mall.t_product_change.old_status</code>.
     */
    public final TableField<TProductChangeRecord, Byte> OLD_STATUS = createField("old_status", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>db_mall.t_product_change.old_check_status</code>.
     */
    public final TableField<TProductChangeRecord, Byte> OLD_CHECK_STATUS = createField("old_check_status", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>db_mall.t_product_change.new_status</code>.
     */
    public final TableField<TProductChangeRecord, Byte> NEW_STATUS = createField("new_status", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>db_mall.t_product_change.new_check_status</code>.
     */
    public final TableField<TProductChangeRecord, Byte> NEW_CHECK_STATUS = createField("new_check_status", org.jooq.impl.SQLDataType.TINYINT, this, "");

    /**
     * The column <code>db_mall.t_product_change.cdate</code>.
     */
    public final TableField<TProductChangeRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>db_mall.t_product_change.mdate</code>.
     */
    public final TableField<TProductChangeRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>db_mall.t_product_change.old_field_str</code>.
     */
    public final TableField<TProductChangeRecord, String> OLD_FIELD_STR = createField("old_field_str", org.jooq.impl.SQLDataType.VARCHAR(800), this, "");

    /**
     * The column <code>db_mall.t_product_change.new_field_str</code>.
     */
    public final TableField<TProductChangeRecord, String> NEW_FIELD_STR = createField("new_field_str", org.jooq.impl.SQLDataType.VARCHAR(800), this, "");

    /**
     * Create a <code>db_mall.t_product_change</code> table reference
     */
    public TProductChange() {
        this(DSL.name("t_product_change"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_product_change</code> table reference
     */
    public TProductChange(String alias) {
        this(DSL.name(alias), T_PRODUCT_CHANGE);
    }

    /**
     * Create an aliased <code>db_mall.t_product_change</code> table reference
     */
    public TProductChange(Name alias) {
        this(alias, T_PRODUCT_CHANGE);
    }

    private TProductChange(Name alias, Table<TProductChangeRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProductChange(Name alias, Table<TProductChangeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TProductChange(Table<O> child, ForeignKey<O, TProductChangeRecord> key) {
        super(child, key, T_PRODUCT_CHANGE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRODUCT_CHANGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TProductChangeRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_PRODUCT_CHANGE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProductChangeRecord> getPrimaryKey() {
        return Keys.KEY_T_PRODUCT_CHANGE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProductChangeRecord>> getKeys() {
        return Arrays.<UniqueKey<TProductChangeRecord>>asList(Keys.KEY_T_PRODUCT_CHANGE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductChange as(String alias) {
        return new TProductChange(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductChange as(Name alias) {
        return new TProductChange(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductChange rename(String name) {
        return new TProductChange(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductChange rename(Name name) {
        return new TProductChange(name, null);
    }
}
