/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TProductReletRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductRelet extends TableImpl<TProductReletRecord> {

    private static final long serialVersionUID = -406618205;

    /**
     * The reference instance of <code>db_mall.t_product_relet</code>
     */
    public static final TProductRelet T_PRODUCT_RELET = new TProductRelet();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProductReletRecord> getRecordType() {
        return TProductReletRecord.class;
    }

    /**
     * The column <code>db_mall.t_product_relet.id</code>.
     */
    public final TableField<TProductReletRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_product_relet.source_product_id</code>. 原商品id
     */
    public final TableField<TProductReletRecord, Integer> SOURCE_PRODUCT_ID = createField("source_product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "原商品id");

    /**
     * The column <code>db_mall.t_product_relet.relet_product_id</code>. 续租商品id
     */
    public final TableField<TProductReletRecord, Integer> RELET_PRODUCT_ID = createField("relet_product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "续租商品id");

    /**
     * The column <code>db_mall.t_product_relet.rent</code>. 续租商品租金
     */
    public final TableField<TProductReletRecord, BigDecimal> RENT = createField("rent", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "续租商品租金");

    /**
     * The column <code>db_mall.t_product_relet.pay_type</code>. 商品支付方式 0:销售,1:月付, 2:季付,  3:半年付, 4:年付
     */
    public final TableField<TProductReletRecord, Byte> PAY_TYPE = createField("pay_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "商品支付方式 0:销售,1:月付, 2:季付,  3:半年付, 4:年付");

    /**
     * The column <code>db_mall.t_product_relet.relet_rent_type_id</code>. 续租商品租赁类型
     */
    public final TableField<TProductReletRecord, Integer> RELET_RENT_TYPE_ID = createField("relet_rent_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("4", org.jooq.impl.SQLDataType.INTEGER)), this, "续租商品租赁类型");

    /**
     * The column <code>db_mall.t_product_relet.cdate</code>. 创建时间
     */
    public final TableField<TProductReletRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>db_mall.t_product_relet.mdate</code>. 更新时间
     */
    public final TableField<TProductReletRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "更新时间");

    /**
     * Create a <code>db_mall.t_product_relet</code> table reference
     */
    public TProductRelet() {
        this(DSL.name("t_product_relet"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_product_relet</code> table reference
     */
    public TProductRelet(String alias) {
        this(DSL.name(alias), T_PRODUCT_RELET);
    }

    /**
     * Create an aliased <code>db_mall.t_product_relet</code> table reference
     */
    public TProductRelet(Name alias) {
        this(alias, T_PRODUCT_RELET);
    }

    private TProductRelet(Name alias, Table<TProductReletRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProductRelet(Name alias, Table<TProductReletRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TProductRelet(Table<O> child, ForeignKey<O, TProductReletRecord> key) {
        super(child, key, T_PRODUCT_RELET);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRODUCT_RELET_PRIMARY, Indexes.T_PRODUCT_RELET_RELET_PRODUCT_ID, Indexes.T_PRODUCT_RELET_SOURCE_PRODUCT_ID_PAY_TYPE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TProductReletRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_PRODUCT_RELET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProductReletRecord> getPrimaryKey() {
        return Keys.KEY_T_PRODUCT_RELET_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProductReletRecord>> getKeys() {
        return Arrays.<UniqueKey<TProductReletRecord>>asList(Keys.KEY_T_PRODUCT_RELET_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductRelet as(String alias) {
        return new TProductRelet(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductRelet as(Name alias) {
        return new TProductRelet(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductRelet rename(String name) {
        return new TProductRelet(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductRelet rename(Name name) {
        return new TProductRelet(name, null);
    }
}
