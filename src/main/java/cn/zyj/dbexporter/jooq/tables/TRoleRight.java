/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TRoleRightRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 角色权限表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRoleRight extends TableImpl<TRoleRightRecord> {

    private static final long serialVersionUID = -460460239;

    /**
     * The reference instance of <code>db_mall.t_role_right</code>
     */
    public static final TRoleRight T_ROLE_RIGHT = new TRoleRight();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRoleRightRecord> getRecordType() {
        return TRoleRightRecord.class;
    }

    /**
     * The column <code>db_mall.t_role_right.role_id</code>. 角色标识
     */
    public final TableField<TRoleRightRecord, Long> ROLE_ID = createField("role_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "角色标识");

    /**
     * The column <code>db_mall.t_role_right.right_id</code>. 权限标识
     */
    public final TableField<TRoleRightRecord, Long> RIGHT_ID = createField("right_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "权限标识");

    /**
     * The column <code>db_mall.t_role_right.created_time</code>. 创建时间
     */
    public final TableField<TRoleRightRecord, Timestamp> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * Create a <code>db_mall.t_role_right</code> table reference
     */
    public TRoleRight() {
        this(DSL.name("t_role_right"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_role_right</code> table reference
     */
    public TRoleRight(String alias) {
        this(DSL.name(alias), T_ROLE_RIGHT);
    }

    /**
     * Create an aliased <code>db_mall.t_role_right</code> table reference
     */
    public TRoleRight(Name alias) {
        this(alias, T_ROLE_RIGHT);
    }

    private TRoleRight(Name alias, Table<TRoleRightRecord> aliased) {
        this(alias, aliased, null);
    }

    private TRoleRight(Name alias, Table<TRoleRightRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("角色权限表"));
    }

    public <O extends Record> TRoleRight(Table<O> child, ForeignKey<O, TRoleRightRecord> key) {
        super(child, key, T_ROLE_RIGHT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ROLE_RIGHT_FK_RRIGHT_RIGHT_ID, Indexes.T_ROLE_RIGHT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TRoleRightRecord> getPrimaryKey() {
        return Keys.KEY_T_ROLE_RIGHT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TRoleRightRecord>> getKeys() {
        return Arrays.<UniqueKey<TRoleRightRecord>>asList(Keys.KEY_T_ROLE_RIGHT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TRoleRightRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TRoleRightRecord, ?>>asList(Keys.T_ROLE_RIGHT_IBFK_2, Keys.T_ROLE_RIGHT_IBFK_1);
    }

    public TRole tRole() {
        return new TRole(this, Keys.T_ROLE_RIGHT_IBFK_2);
    }

    public TRight tRight() {
        return new TRight(this, Keys.T_ROLE_RIGHT_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRoleRight as(String alias) {
        return new TRoleRight(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRoleRight as(Name alias) {
        return new TRoleRight(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRoleRight rename(String name) {
        return new TRoleRight(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TRoleRight rename(Name name) {
        return new TRoleRight(name, null);
    }
}
