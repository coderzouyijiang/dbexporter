/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.SmsBlacklistRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SmsBlacklist extends TableImpl<SmsBlacklistRecord> {

    private static final long serialVersionUID = -175650634;

    /**
     * The reference instance of <code>db_mall.sms_blacklist</code>
     */
    public static final SmsBlacklist SMS_BLACKLIST = new SmsBlacklist();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SmsBlacklistRecord> getRecordType() {
        return SmsBlacklistRecord.class;
    }

    /**
     * The column <code>db_mall.sms_blacklist.id</code>.
     */
    public final TableField<SmsBlacklistRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.sms_blacklist.phone</code>.
     */
    public final TableField<SmsBlacklistRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.CHAR(11).nullable(false), this, "");

    /**
     * The column <code>db_mall.sms_blacklist.status</code>. 1：启用 0：禁用
     */
    public final TableField<SmsBlacklistRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "1：启用 0：禁用");

    /**
     * Create a <code>db_mall.sms_blacklist</code> table reference
     */
    public SmsBlacklist() {
        this(DSL.name("sms_blacklist"), null);
    }

    /**
     * Create an aliased <code>db_mall.sms_blacklist</code> table reference
     */
    public SmsBlacklist(String alias) {
        this(DSL.name(alias), SMS_BLACKLIST);
    }

    /**
     * Create an aliased <code>db_mall.sms_blacklist</code> table reference
     */
    public SmsBlacklist(Name alias) {
        this(alias, SMS_BLACKLIST);
    }

    private SmsBlacklist(Name alias, Table<SmsBlacklistRecord> aliased) {
        this(alias, aliased, null);
    }

    private SmsBlacklist(Name alias, Table<SmsBlacklistRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> SmsBlacklist(Table<O> child, ForeignKey<O, SmsBlacklistRecord> key) {
        super(child, key, SMS_BLACKLIST);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SMS_BLACKLIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SmsBlacklistRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SMS_BLACKLIST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SmsBlacklistRecord> getPrimaryKey() {
        return Keys.KEY_SMS_BLACKLIST_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SmsBlacklistRecord>> getKeys() {
        return Arrays.<UniqueKey<SmsBlacklistRecord>>asList(Keys.KEY_SMS_BLACKLIST_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmsBlacklist as(String alias) {
        return new SmsBlacklist(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public SmsBlacklist as(Name alias) {
        return new SmsBlacklist(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SmsBlacklist rename(String name) {
        return new SmsBlacklist(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SmsBlacklist rename(Name name) {
        return new SmsBlacklist(name, null);
    }
}
