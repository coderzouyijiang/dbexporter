/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.AssetsOperateRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssetsOperate extends TableImpl<AssetsOperateRecord> {

    private static final long serialVersionUID = 615684544;

    /**
     * The reference instance of <code>db_mall.assets_operate</code>
     */
    public static final AssetsOperate ASSETS_OPERATE = new AssetsOperate();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssetsOperateRecord> getRecordType() {
        return AssetsOperateRecord.class;
    }

    /**
     * The column <code>db_mall.assets_operate.id</code>.
     */
    public final TableField<AssetsOperateRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.assets_operate.type</code>. 操作类型：1入库2领用3退回4退租
     */
    public final TableField<AssetsOperateRecord, Byte> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "操作类型：1入库2领用3退回4退租");

    /**
     * The column <code>db_mall.assets_operate.device_id</code>. 资产设备id
     */
    public final TableField<AssetsOperateRecord, Long> DEVICE_ID = createField("device_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "资产设备id");

    /**
     * The column <code>db_mall.assets_operate.operator_id</code>. 操作人id
     */
    public final TableField<AssetsOperateRecord, Long> OPERATOR_ID = createField("operator_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "操作人id");

    /**
     * The column <code>db_mall.assets_operate.receiver_id</code>. 领用人id
     */
    public final TableField<AssetsOperateRecord, Long> RECEIVER_ID = createField("receiver_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "领用人id");

    /**
     * The column <code>db_mall.assets_operate.remark</code>. 备注
     */
    public final TableField<AssetsOperateRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(100), this, "备注");

    /**
     * The column <code>db_mall.assets_operate.cdate</code>. 操作时间
     */
    public final TableField<AssetsOperateRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "操作时间");

    /**
     * The column <code>db_mall.assets_operate.mdate</code>. 修改时间
     */
    public final TableField<AssetsOperateRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * Create a <code>db_mall.assets_operate</code> table reference
     */
    public AssetsOperate() {
        this(DSL.name("assets_operate"), null);
    }

    /**
     * Create an aliased <code>db_mall.assets_operate</code> table reference
     */
    public AssetsOperate(String alias) {
        this(DSL.name(alias), ASSETS_OPERATE);
    }

    /**
     * Create an aliased <code>db_mall.assets_operate</code> table reference
     */
    public AssetsOperate(Name alias) {
        this(alias, ASSETS_OPERATE);
    }

    private AssetsOperate(Name alias, Table<AssetsOperateRecord> aliased) {
        this(alias, aliased, null);
    }

    private AssetsOperate(Name alias, Table<AssetsOperateRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AssetsOperate(Table<O> child, ForeignKey<O, AssetsOperateRecord> key) {
        super(child, key, ASSETS_OPERATE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ASSETS_OPERATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AssetsOperateRecord, Long> getIdentity() {
        return Keys.IDENTITY_ASSETS_OPERATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssetsOperateRecord> getPrimaryKey() {
        return Keys.KEY_ASSETS_OPERATE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssetsOperateRecord>> getKeys() {
        return Arrays.<UniqueKey<AssetsOperateRecord>>asList(Keys.KEY_ASSETS_OPERATE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssetsOperate as(String alias) {
        return new AssetsOperate(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssetsOperate as(Name alias) {
        return new AssetsOperate(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AssetsOperate rename(String name) {
        return new AssetsOperate(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AssetsOperate rename(Name name) {
        return new AssetsOperate(name, null);
    }
}
