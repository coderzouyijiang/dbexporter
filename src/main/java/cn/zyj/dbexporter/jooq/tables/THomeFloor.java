/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.THomeFloorRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class THomeFloor extends TableImpl<THomeFloorRecord> {

    private static final long serialVersionUID = -155497590;

    /**
     * The reference instance of <code>db_mall.t_home_floor</code>
     */
    public static final THomeFloor T_HOME_FLOOR = new THomeFloor();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<THomeFloorRecord> getRecordType() {
        return THomeFloorRecord.class;
    }

    /**
     * The column <code>db_mall.t_home_floor.id</code>.
     */
    public final TableField<THomeFloorRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_home_floor.name</code>.
     */
    public final TableField<THomeFloorRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>db_mall.t_home_floor.oid</code>.
     */
    public final TableField<THomeFloorRecord, Integer> OID = createField("oid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db_mall.t_home_floor.status</code>.
     */
    public final TableField<THomeFloorRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_home_floor.cdate</code>.
     */
    public final TableField<THomeFloorRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>db_mall.t_home_floor.mdate</code>.
     */
    public final TableField<THomeFloorRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>db_mall.t_home_floor</code> table reference
     */
    public THomeFloor() {
        this(DSL.name("t_home_floor"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_home_floor</code> table reference
     */
    public THomeFloor(String alias) {
        this(DSL.name(alias), T_HOME_FLOOR);
    }

    /**
     * Create an aliased <code>db_mall.t_home_floor</code> table reference
     */
    public THomeFloor(Name alias) {
        this(alias, T_HOME_FLOOR);
    }

    private THomeFloor(Name alias, Table<THomeFloorRecord> aliased) {
        this(alias, aliased, null);
    }

    private THomeFloor(Name alias, Table<THomeFloorRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> THomeFloor(Table<O> child, ForeignKey<O, THomeFloorRecord> key) {
        super(child, key, T_HOME_FLOOR);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_HOME_FLOOR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<THomeFloorRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_HOME_FLOOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<THomeFloorRecord> getPrimaryKey() {
        return Keys.KEY_T_HOME_FLOOR_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<THomeFloorRecord>> getKeys() {
        return Arrays.<UniqueKey<THomeFloorRecord>>asList(Keys.KEY_T_HOME_FLOOR_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public THomeFloor as(String alias) {
        return new THomeFloor(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public THomeFloor as(Name alias) {
        return new THomeFloor(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public THomeFloor rename(String name) {
        return new THomeFloor(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public THomeFloor rename(Name name) {
        return new THomeFloor(name, null);
    }
}
