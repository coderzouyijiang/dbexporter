/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbCalculator;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TEnumsRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TEnums extends TableImpl<TEnumsRecord> {

    private static final long serialVersionUID = 1791504438;

    /**
     * The reference instance of <code>db_calculator.t_enums</code>
     */
    public static final TEnums T_ENUMS = new TEnums();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TEnumsRecord> getRecordType() {
        return TEnumsRecord.class;
    }

    /**
     * The column <code>db_calculator.t_enums.id</code>.
     */
    public final TableField<TEnumsRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_calculator.t_enums.code_value</code>. 下拉值value
     */
    public final TableField<TEnumsRecord, Integer> CODE_VALUE = createField("code_value", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "下拉值value");

    /**
     * The column <code>db_calculator.t_enums.label</code>. 显示值
     */
    public final TableField<TEnumsRecord, String> LABEL = createField("label", org.jooq.impl.SQLDataType.VARCHAR(150), this, "显示值");

    /**
     * The column <code>db_calculator.t_enums.sn</code>. 编码
     */
    public final TableField<TEnumsRecord, String> SN = createField("sn", org.jooq.impl.SQLDataType.VARCHAR(100), this, "编码");

    /**
     * The column <code>db_calculator.t_enums.status</code>. 状态 0:正常 1:禁用
     */
    public final TableField<TEnumsRecord, Integer> STATUS = createField("status", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "状态 0:正常 1:禁用");

    /**
     * The column <code>db_calculator.t_enums.type</code>. 枚举分类(1:操作系统、2:CPU类型、3:CPU型号、4:RAM、5:HD1、6:HD2、7:显卡、8:屏幕尺寸、9:分辨率)
     */
    public final TableField<TEnumsRecord, Integer> TYPE = createField("type", org.jooq.impl.SQLDataType.INTEGER, this, "枚举分类(1:操作系统、2:CPU类型、3:CPU型号、4:RAM、5:HD1、6:HD2、7:显卡、8:屏幕尺寸、9:分辨率)");

    /**
     * The column <code>db_calculator.t_enums.link_type</code>. 级联分类
     */
    public final TableField<TEnumsRecord, Integer> LINK_TYPE = createField("link_type", org.jooq.impl.SQLDataType.INTEGER, this, "级联分类");

    /**
     * The column <code>db_calculator.t_enums.link_value</code>. 级联值
     */
    public final TableField<TEnumsRecord, Integer> LINK_VALUE = createField("link_value", org.jooq.impl.SQLDataType.INTEGER, this, "级联值");

    /**
     * The column <code>db_calculator.t_enums.residual_after_year1</code>. 1年后处置价
     */
    public final TableField<TEnumsRecord, BigDecimal> RESIDUAL_AFTER_YEAR1 = createField("residual_after_year1", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("-1.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "1年后处置价");

    /**
     * The column <code>db_calculator.t_enums.residual_after_year2</code>. 2年后处置价
     */
    public final TableField<TEnumsRecord, BigDecimal> RESIDUAL_AFTER_YEAR2 = createField("residual_after_year2", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("-1.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "2年后处置价");

    /**
     * The column <code>db_calculator.t_enums.residual_after_year3</code>. 3年后处置价
     */
    public final TableField<TEnumsRecord, BigDecimal> RESIDUAL_AFTER_YEAR3 = createField("residual_after_year3", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("-1.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "3年后处置价");

    /**
     * The column <code>db_calculator.t_enums.residual_after_year4</code>. 4年后处置价
     */
    public final TableField<TEnumsRecord, BigDecimal> RESIDUAL_AFTER_YEAR4 = createField("residual_after_year4", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("-1.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "4年后处置价");

    /**
     * The column <code>db_calculator.t_enums.residual_after_year5</code>. 5年后处置价
     */
    public final TableField<TEnumsRecord, BigDecimal> RESIDUAL_AFTER_YEAR5 = createField("residual_after_year5", org.jooq.impl.SQLDataType.DECIMAL(10, 2).defaultValue(org.jooq.impl.DSL.inline("-1.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "5年后处置价");

    /**
     * The column <code>db_calculator.t_enums.cdate</code>.
     */
    public final TableField<TEnumsRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>db_calculator.t_enums.mdate</code>.
     */
    public final TableField<TEnumsRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>db_calculator.t_enums.data_status</code>.
     */
    public final TableField<TEnumsRecord, Integer> DATA_STATUS = createField("data_status", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>db_calculator.t_enums</code> table reference
     */
    public TEnums() {
        this(DSL.name("t_enums"), null);
    }

    /**
     * Create an aliased <code>db_calculator.t_enums</code> table reference
     */
    public TEnums(String alias) {
        this(DSL.name(alias), T_ENUMS);
    }

    /**
     * Create an aliased <code>db_calculator.t_enums</code> table reference
     */
    public TEnums(Name alias) {
        this(alias, T_ENUMS);
    }

    private TEnums(Name alias, Table<TEnumsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TEnums(Name alias, Table<TEnumsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TEnums(Table<O> child, ForeignKey<O, TEnumsRecord> key) {
        super(child, key, T_ENUMS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbCalculator.DB_CALCULATOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ENUMS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TEnumsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_T_ENUMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TEnumsRecord> getPrimaryKey() {
        return Keys.KEY_T_ENUMS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TEnumsRecord>> getKeys() {
        return Arrays.<UniqueKey<TEnumsRecord>>asList(Keys.KEY_T_ENUMS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEnums as(String alias) {
        return new TEnums(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TEnums as(Name alias) {
        return new TEnums(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TEnums rename(String name) {
        return new TEnums(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TEnums rename(Name name) {
        return new TEnums(name, null);
    }
}
