/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TGroupsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TGroups extends TableImpl<TGroupsRecord> {

    private static final long serialVersionUID = 2035091290;

    /**
     * The reference instance of <code>db_mall.t_groups</code>
     */
    public static final TGroups T_GROUPS = new TGroups();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TGroupsRecord> getRecordType() {
        return TGroupsRecord.class;
    }

    /**
     * The column <code>db_mall.t_groups.id</code>. 集团编号
     */
    public final TableField<TGroupsRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "集团编号");

    /**
     * The column <code>db_mall.t_groups.name</code>. 集团名称
     */
    public final TableField<TGroupsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "集团名称");

    /**
     * The column <code>db_mall.t_groups.category</code>. 类别，默认1集团 2分支机构 3内部部门
     */
    public final TableField<TGroupsRecord, Byte> CATEGORY = createField("category", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "类别，默认1集团 2分支机构 3内部部门");

    /**
     * The column <code>db_mall.t_groups.parent</code>. 父节点ID
     */
    public final TableField<TGroupsRecord, Integer> PARENT = createField("parent", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "父节点ID");

    /**
     * The column <code>db_mall.t_groups.status</code>. 默认1 审核中 2审核未通过 3审核通过
     */
    public final TableField<TGroupsRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "默认1 审核中 2审核未通过 3审核通过");

    /**
     * The column <code>db_mall.t_groups.remark</code>. 分控返回状态
     */
    public final TableField<TGroupsRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(100), this, "分控返回状态");

    /**
     * The column <code>db_mall.t_groups.visiable</code>. 是否可见
     */
    public final TableField<TGroupsRecord, Boolean> VISIABLE = createField("visiable", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "是否可见");

    /**
     * The column <code>db_mall.t_groups.cdate</code>. 创建时间
     */
    public final TableField<TGroupsRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>db_mall.t_groups.mdate</code>. 修改时间
     */
    public final TableField<TGroupsRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * Create a <code>db_mall.t_groups</code> table reference
     */
    public TGroups() {
        this(DSL.name("t_groups"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_groups</code> table reference
     */
    public TGroups(String alias) {
        this(DSL.name(alias), T_GROUPS);
    }

    /**
     * Create an aliased <code>db_mall.t_groups</code> table reference
     */
    public TGroups(Name alias) {
        this(alias, T_GROUPS);
    }

    private TGroups(Name alias, Table<TGroupsRecord> aliased) {
        this(alias, aliased, null);
    }

    private TGroups(Name alias, Table<TGroupsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TGroups(Table<O> child, ForeignKey<O, TGroupsRecord> key) {
        super(child, key, T_GROUPS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_GROUPS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TGroupsRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_T_GROUPS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TGroupsRecord> getPrimaryKey() {
        return Keys.KEY_T_GROUPS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TGroupsRecord>> getKeys() {
        return Arrays.<UniqueKey<TGroupsRecord>>asList(Keys.KEY_T_GROUPS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TGroups as(String alias) {
        return new TGroups(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TGroups as(Name alias) {
        return new TGroups(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TGroups rename(String name) {
        return new TGroups(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TGroups rename(Name name) {
        return new TGroups(name, null);
    }
}
