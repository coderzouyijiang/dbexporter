/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TProductCategoryRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 商品分类表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductCategory extends TableImpl<TProductCategoryRecord> {

    private static final long serialVersionUID = -1902965819;

    /**
     * The reference instance of <code>db_mall.t_product_category</code>
     */
    public static final TProductCategory T_PRODUCT_CATEGORY = new TProductCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProductCategoryRecord> getRecordType() {
        return TProductCategoryRecord.class;
    }

    /**
     * The column <code>db_mall.t_product_category.id</code>.  和erp一致 
     */
    public final TableField<TProductCategoryRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, " 和erp一致 ");

    /**
     * The column <code>db_mall.t_product_category.parent_id</code>. 父分类标识 和erp一致 
     */
    public final TableField<TProductCategoryRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "父分类标识 和erp一致 ");

    /**
     * The column <code>db_mall.t_product_category.status</code>. 分类状态(0:禁用;1:启用)
     */
    public final TableField<TProductCategoryRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "分类状态(0:禁用;1:启用)");

    /**
     * The column <code>db_mall.t_product_category.is_delete</code>. 是否删除
     */
    public final TableField<TProductCategoryRecord, Byte> IS_DELETE = createField("is_delete", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否删除");

    /**
     * The column <code>db_mall.t_product_category.name</code>. 分类名称 商城个性化名字
     */
    public final TableField<TProductCategoryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "分类名称 商城个性化名字");

    /**
     * The column <code>db_mall.t_product_category.show_name</code>. 显示名称 和erp一致 
     */
    public final TableField<TProductCategoryRecord, String> SHOW_NAME = createField("show_name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "显示名称 和erp一致 ");

    /**
     * The column <code>db_mall.t_product_category.oid</code>. 分类序号
     */
    public final TableField<TProductCategoryRecord, Integer> OID = createField("oid", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "分类序号");

    /**
     * The column <code>db_mall.t_product_category.sync_status</code>. 0:未处理 1：已处理【进搜索】
     */
    public final TableField<TProductCategoryRecord, Byte> SYNC_STATUS = createField("sync_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0:未处理 1：已处理【进搜索】");

    /**
     * The column <code>db_mall.t_product_category.cdate</code>. 创建时间
     */
    public final TableField<TProductCategoryRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>db_mall.t_product_category.mdate</code>. 修改时间
     */
    public final TableField<TProductCategoryRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * Create a <code>db_mall.t_product_category</code> table reference
     */
    public TProductCategory() {
        this(DSL.name("t_product_category"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_product_category</code> table reference
     */
    public TProductCategory(String alias) {
        this(DSL.name(alias), T_PRODUCT_CATEGORY);
    }

    /**
     * Create an aliased <code>db_mall.t_product_category</code> table reference
     */
    public TProductCategory(Name alias) {
        this(alias, T_PRODUCT_CATEGORY);
    }

    private TProductCategory(Name alias, Table<TProductCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProductCategory(Name alias, Table<TProductCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("商品分类表"));
    }

    public <O extends Record> TProductCategory(Table<O> child, ForeignKey<O, TProductCategoryRecord> key) {
        super(child, key, T_PRODUCT_CATEGORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRODUCT_CATEGORY_PRIMARY, Indexes.T_PRODUCT_CATEGORY_SYNC_STATUS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProductCategoryRecord> getPrimaryKey() {
        return Keys.KEY_T_PRODUCT_CATEGORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProductCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<TProductCategoryRecord>>asList(Keys.KEY_T_PRODUCT_CATEGORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductCategory as(String alias) {
        return new TProductCategory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductCategory as(Name alias) {
        return new TProductCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductCategory rename(String name) {
        return new TProductCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductCategory rename(Name name) {
        return new TProductCategory(name, null);
    }
}
