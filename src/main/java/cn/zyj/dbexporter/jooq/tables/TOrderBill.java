/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TOrderBillRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderBill extends TableImpl<TOrderBillRecord> {

    private static final long serialVersionUID = 1092888806;

    /**
     * The reference instance of <code>db_mall.t_order_bill</code>
     */
    public static final TOrderBill T_ORDER_BILL = new TOrderBill();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOrderBillRecord> getRecordType() {
        return TOrderBillRecord.class;
    }

    /**
     * The column <code>db_mall.t_order_bill.id</code>.
     */
    public final TableField<TOrderBillRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_order_bill.bill_code</code>. 账单标识
     */
    public final TableField<TOrderBillRecord, String> BILL_CODE = createField("bill_code", org.jooq.impl.SQLDataType.VARCHAR(30), this, "账单标识");

    /**
     * The column <code>db_mall.t_order_bill.customer_id</code>. 客户id
     */
    public final TableField<TOrderBillRecord, Integer> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "客户id");

    /**
     * The column <code>db_mall.t_order_bill.order_id</code>. 订单id
     */
    public final TableField<TOrderBillRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "订单id");

    /**
     * The column <code>db_mall.t_order_bill.main_order_id</code>. 主订单id
     */
    public final TableField<TOrderBillRecord, String> MAIN_ORDER_ID = createField("main_order_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "主订单id");

    /**
     * The column <code>db_mall.t_order_bill.coupon_id</code>. 优惠券id
     */
    public final TableField<TOrderBillRecord, Integer> COUPON_ID = createField("coupon_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "优惠券id");

    /**
     * The column <code>db_mall.t_order_bill.coupon_amount</code>. 优惠券金额
     */
    public final TableField<TOrderBillRecord, BigDecimal> COUPON_AMOUNT = createField("coupon_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "优惠券金额");

    /**
     * The column <code>db_mall.t_order_bill.amount</code>. 应付账单金额
     */
    public final TableField<TOrderBillRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "应付账单金额");

    /**
     * The column <code>db_mall.t_order_bill.status</code>. 是否付款（0已付款；1未付款）
     */
    public final TableField<TOrderBillRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否付款（0已付款；1未付款）");

    /**
     * The column <code>db_mall.t_order_bill.type_id</code>. （1现金押金；2销售金额；3租金；4信用押金；5违约金；6维修费；7服务费；8租金差价；9快递运费；10设备补偿金；11展期租金）
     */
    public final TableField<TOrderBillRecord, Integer> TYPE_ID = createField("type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "（1现金押金；2销售金额；3租金；4信用押金；5违约金；6维修费；7服务费；8租金差价；9快递运费；10设备补偿金；11展期租金）");

    /**
     * The column <code>db_mall.t_order_bill.source</code>. 是否冲销账单(0,否；1，是）
     */
    public final TableField<TOrderBillRecord, Integer> SOURCE = createField("source", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "是否冲销账单(0,否；1，是）");

    /**
     * The column <code>db_mall.t_order_bill.month</code>. 第几个月
     */
    public final TableField<TOrderBillRecord, Integer> MONTH = createField("month", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "第几个月");

    /**
     * The column <code>db_mall.t_order_bill.remark</code>. 备注
     */
    public final TableField<TOrderBillRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR(100), this, "备注");

    /**
     * The column <code>db_mall.t_order_bill.pay_date</code>. 支付时间
     */
    public final TableField<TOrderBillRecord, Timestamp> PAY_DATE = createField("pay_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "支付时间");

    /**
     * The column <code>db_mall.t_order_bill.balance_date</code>. 账单日
     */
    public final TableField<TOrderBillRecord, Integer> BALANCE_DATE = createField("balance_date", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "账单日");

    /**
     * The column <code>db_mall.t_order_bill.cut_money_date</code>. 付款日期
     */
    public final TableField<TOrderBillRecord, Integer> CUT_MONEY_DATE = createField("cut_money_date", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "付款日期");

    /**
     * The column <code>db_mall.t_order_bill.bill_month</code>. 账单归属的自然月份
     */
    public final TableField<TOrderBillRecord, Integer> BILL_MONTH = createField("bill_month", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "账单归属的自然月份");

    /**
     * The column <code>db_mall.t_order_bill.source_id</code>. 原账单id
     */
    public final TableField<TOrderBillRecord, Integer> SOURCE_ID = createField("source_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "原账单id");

    /**
     * The column <code>db_mall.t_order_bill.deposit</code>. 支付押金现金 
     */
    public final TableField<TOrderBillRecord, BigDecimal> DEPOSIT = createField("deposit", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "支付押金现金 ");

    /**
     * The column <code>db_mall.t_order_bill.credit_deposit</code>. 免押金部分
     */
    public final TableField<TOrderBillRecord, BigDecimal> CREDIT_DEPOSIT = createField("credit_deposit", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "免押金部分");

    /**
     * The column <code>db_mall.t_order_bill.is_expire</code>. 是否逾期（0否1是）
     */
    public final TableField<TOrderBillRecord, Byte> IS_EXPIRE = createField("is_expire", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否逾期（0否1是）");

    /**
     * The column <code>db_mall.t_order_bill.sms_date</code>. 短信时间
     */
    public final TableField<TOrderBillRecord, Integer> SMS_DATE = createField("sms_date", org.jooq.impl.SQLDataType.INTEGER, this, "短信时间");

    /**
     * The column <code>db_mall.t_order_bill.payed_amount</code>. 余额抵扣金额 
     */
    public final TableField<TOrderBillRecord, BigDecimal> PAYED_AMOUNT = createField("payed_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "余额抵扣金额 ");

    /**
     * The column <code>db_mall.t_order_bill.e_currency_virtual</code>.
     */
    public final TableField<TOrderBillRecord, BigDecimal> E_CURRENCY_VIRTUAL = createField("e_currency_virtual", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_bill.cdate</code>. 创建时间
     */
    public final TableField<TOrderBillRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>db_mall.t_order_bill.mdate</code>. 修改时间
     */
    public final TableField<TOrderBillRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "修改时间");

    /**
     * The column <code>db_mall.t_order_bill.sync_status</code>. 1 插入未同步 2插入已同步未响应 3修改未同步 6修改已同步未响应 7删除未同步 14删除已同步未响应 0已同步
     */
    public final TableField<TOrderBillRecord, Short> SYNC_STATUS = createField("sync_status", org.jooq.impl.SQLDataType.SMALLINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.SMALLINT)), this, "1 插入未同步 2插入已同步未响应 3修改未同步 6修改已同步未响应 7删除未同步 14删除已同步未响应 0已同步");

    /**
     * The column <code>db_mall.t_order_bill.bill_group</code>. 季付年付同一批生成的账单
     */
    public final TableField<TOrderBillRecord, Long> BILL_GROUP = createField("bill_group", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "季付年付同一批生成的账单");

    /**
     * The column <code>db_mall.t_order_bill.batch_id</code>. 冲销账单同批次生成id
     */
    public final TableField<TOrderBillRecord, Long> BATCH_ID = createField("batch_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "冲销账单同批次生成id");

    /**
     * The column <code>db_mall.t_order_bill.after_payed</code>. 此冲销账单是否在原账单已支付后发起，1:是；0，否，支付之前发起
     */
    public final TableField<TOrderBillRecord, Byte> AFTER_PAYED = createField("after_payed", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "此冲销账单是否在原账单已支付后发起，1:是；0，否，支付之前发起");

    /**
     * The column <code>db_mall.t_order_bill.effect</code>.
     */
    public final TableField<TOrderBillRecord, Integer> EFFECT = createField("effect", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>db_mall.t_order_bill</code> table reference
     */
    public TOrderBill() {
        this(DSL.name("t_order_bill"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_order_bill</code> table reference
     */
    public TOrderBill(String alias) {
        this(DSL.name(alias), T_ORDER_BILL);
    }

    /**
     * Create an aliased <code>db_mall.t_order_bill</code> table reference
     */
    public TOrderBill(Name alias) {
        this(alias, T_ORDER_BILL);
    }

    private TOrderBill(Name alias, Table<TOrderBillRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOrderBill(Name alias, Table<TOrderBillRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TOrderBill(Table<O> child, ForeignKey<O, TOrderBillRecord> key) {
        super(child, key, T_ORDER_BILL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ORDER_BILL_BILL_CODE, Indexes.T_ORDER_BILL_BILL_MONTH, Indexes.T_ORDER_BILL_CUSTOMER_ID, Indexes.T_ORDER_BILL_MAIN_ORDER_ID, Indexes.T_ORDER_BILL_MDATE, Indexes.T_ORDER_BILL_ORDER_ID_S_MONTH, Indexes.T_ORDER_BILL_PRIMARY, Indexes.T_ORDER_BILL_SOURCE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TOrderBillRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_ORDER_BILL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOrderBillRecord> getPrimaryKey() {
        return Keys.KEY_T_ORDER_BILL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOrderBillRecord>> getKeys() {
        return Arrays.<UniqueKey<TOrderBillRecord>>asList(Keys.KEY_T_ORDER_BILL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderBill as(String alias) {
        return new TOrderBill(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderBill as(Name alias) {
        return new TOrderBill(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderBill rename(String name) {
        return new TOrderBill(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderBill rename(Name name) {
        return new TOrderBill(name, null);
    }
}
