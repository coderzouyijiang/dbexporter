/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables.records;


import cn.zyj.dbexporter.jooq.tables.TWithdrawRequestEvent;

import java.math.BigDecimal;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TWithdrawRequestEventRecord extends UpdatableRecordImpl<TWithdrawRequestEventRecord> implements Record8<Long, Long, Byte, Byte, Timestamp, Timestamp, BigDecimal, Integer> {

    private static final long serialVersionUID = -1095931382;

    /**
     * Setter for <code>db_mall.t_withdraw_request_event.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>db_mall.t_withdraw_request_event.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>db_mall.t_withdraw_request_event.request_id</code>.
     */
    public void setRequestId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>db_mall.t_withdraw_request_event.request_id</code>.
     */
    public Long getRequestId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>db_mall.t_withdraw_request_event.type_id</code>.
     */
    public void setTypeId(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>db_mall.t_withdraw_request_event.type_id</code>.
     */
    public Byte getTypeId() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>db_mall.t_withdraw_request_event.sync_status</code>.
     */
    public void setSyncStatus(Byte value) {
        set(3, value);
    }

    /**
     * Getter for <code>db_mall.t_withdraw_request_event.sync_status</code>.
     */
    public Byte getSyncStatus() {
        return (Byte) get(3);
    }

    /**
     * Setter for <code>db_mall.t_withdraw_request_event.cdate</code>.
     */
    public void setCdate(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>db_mall.t_withdraw_request_event.cdate</code>.
     */
    public Timestamp getCdate() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>db_mall.t_withdraw_request_event.mdate</code>.
     */
    public void setMdate(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>db_mall.t_withdraw_request_event.mdate</code>.
     */
    public Timestamp getMdate() {
        return (Timestamp) get(5);
    }

    /**
     * Setter for <code>db_mall.t_withdraw_request_event.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>db_mall.t_withdraw_request_event.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>db_mall.t_withdraw_request_event.customer_id</code>.
     */
    public void setCustomerId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>db_mall.t_withdraw_request_event.customer_id</code>.
     */
    public Integer getCustomerId() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, Long, Byte, Byte, Timestamp, Timestamp, BigDecimal, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Long, Long, Byte, Byte, Timestamp, Timestamp, BigDecimal, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field1() {
        return TWithdrawRequestEvent.T_WITHDRAW_REQUEST_EVENT.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Long> field2() {
        return TWithdrawRequestEvent.T_WITHDRAW_REQUEST_EVENT.REQUEST_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field3() {
        return TWithdrawRequestEvent.T_WITHDRAW_REQUEST_EVENT.TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Byte> field4() {
        return TWithdrawRequestEvent.T_WITHDRAW_REQUEST_EVENT.SYNC_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return TWithdrawRequestEvent.T_WITHDRAW_REQUEST_EVENT.CDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return TWithdrawRequestEvent.T_WITHDRAW_REQUEST_EVENT.MDATE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<BigDecimal> field7() {
        return TWithdrawRequestEvent.T_WITHDRAW_REQUEST_EVENT.AMOUNT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return TWithdrawRequestEvent.T_WITHDRAW_REQUEST_EVENT.CUSTOMER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long component2() {
        return getRequestId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component3() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte component4() {
        return getSyncStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component5() {
        return getCdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp component6() {
        return getMdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal component7() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component8() {
        return getCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Long value2() {
        return getRequestId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value3() {
        return getTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Byte value4() {
        return getSyncStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getMdate();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public BigDecimal value7() {
        return getAmount();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TWithdrawRequestEventRecord value1(Long value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TWithdrawRequestEventRecord value2(Long value) {
        setRequestId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TWithdrawRequestEventRecord value3(Byte value) {
        setTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TWithdrawRequestEventRecord value4(Byte value) {
        setSyncStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TWithdrawRequestEventRecord value5(Timestamp value) {
        setCdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TWithdrawRequestEventRecord value6(Timestamp value) {
        setMdate(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TWithdrawRequestEventRecord value7(BigDecimal value) {
        setAmount(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TWithdrawRequestEventRecord value8(Integer value) {
        setCustomerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TWithdrawRequestEventRecord values(Long value1, Long value2, Byte value3, Byte value4, Timestamp value5, Timestamp value6, BigDecimal value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TWithdrawRequestEventRecord
     */
    public TWithdrawRequestEventRecord() {
        super(TWithdrawRequestEvent.T_WITHDRAW_REQUEST_EVENT);
    }

    /**
     * Create a detached, initialised TWithdrawRequestEventRecord
     */
    public TWithdrawRequestEventRecord(Long id, Long requestId, Byte typeId, Byte syncStatus, Timestamp cdate, Timestamp mdate, BigDecimal amount, Integer customerId) {
        super(TWithdrawRequestEvent.T_WITHDRAW_REQUEST_EVENT);

        set(0, id);
        set(1, requestId);
        set(2, typeId);
        set(3, syncStatus);
        set(4, cdate);
        set(5, mdate);
        set(6, amount);
        set(7, customerId);
    }
}
