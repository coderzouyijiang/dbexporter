/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TRightRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 权限表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRight extends TableImpl<TRightRecord> {

    private static final long serialVersionUID = 430338703;

    /**
     * The reference instance of <code>db_mall.t_right</code>
     */
    public static final TRight T_RIGHT = new TRight();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRightRecord> getRecordType() {
        return TRightRecord.class;
    }

    /**
     * The column <code>db_mall.t_right.id</code>. 权限标识
     */
    public final TableField<TRightRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "权限标识");

    /**
     * The column <code>db_mall.t_right.menu_id</code>. 菜单标识
     */
    public final TableField<TRightRecord, Long> MENU_ID = createField("menu_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "菜单标识");

    /**
     * The column <code>db_mall.t_right.name</code>. 权限名称
     */
    public final TableField<TRightRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "权限名称");

    /**
     * The column <code>db_mall.t_right.href</code>. 权限链接
     */
    public final TableField<TRightRecord, String> HREF = createField("href", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "权限链接");

    /**
     * The column <code>db_mall.t_right.description</code>. 权限描述
     */
    public final TableField<TRightRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(255), this, "权限描述");

    /**
     * Create a <code>db_mall.t_right</code> table reference
     */
    public TRight() {
        this(DSL.name("t_right"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_right</code> table reference
     */
    public TRight(String alias) {
        this(DSL.name(alias), T_RIGHT);
    }

    /**
     * Create an aliased <code>db_mall.t_right</code> table reference
     */
    public TRight(Name alias) {
        this(alias, T_RIGHT);
    }

    private TRight(Name alias, Table<TRightRecord> aliased) {
        this(alias, aliased, null);
    }

    private TRight(Name alias, Table<TRightRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("权限表"));
    }

    public <O extends Record> TRight(Table<O> child, ForeignKey<O, TRightRecord> key) {
        super(child, key, T_RIGHT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_RIGHT_FK_RIGHT_MENU_ID, Indexes.T_RIGHT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TRightRecord> getPrimaryKey() {
        return Keys.KEY_T_RIGHT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TRightRecord>> getKeys() {
        return Arrays.<UniqueKey<TRightRecord>>asList(Keys.KEY_T_RIGHT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TRightRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TRightRecord, ?>>asList(Keys.T_RIGHT_IBFK_1);
    }

    public TMenu tMenu() {
        return new TMenu(this, Keys.T_RIGHT_IBFK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRight as(String alias) {
        return new TRight(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRight as(Name alias) {
        return new TRight(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRight rename(String name) {
        return new TRight(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TRight rename(Name name) {
        return new TRight(name, null);
    }
}
