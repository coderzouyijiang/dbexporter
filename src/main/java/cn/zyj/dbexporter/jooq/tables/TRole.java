/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TRoleRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 角色表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TRole extends TableImpl<TRoleRecord> {

    private static final long serialVersionUID = -1561561830;

    /**
     * The reference instance of <code>db_mall.t_role</code>
     */
    public static final TRole T_ROLE = new TRole();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TRoleRecord> getRecordType() {
        return TRoleRecord.class;
    }

    /**
     * The column <code>db_mall.t_role.id</code>. 角色标识
     */
    public final TableField<TRoleRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "角色标识");

    /**
     * The column <code>db_mall.t_role.status</code>. 角色状态(0:禁用;1:启用)
     */
    public final TableField<TRoleRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "角色状态(0:禁用;1:启用)");

    /**
     * The column <code>db_mall.t_role.is_deleted</code>. 是否删除
     */
    public final TableField<TRoleRecord, Boolean> IS_DELETED = createField("is_deleted", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "是否删除");

    /**
     * The column <code>db_mall.t_role.name</code>. 角色名称
     */
    public final TableField<TRoleRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "角色名称");

    /**
     * The column <code>db_mall.t_role.description</code>. 角色描述
     */
    public final TableField<TRoleRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.CLOB, this, "角色描述");

    /**
     * The column <code>db_mall.t_role.created_time</code>. 创建时间
     */
    public final TableField<TRoleRecord, Timestamp> CREATED_TIME = createField("created_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "创建时间");

    /**
     * The column <code>db_mall.t_role.modified_time</code>. 修改时间
     */
    public final TableField<TRoleRecord, Timestamp> MODIFIED_TIME = createField("modified_time", org.jooq.impl.SQLDataType.TIMESTAMP, this, "修改时间");

    /**
     * The column <code>db_mall.t_role.additional</code>. 附加信息
     */
    public final TableField<TRoleRecord, String> ADDITIONAL = createField("additional", org.jooq.impl.SQLDataType.CLOB, this, "附加信息");

    /**
     * Create a <code>db_mall.t_role</code> table reference
     */
    public TRole() {
        this(DSL.name("t_role"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_role</code> table reference
     */
    public TRole(String alias) {
        this(DSL.name(alias), T_ROLE);
    }

    /**
     * Create an aliased <code>db_mall.t_role</code> table reference
     */
    public TRole(Name alias) {
        this(alias, T_ROLE);
    }

    private TRole(Name alias, Table<TRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private TRole(Name alias, Table<TRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("角色表"));
    }

    public <O extends Record> TRole(Table<O> child, ForeignKey<O, TRoleRecord> key) {
        super(child, key, T_ROLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TRoleRecord> getPrimaryKey() {
        return Keys.KEY_T_ROLE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<TRoleRecord>>asList(Keys.KEY_T_ROLE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRole as(String alias) {
        return new TRole(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TRole as(Name alias) {
        return new TRole(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TRole rename(String name) {
        return new TRole(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TRole rename(Name name) {
        return new TRole(name, null);
    }
}
