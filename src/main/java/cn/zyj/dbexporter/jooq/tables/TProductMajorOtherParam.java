/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TProductMajorOtherParamRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductMajorOtherParam extends TableImpl<TProductMajorOtherParamRecord> {

    private static final long serialVersionUID = -1099161411;

    /**
     * The reference instance of <code>db_mall.t_product_major_other_param</code>
     */
    public static final TProductMajorOtherParam T_PRODUCT_MAJOR_OTHER_PARAM = new TProductMajorOtherParam();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProductMajorOtherParamRecord> getRecordType() {
        return TProductMajorOtherParamRecord.class;
    }

    /**
     * The column <code>db_mall.t_product_major_other_param.id</code>.
     */
    public final TableField<TProductMajorOtherParamRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_product_major_other_param.memory_capacity</code>.
     */
    public final TableField<TProductMajorOtherParamRecord, String> MEMORY_CAPACITY = createField("memory_capacity", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_mall.t_product_major_other_param.disk_capacity</code>.
     */
    public final TableField<TProductMajorOtherParamRecord, String> DISK_CAPACITY = createField("disk_capacity", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_mall.t_product_major_other_param.disk_type</code>.
     */
    public final TableField<TProductMajorOtherParamRecord, String> DISK_TYPE = createField("disk_type", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_mall.t_product_major_other_param.graphics_card_model</code>.
     */
    public final TableField<TProductMajorOtherParamRecord, String> GRAPHICS_CARD_MODEL = createField("graphics_card_model", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_mall.t_product_major_other_param.graphics_card_type</code>.
     */
    public final TableField<TProductMajorOtherParamRecord, String> GRAPHICS_CARD_TYPE = createField("graphics_card_type", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>db_mall.t_product_major_other_param.graphics_card_capacity</code>.
     */
    public final TableField<TProductMajorOtherParamRecord, String> GRAPHICS_CARD_CAPACITY = createField("graphics_card_capacity", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>db_mall.t_product_major_other_param</code> table reference
     */
    public TProductMajorOtherParam() {
        this(DSL.name("t_product_major_other_param"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_product_major_other_param</code> table reference
     */
    public TProductMajorOtherParam(String alias) {
        this(DSL.name(alias), T_PRODUCT_MAJOR_OTHER_PARAM);
    }

    /**
     * Create an aliased <code>db_mall.t_product_major_other_param</code> table reference
     */
    public TProductMajorOtherParam(Name alias) {
        this(alias, T_PRODUCT_MAJOR_OTHER_PARAM);
    }

    private TProductMajorOtherParam(Name alias, Table<TProductMajorOtherParamRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProductMajorOtherParam(Name alias, Table<TProductMajorOtherParamRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TProductMajorOtherParam(Table<O> child, ForeignKey<O, TProductMajorOtherParamRecord> key) {
        super(child, key, T_PRODUCT_MAJOR_OTHER_PARAM);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRODUCT_MAJOR_OTHER_PARAM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProductMajorOtherParamRecord> getPrimaryKey() {
        return Keys.KEY_T_PRODUCT_MAJOR_OTHER_PARAM_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProductMajorOtherParamRecord>> getKeys() {
        return Arrays.<UniqueKey<TProductMajorOtherParamRecord>>asList(Keys.KEY_T_PRODUCT_MAJOR_OTHER_PARAM_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductMajorOtherParam as(String alias) {
        return new TProductMajorOtherParam(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductMajorOtherParam as(Name alias) {
        return new TProductMajorOtherParam(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductMajorOtherParam rename(String name) {
        return new TProductMajorOtherParam(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductMajorOtherParam rename(Name name) {
        return new TProductMajorOtherParam(name, null);
    }
}
