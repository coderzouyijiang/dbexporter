/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TProductKeyRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductKey extends TableImpl<TProductKeyRecord> {

    private static final long serialVersionUID = -898368061;

    /**
     * The reference instance of <code>db_mall.t_product_key</code>
     */
    public static final TProductKey T_PRODUCT_KEY = new TProductKey();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProductKeyRecord> getRecordType() {
        return TProductKeyRecord.class;
    }

    /**
     * The column <code>db_mall.t_product_key.id</code>.
     */
    public final TableField<TProductKeyRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_product_key.product_id</code>. 商品ID
     */
    public final TableField<TProductKeyRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "商品ID");

    /**
     * The column <code>db_mall.t_product_key.key_str</code>. 秘钥
     */
    public final TableField<TProductKeyRecord, String> KEY_STR = createField("key_str", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "秘钥");

    /**
     * The column <code>db_mall.t_product_key.check_status</code>. 审核状态 0:未审核 1 : 已审核
     */
    public final TableField<TProductKeyRecord, Byte> CHECK_STATUS = createField("check_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "审核状态 0:未审核 1 : 已审核");

    /**
     * The column <code>db_mall.t_product_key.email_status</code>. 邮件发送状态   0:未发送   1:发送
     */
    public final TableField<TProductKeyRecord, Byte> EMAIL_STATUS = createField("email_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "邮件发送状态   0:未发送   1:发送");

    /**
     * The column <code>db_mall.t_product_key.title</code>. 标题
     */
    public final TableField<TProductKeyRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(500), this, "标题");

    /**
     * The column <code>db_mall.t_product_key.deposit</code>. 押金
     */
    public final TableField<TProductKeyRecord, BigDecimal> DEPOSIT = createField("deposit", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "押金");

    /**
     * The column <code>db_mall.t_product_key.credit_amount</code>. 风控授信额度
     */
    public final TableField<TProductKeyRecord, BigDecimal> CREDIT_AMOUNT = createField("credit_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "风控授信额度");

    /**
     * The column <code>db_mall.t_product_key.phone</code>. 专属手机号
     */
    public final TableField<TProductKeyRecord, String> PHONE = createField("phone", org.jooq.impl.SQLDataType.VARCHAR(255), this, "专属手机号");

    /**
     * The column <code>db_mall.t_product_key.stock</code>. 预售库存
     */
    public final TableField<TProductKeyRecord, Integer> STOCK = createField("stock", org.jooq.impl.SQLDataType.INTEGER, this, "预售库存");

    /**
     * The column <code>db_mall.t_product_key.cdate</code>.
     */
    public final TableField<TProductKeyRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>db_mall.t_product_key.mdate</code>.
     */
    public final TableField<TProductKeyRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * Create a <code>db_mall.t_product_key</code> table reference
     */
    public TProductKey() {
        this(DSL.name("t_product_key"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_product_key</code> table reference
     */
    public TProductKey(String alias) {
        this(DSL.name(alias), T_PRODUCT_KEY);
    }

    /**
     * Create an aliased <code>db_mall.t_product_key</code> table reference
     */
    public TProductKey(Name alias) {
        this(alias, T_PRODUCT_KEY);
    }

    private TProductKey(Name alias, Table<TProductKeyRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProductKey(Name alias, Table<TProductKeyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TProductKey(Table<O> child, ForeignKey<O, TProductKeyRecord> key) {
        super(child, key, T_PRODUCT_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRODUCT_KEY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TProductKeyRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_PRODUCT_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProductKeyRecord> getPrimaryKey() {
        return Keys.KEY_T_PRODUCT_KEY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProductKeyRecord>> getKeys() {
        return Arrays.<UniqueKey<TProductKeyRecord>>asList(Keys.KEY_T_PRODUCT_KEY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductKey as(String alias) {
        return new TProductKey(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductKey as(Name alias) {
        return new TProductKey(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductKey rename(String name) {
        return new TProductKey(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductKey rename(Name name) {
        return new TProductKey(name, null);
    }
}
