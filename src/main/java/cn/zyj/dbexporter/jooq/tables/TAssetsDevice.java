/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TAssetsDeviceRecord;

import java.math.BigDecimal;
import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TAssetsDevice extends TableImpl<TAssetsDeviceRecord> {

    private static final long serialVersionUID = -582937025;

    /**
     * The reference instance of <code>db_mall.t_assets_device</code>
     */
    public static final TAssetsDevice T_ASSETS_DEVICE = new TAssetsDevice();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TAssetsDeviceRecord> getRecordType() {
        return TAssetsDeviceRecord.class;
    }

    /**
     * The column <code>db_mall.t_assets_device.id</code>.
     */
    public final TableField<TAssetsDeviceRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_assets_device.customer_id</code>.
     */
    public final TableField<TAssetsDeviceRecord, Integer> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_assets_device.order_id</code>.
     */
    public final TableField<TAssetsDeviceRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_assets_device.product_id</code>.
     */
    public final TableField<TAssetsDeviceRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_assets_device.sn</code>.
     */
    public final TableField<TAssetsDeviceRecord, String> SN = createField("sn", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_assets_device.title</code>.
     */
    public final TableField<TAssetsDeviceRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_assets_device.company_name</code>.
     */
    public final TableField<TAssetsDeviceRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR(500), this, "");

    /**
     * The column <code>db_mall.t_assets_device.start_date</code>.
     */
    public final TableField<TAssetsDeviceRecord, Date> START_DATE = createField("start_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_assets_device.end_date</code>.
     */
    public final TableField<TAssetsDeviceRecord, Date> END_DATE = createField("end_date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_assets_device.deposit</code>.
     */
    public final TableField<TAssetsDeviceRecord, BigDecimal> DEPOSIT = createField("deposit", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_assets_device.rent</code>.
     */
    public final TableField<TAssetsDeviceRecord, BigDecimal> RENT = createField("rent", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_assets_device.market_price</code>.
     */
    public final TableField<TAssetsDeviceRecord, BigDecimal> MARKET_PRICE = createField("market_price", org.jooq.impl.SQLDataType.DECIMAL(10, 2), this, "");

    /**
     * The column <code>db_mall.t_assets_device.status</code>.
     */
    public final TableField<TAssetsDeviceRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_assets_device.rent_status</code>.
     */
    public final TableField<TAssetsDeviceRecord, Byte> RENT_STATUS = createField("rent_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_assets_device.belong_id</code>.
     */
    public final TableField<TAssetsDeviceRecord, Integer> BELONG_ID = createField("belong_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db_mall.t_assets_device.cdate</code>.
     */
    public final TableField<TAssetsDeviceRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_assets_device.mdate</code>.
     */
    public final TableField<TAssetsDeviceRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * Create a <code>db_mall.t_assets_device</code> table reference
     */
    public TAssetsDevice() {
        this(DSL.name("t_assets_device"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_assets_device</code> table reference
     */
    public TAssetsDevice(String alias) {
        this(DSL.name(alias), T_ASSETS_DEVICE);
    }

    /**
     * Create an aliased <code>db_mall.t_assets_device</code> table reference
     */
    public TAssetsDevice(Name alias) {
        this(alias, T_ASSETS_DEVICE);
    }

    private TAssetsDevice(Name alias, Table<TAssetsDeviceRecord> aliased) {
        this(alias, aliased, null);
    }

    private TAssetsDevice(Name alias, Table<TAssetsDeviceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TAssetsDevice(Table<O> child, ForeignKey<O, TAssetsDeviceRecord> key) {
        super(child, key, T_ASSETS_DEVICE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ASSETS_DEVICE_ORDER_ID, Indexes.T_ASSETS_DEVICE_PRIMARY, Indexes.T_ASSETS_DEVICE_STATUS_RENT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TAssetsDeviceRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_ASSETS_DEVICE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TAssetsDeviceRecord> getPrimaryKey() {
        return Keys.KEY_T_ASSETS_DEVICE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TAssetsDeviceRecord>> getKeys() {
        return Arrays.<UniqueKey<TAssetsDeviceRecord>>asList(Keys.KEY_T_ASSETS_DEVICE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAssetsDevice as(String alias) {
        return new TAssetsDevice(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TAssetsDevice as(Name alias) {
        return new TAssetsDevice(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TAssetsDevice rename(String name) {
        return new TAssetsDevice(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TAssetsDevice rename(Name name) {
        return new TAssetsDevice(name, null);
    }
}
