/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TCrmOrderErrorLogRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCrmOrderErrorLog extends TableImpl<TCrmOrderErrorLogRecord> {

    private static final long serialVersionUID = 1895546601;

    /**
     * The reference instance of <code>db_mall.t_crm_order_error_log</code>
     */
    public static final TCrmOrderErrorLog T_CRM_ORDER_ERROR_LOG = new TCrmOrderErrorLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCrmOrderErrorLogRecord> getRecordType() {
        return TCrmOrderErrorLogRecord.class;
    }

    /**
     * The column <code>db_mall.t_crm_order_error_log.id</code>.
     */
    public final TableField<TCrmOrderErrorLogRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_crm_order_error_log.parameter</code>.
     */
    public final TableField<TCrmOrderErrorLogRecord, String> PARAMETER = createField("parameter", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>db_mall.t_crm_order_error_log.result</code>.
     */
    public final TableField<TCrmOrderErrorLogRecord, String> RESULT = createField("result", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>db_mall.t_crm_order_error_log.node_id</code>.
     */
    public final TableField<TCrmOrderErrorLogRecord, Integer> NODE_ID = createField("node_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>db_mall.t_crm_order_error_log</code> table reference
     */
    public TCrmOrderErrorLog() {
        this(DSL.name("t_crm_order_error_log"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_crm_order_error_log</code> table reference
     */
    public TCrmOrderErrorLog(String alias) {
        this(DSL.name(alias), T_CRM_ORDER_ERROR_LOG);
    }

    /**
     * Create an aliased <code>db_mall.t_crm_order_error_log</code> table reference
     */
    public TCrmOrderErrorLog(Name alias) {
        this(alias, T_CRM_ORDER_ERROR_LOG);
    }

    private TCrmOrderErrorLog(Name alias, Table<TCrmOrderErrorLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCrmOrderErrorLog(Name alias, Table<TCrmOrderErrorLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TCrmOrderErrorLog(Table<O> child, ForeignKey<O, TCrmOrderErrorLogRecord> key) {
        super(child, key, T_CRM_ORDER_ERROR_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CRM_ORDER_ERROR_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCrmOrderErrorLogRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_CRM_ORDER_ERROR_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCrmOrderErrorLogRecord> getPrimaryKey() {
        return Keys.KEY_T_CRM_ORDER_ERROR_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCrmOrderErrorLogRecord>> getKeys() {
        return Arrays.<UniqueKey<TCrmOrderErrorLogRecord>>asList(Keys.KEY_T_CRM_ORDER_ERROR_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCrmOrderErrorLog as(String alias) {
        return new TCrmOrderErrorLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCrmOrderErrorLog as(Name alias) {
        return new TCrmOrderErrorLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCrmOrderErrorLog rename(String name) {
        return new TCrmOrderErrorLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCrmOrderErrorLog rename(Name name) {
        return new TCrmOrderErrorLog(name, null);
    }
}
