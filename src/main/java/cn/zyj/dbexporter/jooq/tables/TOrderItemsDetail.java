/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TOrderItemsDetailRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderItemsDetail extends TableImpl<TOrderItemsDetailRecord> {

    private static final long serialVersionUID = 1315814804;

    /**
     * The reference instance of <code>db_mall.t_order_items_detail</code>
     */
    public static final TOrderItemsDetail T_ORDER_ITEMS_DETAIL = new TOrderItemsDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOrderItemsDetailRecord> getRecordType() {
        return TOrderItemsDetailRecord.class;
    }

    /**
     * The column <code>db_mall.t_order_items_detail.id</code>.
     */
    public final TableField<TOrderItemsDetailRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.order_id</code>.
     */
    public final TableField<TOrderItemsDetailRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.main_order_id</code>.
     */
    public final TableField<TOrderItemsDetailRecord, String> MAIN_ORDER_ID = createField("main_order_id", org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.customer_id</code>.
     */
    public final TableField<TOrderItemsDetailRecord, Integer> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.product_id</code>.
     */
    public final TableField<TOrderItemsDetailRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.title</code>.
     */
    public final TableField<TOrderItemsDetailRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(300).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.sku_ids</code>.
     */
    public final TableField<TOrderItemsDetailRecord, String> SKU_IDS = createField("sku_ids", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.sns</code>.
     */
    public final TableField<TOrderItemsDetailRecord, String> SNS = createField("sns", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.item_id</code>. 订单快照标识
     */
    public final TableField<TOrderItemsDetailRecord, Integer> ITEM_ID = createField("item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "订单快照标识");

    /**
     * The column <code>db_mall.t_order_items_detail.express_info</code>. 快递信息
     */
    public final TableField<TOrderItemsDetailRecord, String> EXPRESS_INFO = createField("express_info", org.jooq.impl.SQLDataType.VARCHAR(1000).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "快递信息");

    /**
     * The column <code>db_mall.t_order_items_detail.is_sale</code>. 是否销售
     */
    public final TableField<TOrderItemsDetailRecord, Byte> IS_SALE = createField("is_sale", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否销售");

    /**
     * The column <code>db_mall.t_order_items_detail.status</code>. 0：未收货；1：已收货；2：设备回收；4：设备终止；99：作废
     */
    public final TableField<TOrderItemsDetailRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "0：未收货；1：已收货；2：设备回收；4：设备终止；99：作废");

    /**
     * The column <code>db_mall.t_order_items_detail.month</code>.
     */
    public final TableField<TOrderItemsDetailRecord, Integer> MONTH = createField("month", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.money</code>.
     */
    public final TableField<TOrderItemsDetailRecord, BigDecimal> MONEY = createField("money", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.insurance_amount</code>.
     */
    public final TableField<TOrderItemsDetailRecord, BigDecimal> INSURANCE_AMOUNT = createField("insurance_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.added_service_amount</code>. 增值服务金额
     */
    public final TableField<TOrderItemsDetailRecord, BigDecimal> ADDED_SERVICE_AMOUNT = createField("added_service_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "增值服务金额");

    /**
     * The column <code>db_mall.t_order_items_detail.max_balance_num</code>. 该值等于承租月数
     */
    public final TableField<TOrderItemsDetailRecord, Integer> MAX_BALANCE_NUM = createField("max_balance_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "该值等于承租月数");

    /**
     * The column <code>db_mall.t_order_items_detail.now_balance_num</code>. 已出的账单期数
     */
    public final TableField<TOrderItemsDetailRecord, Integer> NOW_BALANCE_NUM = createField("now_balance_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "已出的账单期数");

    /**
     * The column <code>db_mall.t_order_items_detail.balance_date</code>. 出账单年月
     */
    public final TableField<TOrderItemsDetailRecord, Integer> BALANCE_DATE = createField("balance_date", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "出账单年月");

    /**
     * The column <code>db_mall.t_order_items_detail.return_date</code>.
     */
    public final TableField<TOrderItemsDetailRecord, Timestamp> RETURN_DATE = createField("return_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.item_return_date_receive</code>. 设备挂应收的时间
     */
    public final TableField<TOrderItemsDetailRecord, Timestamp> ITEM_RETURN_DATE_RECEIVE = createField("item_return_date_receive", org.jooq.impl.SQLDataType.TIMESTAMP, this, "设备挂应收的时间");

    /**
     * The column <code>db_mall.t_order_items_detail.return_reason</code>.
     */
    public final TableField<TOrderItemsDetailRecord, Integer> RETURN_REASON = createField("return_reason", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.assets_package_id</code>.
     */
    public final TableField<TOrderItemsDetailRecord, Integer> ASSETS_PACKAGE_ID = createField("assets_package_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.need_pay_rent</code>. 待付租金【资产打包使用，只要未付都计算在内】
     */
    public final TableField<TOrderItemsDetailRecord, BigDecimal> NEED_PAY_RENT = createField("need_pay_rent", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "待付租金【资产打包使用，只要未付都计算在内】");

    /**
     * The column <code>db_mall.t_order_items_detail.deposit</code>. 押金
     */
    public final TableField<TOrderItemsDetailRecord, BigDecimal> DEPOSIT = createField("deposit", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "押金");

    /**
     * The column <code>db_mall.t_order_items_detail.insurance_type_id</code>.
     */
    public final TableField<TOrderItemsDetailRecord, Byte> INSURANCE_TYPE_ID = createField("insurance_type_id", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.added_service_type</code>. 增值服务类型
     */
    public final TableField<TOrderItemsDetailRecord, Byte> ADDED_SERVICE_TYPE = createField("added_service_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "增值服务类型");

    /**
     * The column <code>db_mall.t_order_items_detail.exchange_status</code>. 换货状态
     */
    public final TableField<TOrderItemsDetailRecord, Byte> EXCHANGE_STATUS = createField("exchange_status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "换货状态");

    /**
     * The column <code>db_mall.t_order_items_detail.cdate</code>.
     */
    public final TableField<TOrderItemsDetailRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.mdate</code>.
     */
    public final TableField<TOrderItemsDetailRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_items_detail.pay_deposit</code>. 冻结押金
     */
    public final TableField<TOrderItemsDetailRecord, BigDecimal> PAY_DEPOSIT = createField("pay_deposit", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "冻结押金");

    /**
     * The column <code>db_mall.t_order_items_detail.relief_deposit</code>. 免押金
     */
    public final TableField<TOrderItemsDetailRecord, BigDecimal> RELIEF_DEPOSIT = createField("relief_deposit", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "免押金");

    /**
     * The column <code>db_mall.t_order_items_detail.displace_amount</code>. 置换金额
     */
    public final TableField<TOrderItemsDetailRecord, BigDecimal> DISPLACE_AMOUNT = createField("displace_amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "置换金额");

    /**
     * The column <code>db_mall.t_order_items_detail.is_virtual</code>. 是否虚拟订单 0否；1是
     */
    public final TableField<TOrderItemsDetailRecord, Byte> IS_VIRTUAL = createField("is_virtual", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否虚拟订单 0否；1是");

    /**
     * The column <code>db_mall.t_order_items_detail.virtual_reason</code>. 虚拟原因 0设备调拨；1更改租赁方式；2更改付款方式；3更改设备sku 4更改设备SN；5换货设备未退回；6QUICKPC 部分换机
     */
    public final TableField<TOrderItemsDetailRecord, Byte> VIRTUAL_REASON = createField("virtual_reason", org.jooq.impl.SQLDataType.TINYINT, this, "虚拟原因 0设备调拨；1更改租赁方式；2更改付款方式；3更改设备sku 4更改设备SN；5换货设备未退回；6QUICKPC 部分换机");

    /**
     * Create a <code>db_mall.t_order_items_detail</code> table reference
     */
    public TOrderItemsDetail() {
        this(DSL.name("t_order_items_detail"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_order_items_detail</code> table reference
     */
    public TOrderItemsDetail(String alias) {
        this(DSL.name(alias), T_ORDER_ITEMS_DETAIL);
    }

    /**
     * Create an aliased <code>db_mall.t_order_items_detail</code> table reference
     */
    public TOrderItemsDetail(Name alias) {
        this(alias, T_ORDER_ITEMS_DETAIL);
    }

    private TOrderItemsDetail(Name alias, Table<TOrderItemsDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOrderItemsDetail(Name alias, Table<TOrderItemsDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TOrderItemsDetail(Table<O> child, ForeignKey<O, TOrderItemsDetailRecord> key) {
        super(child, key, T_ORDER_ITEMS_DETAIL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ORDER_ITEMS_DETAIL_ASSETS_PACKAGE_ID, Indexes.T_ORDER_ITEMS_DETAIL_CUSTOMER_ID, Indexes.T_ORDER_ITEMS_DETAIL_CUSTOMER_ID_PRODUCT_ID, Indexes.T_ORDER_ITEMS_DETAIL_ITEM_ID_INDEX, Indexes.T_ORDER_ITEMS_DETAIL_MAIN_ORDER_ID, Indexes.T_ORDER_ITEMS_DETAIL_ORDER_ID, Indexes.T_ORDER_ITEMS_DETAIL_PRIMARY, Indexes.T_ORDER_ITEMS_DETAIL_SE, Indexes.T_ORDER_ITEMS_DETAIL_SS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TOrderItemsDetailRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_ORDER_ITEMS_DETAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOrderItemsDetailRecord> getPrimaryKey() {
        return Keys.KEY_T_ORDER_ITEMS_DETAIL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOrderItemsDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<TOrderItemsDetailRecord>>asList(Keys.KEY_T_ORDER_ITEMS_DETAIL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderItemsDetail as(String alias) {
        return new TOrderItemsDetail(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderItemsDetail as(Name alias) {
        return new TOrderItemsDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderItemsDetail rename(String name) {
        return new TOrderItemsDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderItemsDetail rename(Name name) {
        return new TOrderItemsDetail(name, null);
    }
}
