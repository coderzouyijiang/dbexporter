/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TOrderBillDetailRecord;

import java.math.BigDecimal;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOrderBillDetail extends TableImpl<TOrderBillDetailRecord> {

    private static final long serialVersionUID = -351963968;

    /**
     * The reference instance of <code>db_mall.t_order_bill_detail</code>
     */
    public static final TOrderBillDetail T_ORDER_BILL_DETAIL = new TOrderBillDetail();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOrderBillDetailRecord> getRecordType() {
        return TOrderBillDetailRecord.class;
    }

    /**
     * The column <code>db_mall.t_order_bill_detail.id</code>.
     */
    public final TableField<TOrderBillDetailRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_order_bill_detail.bill_id</code>. 账单id
     */
    public final TableField<TOrderBillDetailRecord, Long> BILL_ID = createField("bill_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "账单id");

    /**
     * The column <code>db_mall.t_order_bill_detail.item_detail_id</code>. 设备标识
     */
    public final TableField<TOrderBillDetailRecord, Integer> ITEM_DETAIL_ID = createField("item_detail_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "设备标识");

    /**
     * The column <code>db_mall.t_order_bill_detail.amount</code>. 金额
     */
    public final TableField<TOrderBillDetailRecord, BigDecimal> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.DECIMAL(10, 2).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0.00", org.jooq.impl.SQLDataType.DECIMAL)), this, "金额");

    /**
     * The column <code>db_mall.t_order_bill_detail.type_id</code>. 类型
     */
    public final TableField<TOrderBillDetailRecord, Integer> TYPE_ID = createField("type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "类型");

    /**
     * The column <code>db_mall.t_order_bill_detail.status</code>. 支付状态（0未支付1已支付）
     */
    public final TableField<TOrderBillDetailRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "支付状态（0未支付1已支付）");

    /**
     * The column <code>db_mall.t_order_bill_detail.cdate</code>.
     */
    public final TableField<TOrderBillDetailRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>db_mall.t_order_bill_detail.mdate</code>.
     */
    public final TableField<TOrderBillDetailRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>db_mall.t_order_bill_detail.is_return</code>. 账单所在月设备是否退回（0否1是）
     */
    public final TableField<TOrderBillDetailRecord, Byte> IS_RETURN = createField("is_return", org.jooq.impl.SQLDataType.TINYINT.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "账单所在月设备是否退回（0否1是）");

    /**
     * The column <code>db_mall.t_order_bill_detail.customer_id</code>. 客户id
     */
    public final TableField<TOrderBillDetailRecord, Integer> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "客户id");

    /**
     * The column <code>db_mall.t_order_bill_detail.order_id</code>.
     */
    public final TableField<TOrderBillDetailRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>db_mall.t_order_bill_detail.main_order_id</code>. 主订单id
     */
    public final TableField<TOrderBillDetailRecord, String> MAIN_ORDER_ID = createField("main_order_id", org.jooq.impl.SQLDataType.VARCHAR(20).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "主订单id");

    /**
     * The column <code>db_mall.t_order_bill_detail.balance_date</code>. 账单日
     */
    public final TableField<TOrderBillDetailRecord, Integer> BALANCE_DATE = createField("balance_date", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "账单日");

    /**
     * The column <code>db_mall.t_order_bill_detail.month</code>. 第几个月
     */
    public final TableField<TOrderBillDetailRecord, Integer> MONTH = createField("month", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "第几个月");

    /**
     * The column <code>db_mall.t_order_bill_detail.diff_days</code>. 末月租金天数
     */
    public final TableField<TOrderBillDetailRecord, Integer> DIFF_DAYS = createField("diff_days", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "末月租金天数");

    /**
     * Create a <code>db_mall.t_order_bill_detail</code> table reference
     */
    public TOrderBillDetail() {
        this(DSL.name("t_order_bill_detail"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_order_bill_detail</code> table reference
     */
    public TOrderBillDetail(String alias) {
        this(DSL.name(alias), T_ORDER_BILL_DETAIL);
    }

    /**
     * Create an aliased <code>db_mall.t_order_bill_detail</code> table reference
     */
    public TOrderBillDetail(Name alias) {
        this(alias, T_ORDER_BILL_DETAIL);
    }

    private TOrderBillDetail(Name alias, Table<TOrderBillDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOrderBillDetail(Name alias, Table<TOrderBillDetailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TOrderBillDetail(Table<O> child, ForeignKey<O, TOrderBillDetailRecord> key) {
        super(child, key, T_ORDER_BILL_DETAIL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_ORDER_BILL_DETAIL_BTI, Indexes.T_ORDER_BILL_DETAIL_IDX_ORDER_ID, Indexes.T_ORDER_BILL_DETAIL_ITEM_DETAIL_ID, Indexes.T_ORDER_BILL_DETAIL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TOrderBillDetailRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_ORDER_BILL_DETAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOrderBillDetailRecord> getPrimaryKey() {
        return Keys.KEY_T_ORDER_BILL_DETAIL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOrderBillDetailRecord>> getKeys() {
        return Arrays.<UniqueKey<TOrderBillDetailRecord>>asList(Keys.KEY_T_ORDER_BILL_DETAIL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderBillDetail as(String alias) {
        return new TOrderBillDetail(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOrderBillDetail as(Name alias) {
        return new TOrderBillDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderBillDetail rename(String name) {
        return new TOrderBillDetail(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TOrderBillDetail rename(Name name) {
        return new TOrderBillDetail(name, null);
    }
}
