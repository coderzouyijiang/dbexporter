/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.AssetsReceiverRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssetsReceiver extends TableImpl<AssetsReceiverRecord> {

    private static final long serialVersionUID = 746848203;

    /**
     * The reference instance of <code>db_mall.assets_receiver</code>
     */
    public static final AssetsReceiver ASSETS_RECEIVER = new AssetsReceiver();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AssetsReceiverRecord> getRecordType() {
        return AssetsReceiverRecord.class;
    }

    /**
     * The column <code>db_mall.assets_receiver.id</code>.
     */
    public final TableField<AssetsReceiverRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.assets_receiver.customer_id</code>. 用户id/登录客户id
     */
    public final TableField<AssetsReceiverRecord, Long> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "用户id/登录客户id");

    /**
     * The column <code>db_mall.assets_receiver.name</code>. 姓名
     */
    public final TableField<AssetsReceiverRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "姓名");

    /**
     * The column <code>db_mall.assets_receiver.primary_sector</code>. 一级部门
     */
    public final TableField<AssetsReceiverRecord, String> PRIMARY_SECTOR = createField("primary_sector", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "一级部门");

    /**
     * The column <code>db_mall.assets_receiver.secondary_sector</code>. 二级部门
     */
    public final TableField<AssetsReceiverRecord, String> SECONDARY_SECTOR = createField("secondary_sector", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "二级部门");

    /**
     * The column <code>db_mall.assets_receiver.company_name</code>. 所属公司
     */
    public final TableField<AssetsReceiverRecord, String> COMPANY_NAME = createField("company_name", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "所属公司");

    /**
     * The column <code>db_mall.assets_receiver.office_address</code>. 办公地点
     */
    public final TableField<AssetsReceiverRecord, String> OFFICE_ADDRESS = createField("office_address", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "办公地点");

    /**
     * The column <code>db_mall.assets_receiver.cdate</code>.
     */
    public final TableField<AssetsReceiverRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0000-00-00 00:00:00", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>db_mall.assets_receiver.mdate</code>.
     */
    public final TableField<AssetsReceiverRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>db_mall.assets_receiver</code> table reference
     */
    public AssetsReceiver() {
        this(DSL.name("assets_receiver"), null);
    }

    /**
     * Create an aliased <code>db_mall.assets_receiver</code> table reference
     */
    public AssetsReceiver(String alias) {
        this(DSL.name(alias), ASSETS_RECEIVER);
    }

    /**
     * Create an aliased <code>db_mall.assets_receiver</code> table reference
     */
    public AssetsReceiver(Name alias) {
        this(alias, ASSETS_RECEIVER);
    }

    private AssetsReceiver(Name alias, Table<AssetsReceiverRecord> aliased) {
        this(alias, aliased, null);
    }

    private AssetsReceiver(Name alias, Table<AssetsReceiverRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> AssetsReceiver(Table<O> child, ForeignKey<O, AssetsReceiverRecord> key) {
        super(child, key, ASSETS_RECEIVER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ASSETS_RECEIVER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<AssetsReceiverRecord, Long> getIdentity() {
        return Keys.IDENTITY_ASSETS_RECEIVER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AssetsReceiverRecord> getPrimaryKey() {
        return Keys.KEY_ASSETS_RECEIVER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AssetsReceiverRecord>> getKeys() {
        return Arrays.<UniqueKey<AssetsReceiverRecord>>asList(Keys.KEY_ASSETS_RECEIVER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssetsReceiver as(String alias) {
        return new AssetsReceiver(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssetsReceiver as(Name alias) {
        return new AssetsReceiver(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AssetsReceiver rename(String name) {
        return new AssetsReceiver(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AssetsReceiver rename(Name name) {
        return new AssetsReceiver(name, null);
    }
}
