/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TMacLogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TMacLog extends TableImpl<TMacLogRecord> {

    private static final long serialVersionUID = -1300888338;

    /**
     * The reference instance of <code>db_mall.t_mac_log</code>
     */
    public static final TMacLog T_MAC_LOG = new TMacLog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TMacLogRecord> getRecordType() {
        return TMacLogRecord.class;
    }

    /**
     * The column <code>db_mall.t_mac_log.id</code>.
     */
    public final TableField<TMacLogRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_mac_log.mac_value</code>. value
     */
    public final TableField<TMacLogRecord, String> MAC_VALUE = createField("mac_value", org.jooq.impl.SQLDataType.VARCHAR(2000).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "value");

    /**
     * The column <code>db_mall.t_mac_log.lat</code>. 纬度
     */
    public final TableField<TMacLogRecord, String> LAT = createField("lat", org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "纬度");

    /**
     * The column <code>db_mall.t_mac_log.lng</code>. 经度
     */
    public final TableField<TMacLogRecord, String> LNG = createField("lng", org.jooq.impl.SQLDataType.VARCHAR(100).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "经度");

    /**
     * The column <code>db_mall.t_mac_log.volt</code>.
     */
    public final TableField<TMacLogRecord, String> VOLT = createField("volt", org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>db_mall.t_mac_log.cdate</code>. 创建时间
     */
    public final TableField<TMacLogRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>db_mall.t_mac_log.mdate</code>. 修改时间
     */
    public final TableField<TMacLogRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * Create a <code>db_mall.t_mac_log</code> table reference
     */
    public TMacLog() {
        this(DSL.name("t_mac_log"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_mac_log</code> table reference
     */
    public TMacLog(String alias) {
        this(DSL.name(alias), T_MAC_LOG);
    }

    /**
     * Create an aliased <code>db_mall.t_mac_log</code> table reference
     */
    public TMacLog(Name alias) {
        this(alias, T_MAC_LOG);
    }

    private TMacLog(Name alias, Table<TMacLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private TMacLog(Name alias, Table<TMacLogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TMacLog(Table<O> child, ForeignKey<O, TMacLogRecord> key) {
        super(child, key, T_MAC_LOG);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_MAC_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TMacLogRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_MAC_LOG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TMacLogRecord> getPrimaryKey() {
        return Keys.KEY_T_MAC_LOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TMacLogRecord>> getKeys() {
        return Arrays.<UniqueKey<TMacLogRecord>>asList(Keys.KEY_T_MAC_LOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TMacLog as(String alias) {
        return new TMacLog(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TMacLog as(Name alias) {
        return new TMacLog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TMacLog rename(String name) {
        return new TMacLog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TMacLog rename(Name name) {
        return new TMacLog(name, null);
    }
}
