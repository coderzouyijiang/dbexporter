/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TOverdueCustomerRecord;

import java.math.BigDecimal;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TOverdueCustomer extends TableImpl<TOverdueCustomerRecord> {

    private static final long serialVersionUID = -25007862;

    /**
     * The reference instance of <code>db_mall.t_overdue_customer</code>
     */
    public static final TOverdueCustomer T_OVERDUE_CUSTOMER = new TOverdueCustomer();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TOverdueCustomerRecord> getRecordType() {
        return TOverdueCustomerRecord.class;
    }

    /**
     * The column <code>db_mall.t_overdue_customer.id</code>.
     */
    public final TableField<TOverdueCustomerRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_overdue_customer.balance_date</code>. 账单日
     */
    public final TableField<TOverdueCustomerRecord, Integer> BALANCE_DATE = createField("balance_date", org.jooq.impl.SQLDataType.INTEGER, this, "账单日");

    /**
     * The column <code>db_mall.t_overdue_customer.balance_date_customer</code>. 出账日客户数量
     */
    public final TableField<TOverdueCustomerRecord, Integer> BALANCE_DATE_CUSTOMER = createField("balance_date_customer", org.jooq.impl.SQLDataType.INTEGER, this, "出账日客户数量");

    /**
     * The column <code>db_mall.t_overdue_customer.over_due_7_customer</code>. 逾期超过7天客户数量
     */
    public final TableField<TOverdueCustomerRecord, Integer> OVER_DUE_7_CUSTOMER = createField("over_due_7_customer", org.jooq.impl.SQLDataType.INTEGER, this, "逾期超过7天客户数量");

    /**
     * The column <code>db_mall.t_overdue_customer.over_due_7_customer_percent</code>. 逾期超过7天客户率
     */
    public final TableField<TOverdueCustomerRecord, BigDecimal> OVER_DUE_7_CUSTOMER_PERCENT = createField("over_due_7_customer_percent", org.jooq.impl.SQLDataType.DECIMAL(15, 2), this, "逾期超过7天客户率");

    /**
     * The column <code>db_mall.t_overdue_customer.over_due_90_customer</code>. 逾期超过90天客户数量
     */
    public final TableField<TOverdueCustomerRecord, Integer> OVER_DUE_90_CUSTOMER = createField("over_due_90_customer", org.jooq.impl.SQLDataType.INTEGER, this, "逾期超过90天客户数量");

    /**
     * The column <code>db_mall.t_overdue_customer.over_due_90_customer_percent</code>. 逾期超过90天客户率
     */
    public final TableField<TOverdueCustomerRecord, BigDecimal> OVER_DUE_90_CUSTOMER_PERCENT = createField("over_due_90_customer_percent", org.jooq.impl.SQLDataType.DECIMAL(15, 2), this, "逾期超过90天客户率");

    /**
     * The column <code>db_mall.t_overdue_customer.over_due_7_90_customer</code>. 逾期超过7-90天客户数量
     */
    public final TableField<TOverdueCustomerRecord, Integer> OVER_DUE_7_90_CUSTOMER = createField("over_due_7_90_customer", org.jooq.impl.SQLDataType.INTEGER, this, "逾期超过7-90天客户数量");

    /**
     * The column <code>db_mall.t_overdue_customer.over_due_7_90_customer_percent</code>. 逾期超过7-90天客户率
     */
    public final TableField<TOverdueCustomerRecord, BigDecimal> OVER_DUE_7_90_CUSTOMER_PERCENT = createField("over_due_7_90_customer_percent", org.jooq.impl.SQLDataType.DECIMAL(15, 2), this, "逾期超过7-90天客户率");

    /**
     * Create a <code>db_mall.t_overdue_customer</code> table reference
     */
    public TOverdueCustomer() {
        this(DSL.name("t_overdue_customer"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_overdue_customer</code> table reference
     */
    public TOverdueCustomer(String alias) {
        this(DSL.name(alias), T_OVERDUE_CUSTOMER);
    }

    /**
     * Create an aliased <code>db_mall.t_overdue_customer</code> table reference
     */
    public TOverdueCustomer(Name alias) {
        this(alias, T_OVERDUE_CUSTOMER);
    }

    private TOverdueCustomer(Name alias, Table<TOverdueCustomerRecord> aliased) {
        this(alias, aliased, null);
    }

    private TOverdueCustomer(Name alias, Table<TOverdueCustomerRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TOverdueCustomer(Table<O> child, ForeignKey<O, TOverdueCustomerRecord> key) {
        super(child, key, T_OVERDUE_CUSTOMER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_OVERDUE_CUSTOMER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TOverdueCustomerRecord, Long> getIdentity() {
        return Keys.IDENTITY_T_OVERDUE_CUSTOMER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TOverdueCustomerRecord> getPrimaryKey() {
        return Keys.KEY_T_OVERDUE_CUSTOMER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TOverdueCustomerRecord>> getKeys() {
        return Arrays.<UniqueKey<TOverdueCustomerRecord>>asList(Keys.KEY_T_OVERDUE_CUSTOMER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOverdueCustomer as(String alias) {
        return new TOverdueCustomer(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TOverdueCustomer as(Name alias) {
        return new TOverdueCustomer(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TOverdueCustomer rename(String name) {
        return new TOverdueCustomer(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TOverdueCustomer rename(Name name) {
        return new TOverdueCustomer(name, null);
    }
}
