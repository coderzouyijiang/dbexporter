/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TCutbillDepositOrderRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 押金全付+用押金抵扣租金的方式的订单表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TCutbillDepositOrder extends TableImpl<TCutbillDepositOrderRecord> {

    private static final long serialVersionUID = 1843258057;

    /**
     * The reference instance of <code>db_mall.t_cutbill_deposit_order</code>
     */
    public static final TCutbillDepositOrder T_CUTBILL_DEPOSIT_ORDER = new TCutbillDepositOrder();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TCutbillDepositOrderRecord> getRecordType() {
        return TCutbillDepositOrderRecord.class;
    }

    /**
     * The column <code>db_mall.t_cutbill_deposit_order.id</code>.
     */
    public final TableField<TCutbillDepositOrderRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>db_mall.t_cutbill_deposit_order.order_id</code>. 子订单号
     */
    public final TableField<TCutbillDepositOrderRecord, String> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.VARCHAR(30).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "子订单号");

    /**
     * The column <code>db_mall.t_cutbill_deposit_order.product_id</code>. 商品ID
     */
    public final TableField<TCutbillDepositOrderRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "商品ID");

    /**
     * The column <code>db_mall.t_cutbill_deposit_order.customer_id</code>. 用户id
     */
    public final TableField<TCutbillDepositOrderRecord, Integer> CUSTOMER_ID = createField("customer_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "用户id");

    /**
     * The column <code>db_mall.t_cutbill_deposit_order.title</code>. 主标题
     */
    public final TableField<TCutbillDepositOrderRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(300), this, "主标题");

    /**
     * The column <code>db_mall.t_cutbill_deposit_order.rent_type</code>. 为方便以后扩展别的方式的订单，0销售 1：随租随还 2：经营租赁 3：融资租赁,4押金全付+押金自动抵扣租金
     */
    public final TableField<TCutbillDepositOrderRecord, Byte> RENT_TYPE = createField("rent_type", org.jooq.impl.SQLDataType.TINYINT, this, "为方便以后扩展别的方式的订单，0销售 1：随租随还 2：经营租赁 3：融资租赁,4押金全付+押金自动抵扣租金");

    /**
     * The column <code>db_mall.t_cutbill_deposit_order.status</code>. 状态：0无效，1有效  (有效订单才会去刷账单)
     */
    public final TableField<TCutbillDepositOrderRecord, Byte> STATUS = createField("status", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "状态：0无效，1有效  (有效订单才会去刷账单)");

    /**
     * The column <code>db_mall.t_cutbill_deposit_order.cdate</code>. 订单创建时间
     */
    public final TableField<TCutbillDepositOrderRecord, Timestamp> CDATE = createField("cdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "订单创建时间");

    /**
     * The column <code>db_mall.t_cutbill_deposit_order.mdate</code>. 订单修改时间
     */
    public final TableField<TCutbillDepositOrderRecord, Timestamp> MDATE = createField("mdate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "订单修改时间");

    /**
     * Create a <code>db_mall.t_cutbill_deposit_order</code> table reference
     */
    public TCutbillDepositOrder() {
        this(DSL.name("t_cutbill_deposit_order"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_cutbill_deposit_order</code> table reference
     */
    public TCutbillDepositOrder(String alias) {
        this(DSL.name(alias), T_CUTBILL_DEPOSIT_ORDER);
    }

    /**
     * Create an aliased <code>db_mall.t_cutbill_deposit_order</code> table reference
     */
    public TCutbillDepositOrder(Name alias) {
        this(alias, T_CUTBILL_DEPOSIT_ORDER);
    }

    private TCutbillDepositOrder(Name alias, Table<TCutbillDepositOrderRecord> aliased) {
        this(alias, aliased, null);
    }

    private TCutbillDepositOrder(Name alias, Table<TCutbillDepositOrderRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("押金全付+用押金抵扣租金的方式的订单表"));
    }

    public <O extends Record> TCutbillDepositOrder(Table<O> child, ForeignKey<O, TCutbillDepositOrderRecord> key) {
        super(child, key, T_CUTBILL_DEPOSIT_ORDER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_CUTBILL_DEPOSIT_ORDER_ORDER_ID, Indexes.T_CUTBILL_DEPOSIT_ORDER_PRIMARY, Indexes.T_CUTBILL_DEPOSIT_ORDER_STATUS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TCutbillDepositOrderRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_CUTBILL_DEPOSIT_ORDER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TCutbillDepositOrderRecord> getPrimaryKey() {
        return Keys.KEY_T_CUTBILL_DEPOSIT_ORDER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TCutbillDepositOrderRecord>> getKeys() {
        return Arrays.<UniqueKey<TCutbillDepositOrderRecord>>asList(Keys.KEY_T_CUTBILL_DEPOSIT_ORDER_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCutbillDepositOrder as(String alias) {
        return new TCutbillDepositOrder(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TCutbillDepositOrder as(Name alias) {
        return new TCutbillDepositOrder(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TCutbillDepositOrder rename(String name) {
        return new TCutbillDepositOrder(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TCutbillDepositOrder rename(Name name) {
        return new TCutbillDepositOrder(name, null);
    }
}
