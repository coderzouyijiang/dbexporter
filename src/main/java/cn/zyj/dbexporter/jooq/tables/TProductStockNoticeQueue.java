/*
 * This file is generated by jOOQ.
 */
package cn.zyj.dbexporter.jooq.tables;


import cn.zyj.dbexporter.jooq.DbMall;
import cn.zyj.dbexporter.jooq.Indexes;
import cn.zyj.dbexporter.jooq.Keys;
import cn.zyj.dbexporter.jooq.tables.records.TProductStockNoticeQueueRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 商品库存提醒队列
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TProductStockNoticeQueue extends TableImpl<TProductStockNoticeQueueRecord> {

    private static final long serialVersionUID = -160685233;

    /**
     * The reference instance of <code>db_mall.t_product_stock_notice_queue</code>
     */
    public static final TProductStockNoticeQueue T_PRODUCT_STOCK_NOTICE_QUEUE = new TProductStockNoticeQueue();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TProductStockNoticeQueueRecord> getRecordType() {
        return TProductStockNoticeQueueRecord.class;
    }

    /**
     * The column <code>db_mall.t_product_stock_notice_queue.id</code>. 自增主键
     */
    public final TableField<TProductStockNoticeQueueRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "自增主键");

    /**
     * The column <code>db_mall.t_product_stock_notice_queue.product_id</code>. 商品id
     */
    public final TableField<TProductStockNoticeQueueRecord, Integer> PRODUCT_ID = createField("product_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "商品id");

    /**
     * The column <code>db_mall.t_product_stock_notice_queue.notice_type</code>. 通知类型 0邮件 1钉钉通知
     */
    public final TableField<TProductStockNoticeQueueRecord, Byte> NOTICE_TYPE = createField("notice_type", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "通知类型 0邮件 1钉钉通知");

    /**
     * The column <code>db_mall.t_product_stock_notice_queue.is_notice</code>. 是否已通知 0否，1是
     */
    public final TableField<TProductStockNoticeQueueRecord, Byte> IS_NOTICE = createField("is_notice", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "是否已通知 0否，1是");

    /**
     * The column <code>db_mall.t_product_stock_notice_queue.create_time</code>. 创建时间
     */
    public final TableField<TProductStockNoticeQueueRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "创建时间");

    /**
     * The column <code>db_mall.t_product_stock_notice_queue.update_time</code>. 修改时间
     */
    public final TableField<TProductStockNoticeQueueRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "修改时间");

    /**
     * Create a <code>db_mall.t_product_stock_notice_queue</code> table reference
     */
    public TProductStockNoticeQueue() {
        this(DSL.name("t_product_stock_notice_queue"), null);
    }

    /**
     * Create an aliased <code>db_mall.t_product_stock_notice_queue</code> table reference
     */
    public TProductStockNoticeQueue(String alias) {
        this(DSL.name(alias), T_PRODUCT_STOCK_NOTICE_QUEUE);
    }

    /**
     * Create an aliased <code>db_mall.t_product_stock_notice_queue</code> table reference
     */
    public TProductStockNoticeQueue(Name alias) {
        this(alias, T_PRODUCT_STOCK_NOTICE_QUEUE);
    }

    private TProductStockNoticeQueue(Name alias, Table<TProductStockNoticeQueueRecord> aliased) {
        this(alias, aliased, null);
    }

    private TProductStockNoticeQueue(Name alias, Table<TProductStockNoticeQueueRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("商品库存提醒队列"));
    }

    public <O extends Record> TProductStockNoticeQueue(Table<O> child, ForeignKey<O, TProductStockNoticeQueueRecord> key) {
        super(child, key, T_PRODUCT_STOCK_NOTICE_QUEUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DbMall.DB_MALL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.T_PRODUCT_STOCK_NOTICE_QUEUE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TProductStockNoticeQueueRecord, Integer> getIdentity() {
        return Keys.IDENTITY_T_PRODUCT_STOCK_NOTICE_QUEUE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TProductStockNoticeQueueRecord> getPrimaryKey() {
        return Keys.KEY_T_PRODUCT_STOCK_NOTICE_QUEUE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TProductStockNoticeQueueRecord>> getKeys() {
        return Arrays.<UniqueKey<TProductStockNoticeQueueRecord>>asList(Keys.KEY_T_PRODUCT_STOCK_NOTICE_QUEUE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductStockNoticeQueue as(String alias) {
        return new TProductStockNoticeQueue(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TProductStockNoticeQueue as(Name alias) {
        return new TProductStockNoticeQueue(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductStockNoticeQueue rename(String name) {
        return new TProductStockNoticeQueue(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TProductStockNoticeQueue rename(Name name) {
        return new TProductStockNoticeQueue(name, null);
    }
}
